{"version":3,"sources":["stores sync nonrecursive //.js$","stores/DeviceDefineStore.js","utils/htmlTag.js","utils/request.js","utils/parseUrl.js","stores/DeviceMaintainStore.js","stores/TitleConfigStore.js","routes/home.js","routes/index.js","serviceWorker.js","constants/global_config.js","index.js","services/work.js","stores/WorkStore.js","services/zcloud.js","stores/ZCloudDeviceStore.js","services/statistics.js","stores/StatisticsStore.js","services/spareparts.js","stores/SparepartsStore.js","services/home.js","stores/HomeStore.js","services/system.js","stores/SystemStore.js","components/ComponentLoading/index.js","utils/dataTools.js","constants/configs.js","stores/index.js","services/basic.js"],"names":["map","./DeviceDefineStore.js","./DeviceMaintainStore.js","./HomeStore.js","./SparepartsStore.js","./StatisticsStore.js","./SystemStore.js","./TitleConfigStore.js","./WorkStore.js","./ZCloudDeviceStore.js","./index.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","DeviceDefineStore","action","bound","params","this","isLoading","data","pageIndex","pageSize","current","modelName","searchName","typeName","services","res","isDataExist","typeList","items","typePage","page","console","log","_context","t0","antd_lib_message__WEBPACK_IMPORTED_MODULE_1___default","a","success","_context2","getType","getSelectType","type","_context3","_context4","fileList","_context5","selectType","_context7","selectModel","_context8","selectDevice","_context9","_this","stepList","item","index","assign","status","isDevLoading","queryType","deviceType","deviceName","startTime","endTime","customerId","searchCondition","devStandList","devStandPage","devStandCols","dataExt","_context10","devList","devPage","_context11","codeVisible","codeInfo","sortList","_context13","_context14","devCurrent","_context15","employeeList","_context16","getDevList","_context19","key","value","customerList","_context20","deviceLog","JSON","parse","stringify","concat","deviceLogPage","_context21","logDetailList","_context22","observable","title","backgroundUrl","codePosition","info","sort","decodeHtml","text","temp","document","createElement","innerHTML","output","innerText","textContent","defaultOptions","ignoreError","request","url","options","objectSpread","fetch","then","checkStatus","parseJSON","response","SUCCESS_CODE","includes","SuccessResponse","ErrorResponse","modal_default","warning","content","okText","onOk","window","location","href","host","checkResponse","catch","err","msg","errorType","responseError","error","message","handleResError","ErrorHandlers","callback","afterClose","handleError","post","method","credentials","headers","Accept","Content-Type","token","injectSelfToken","body","put","get","arguments","length","undefined","AbstractResponse","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","obj","filter","k","esm_typeof","encodeURIComponent","join","401.1","source","protocol","replace","hostname","port","query","search","s","ret","seg","split","len","i","file","pathname","match","hash","path","relative","segments","parseURL","searchs","searchString","querystringParse","querystring","redirectUrl","forEach","push","newUrl","verifyCodeInvalid","NoPermission.Directory","json","statusText","sessionStorage","getItem","DeviceMaintainStore","deviceList","_Users_nxy_Desktop_daily_project_bl_device_manage_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","maintainType","serverList","schemaList","schemaPage","pageInfo","typeId","getMaintainServer","getMaintainSchema","currentMainServer","currentMainSchame","_context6","TitleConfigStore","titleList","extParams","antd_lib_message__WEBPACK_IMPORTED_MODULE_2___default","getTitle","_Users_nxy_Desktop_daily_project_bl_device_manage_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","HomeRouter","Loadable","loader","Promise","all","bind","loading","LoadingComponent","LoginPage","StudioPage","StudioDevice","ZWordView","RootRouter","_react_16_8_6_react_default","react_router_dom","react_router","component","PureComponent","Boolean","GLOBAL_PARAMS","locale","moment","ReactDOM","render","index_module","store","routes_RootRouter","getElementById","navigator","serviceWorker","ready","registration","unregister","requestList","getWork","saveWork","getWorkLog","getCountByWorkerId","getWorkAuth","getDetailLog","gets","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","prev","next","abrupt","sent","stop","_x","_x2","apply","posts","_ref2","_callee2","_x3","_x4","WorkStore","init","progress","finish","workList","workPage","workCols","message_default","workLog","workerAuth","workDetailList","getDevice","getDeviceList","getMaintain","batchRemove","singleRemove","addMaintain","updateMaintain","getServeInfo","getScheme","batchDelSchema","delSchema","saveSchema","updateSchema","schemaInfo","getPlan","toDetail","savePlan","delPlan","batchDelPlan","getPlanInfo","getDeviceByType","getSchemaByType","getDeviceByOp","getOperateList","getListByContentIds","saveOperate","getQuery","getMonitor","planType","maintainPage","maintainList","currentMain","schemePage","schemeList","checkPlanPage","checkPlanList","deviceByIdList","schemaByIdList","_context12","excuteTime","op_deviceList","deviceId","operatePage","operateList","_context17","listByContentsIds","_context18","queryList","queryPage","result","queryResult","monitorList","devId","detailId","detailList","_context23","requestUrl","getRequest","_getRequest","StatisticsStore","tableData","breakenInfo","breakenPage","isSelf","workInfo","logInfo","searchDate","open","columnsType","modalVisible","getSpareType","saveSpareType","deleteSpareType","allSpareType","getSpare","saveSpare","spareAll","deleteSpare","getDeviceType","operationSpare","spareRecordList","warnList","getByType","export","putRequest","_x5","_x6","_putRequest","SparepartsStore","PageInfo","inPutLogData","ids","spareList","devTypeList","label","toString","getAllOdd","oddList","record","_this2","formData","modalType","_this3","modalTitle","spareName","getList","setLogin","getMenuList","getCustomMenu","workEndInfo","deviceInfo","staffInfo","uuid","require","HomeStore","setLastMenuHistory","actionItem","actionId","history","isEmpty","splice","uniqBy","setItem","finished","menuObj","toJS","children","lv","displayNone","name","leafMenuModels","lv2","parentId","isAuth","currentMenu","crumbsList","leaf","indexOf","selectedKeys","openKeys","activeRouter","lv3","checkCurrentMenu","toggledActionId","addInfo","date","currentDate","getDay","number","time","Number","day","today","Date","targetday_milliseconds","getTime","setTime","getFullYear","getMonth","slice","getDate","devInfo","MenuObj","First_Menu_List","_x7","_x8","_x9","_callee3","OrderDefineStore","arr","transTreeData","allDept","treeData","menuIds","roleList","roleName","DepList","CumList","SupList","menuData","tagList","selectedRows","customerName","deptId","innerModalVisible","delFlag","customerStatus","findChild","curPid","_arr","_this4","_obj","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","__webpack_exports__","className","d","initSearchQuery","judgeIsMobile","getCookie","setCookie","clearCookie","lodash__WEBPACK_IMPORTED_MODULE_0__","isExist","per","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","return","c_name","cookie","c_start","c_end","unescape","substring","seconds","expires","toGMTString","escape","work_ChildrenMenu","Media_Query","s_size","m_size","l_size","iconfontFont","iconfont","icon","screen-xs","maxWidth","screen-sm","minWidth","screen-md","screen-lg","screen-xl","screen-xxl","r","context","stores","p1","default","saveType","deleteType","batchDeleteType","getModel","saveModel","deleteModel","batchDeleteModal","getSelectModel","getSelectDevice","getDeviceFileList","deleteFile","downloadFile","getDevInfo","getUsersByRoles","deleteDevice","saveDevice","saveQrcode","getQrcode","downloadModule","ImportModule","getDevStanding","getCustomerList","getDeviceLog","getServerInfo","saveServer","deleteServer","getSchemaInfo","deleteSchema","saveTitle","_Users_nxy_Desktop_daily_project_bl_device_manage_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"static/js/main.31a156a6.chunk.js","sourcesContent":["var map = {\n\t\"./DeviceDefineStore.js\": 148,\n\t\"./DeviceMaintainStore.js\": 221,\n\t\"./HomeStore.js\": 239,\n\t\"./SparepartsStore.js\": 238,\n\t\"./StatisticsStore.js\": 237,\n\t\"./SystemStore.js\": 240,\n\t\"./TitleConfigStore.js\": 225,\n\t\"./WorkStore.js\": 235,\n\t\"./ZCloudDeviceStore.js\": 236,\n\t\"./index.js\": 86\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 147;","import { observable, action, } from 'mobx';\nimport { isDataExist } from 'Utils/dataTools';\nimport * as services from '../services/basic';\n// import { omit } from 'lodash'\nimport { message } from 'antd';\n\nclass DeviceDefine {\n  @observable typeList = []\n  @observable typePage = {}\n  @observable current = '1'\n  @observable stepList = [\n    { id: 1, title: \"类型管理\", status: 'process' },\n    { id: 2, title: \"型号管理\", status: 'wait' },\n    { id: 3, title: \"设备列表\", status: 'wait' },\n  ]\n  @observable status = 'add'\n  @observable visible = false\n  @observable codeVisible = false\n  @observable devTypeList = []\n  @observable currentMain = {}\n  @observable fileList = []\n  @observable selectModel = []\n  @observable selectType = []\n  @observable selectDevice = []\n  @observable selectedRowKeys = []\n  @observable isLoading = false\n  @observable searchName = ''\n\n  /* ------------设备定义------获取设备类型列表 */\n  @action async getType(params = {}) {\n    this.isLoading = true;\n    try {\n      let data = {\n        pageIndex: 1, pageSize: 10,\n        ...params,\n      };\n      if (params) {\n        if (this.current === '2') {\n          data.modelName = this.searchName\n        } else {\n          data.typeName = this.searchName\n        }\n      }\n      let req = this.current === '1' ? 'getType' : 'getModel';\n      let res = await services.gets(req)(data);\n      this.isLoading = false;\n      if (isDataExist(res)) {\n        this.typeList = res.data.data.items;\n        this.typePage = res.data.data.page;\n      }\n\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  @action async saveType(params) {\n\n    try {\n      let req = this.current === '1' ? 'saveType' : 'saveModel';\n      let res = await services.posts(req)(params)\n      if (isDataExist(res)) {\n        message.success('保存成功')\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    this.getType();\n    this.getSelectType();\n    // this.getSelectModel();\n  }\n  @action async delType(params, type) {\n    try {\n      let req = this.current === '1' ? type === 'batch' ? 'batchDeleteType' : 'deleteType' :\n        type === 'batch' ? 'deleteBatchModal' : 'deleteModal';\n      let res = await services.posts(req)(params)\n      if (isDataExist(res)) {\n        message.success('删除成功')\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    this.getType();\n  }\n  /* 删除文件类型 */\n  @action async delFile(params) {\n    try {\n      let res = await services.posts('deleteFile')(params)\n      if (isDataExist(res)) {\n        message.success('删除成功')\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  /* 获取设备文件 */\n  @action async getDeviceFileList(params) {\n    this.isLoading = true;\n    try {\n      let res = await services.gets('getDeviceFileList')(params)\n      this.isLoading = false;\n      if (isDataExist(res)) {\n        this.fileList = res.data.data;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  @action async downloadFile(params) {\n    try {\n      let res = await services.gets('downloadFile')(params);\n      if (isDataExist(res)) {\n        message.success('下载成功！')\n      }\n    } catch (e) { }\n  }\n  /* 获取所有的设备类型 */\n  @action async getSelectType(params) {\n    try {\n      let res = await services.gets('getSelectType')(params)\n      if (isDataExist(res)) {\n        this.selectType = res.data.data;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  /* 获取设备型号 */\n  @action async getSelectModel(params) {\n    this.isLoading = true;\n    try {\n      let res = await services.gets('getSelectModel')(params)\n      this.isLoading = false;\n      if (isDataExist(res)) {\n        this.selectModel = res.data.data;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  /* 获取设备 */\n  @action async getSelectDevice(params) {\n    console.log(params)\n    this.isLoading = true;\n    try {\n      let res = await services.gets('getSelectDevice')(params)\n      this.isLoading = false;\n      if (isDataExist(res)) {\n        this.selectDevice = res.data.data;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  @action changeStep() {\n    this.stepList.map((item, index) => {\n      if (index === this.current) {\n        Object.assign(item, {\n          status: 'process'\n        })\n      } else {\n        Object.assign(item, {\n          status: 'wait'\n        })\n      }\n    })\n  }\n\n\n  /* --------------设备列表 */\n  @observable devList = []\n  @observable devPage = {}\n  @observable codeInfo = {}\n  @observable sortList = []\n  @observable listVisible = false\n  @observable listStatus = 'add'\n  @observable isDevLoading = false\n  @observable devCurrent = {}\n  @observable devListSelectedRowKeys = []\n  @observable queryType = 1\n  @observable employeeList = []\n  @observable searchCondition = {}\n  @observable devStandList = []\n  @observable devStandPage = []\n  @observable devStandCols = []\n  @observable qrcodeInfo = {\n    \"id\": 1,\n    \"backgroundUrl\": \"/img.png\",\n    \"codePosition\":1,\n    \"info\": [\n      {\n        \"key\": \"deviceName\",\n        \"title\": \"设备名称\",\n        \"sort\": 1,\n        \"id\": 1\n      },\n      {\n        \"key\": \"deviceName\",\n        \"title\": \"设备名称\",\n        \"sort\": 1,\n        \"id\": 1\n      },\n      {\n        \"key\": \"deviceName\",\n        \"title\": \"设备名称\",\n        \"sort\": 1,\n        \"id\": 1\n      },\n      {\n        \"key\": \"deviceName\",\n        \"title\": \"设备名称\",\n        \"sort\": 1,\n        \"id\": 1\n      }\n    ]\n  }\n\n  /* 查询设备台账 */\n  @action async getDevStanding(params) {\n    this.isDevLoading = true\n    try {\n      let data = {\n        pageIndex: 1,\n        pageSize: 10,\n        queryType: this.queryType,\n        deviceType: '',\n        deviceName: '',\n        startTime: '', endTime: '', customerId: '',\n        ...this.searchCondition,\n        ...params\n      }\n      let res = await services.gets('getDevStanding')(data)\n      this.isDevLoading = false\n      if (isDataExist(res)) {\n        this.devStandList = res.data.data.items;\n        this.devStandPage = res.data.data.page;\n        this.devStandCols = res.data.dataExt;\n      }\n    } catch (error) {\n      console.log(error);\n\n    }\n  }\n\n  /* 查询设备列表 */\n  @action async getDevList(params) {\n    this.isDevLoading = true\n    try {\n      let data = {\n        pageIndex: 1,\n        pageSize: 10,\n        queryType: this.queryType,\n        deviceType: '',\n        deviceName: '',\n        startTime: '', endTime: '', customerId: '',\n        ...this.searchCondition,\n        ...params\n      }\n      let res = await services.gets('getDevList')(data)\n      this.isDevLoading = false\n      if (isDataExist(res)) {\n        this.devList = res.data.data.items;\n        this.devPage = res.data.data.page;\n      }\n    } catch (error) {\n      console.log(error);\n\n    }\n  }\n  /* 铭牌框 */\n  @action.bound async codeChange() {\n    this.codeVisible = !this.codeVisible\n    if (!this.codeVisible) {\n      this.codeInfo = {}\n    }\n    // console.log(this.codeVisible)\n  }\n  /* 获取铭牌设置*/\n  @action async getSortList(params) {\n    try {\n      let res = await services.gets('getQrcode')(params);\n      if (isDataExist(res)) {\n        this.sortList = []\n        this.sortList = res.data.data;\n        // console.log(this.sortList, '获取排序列表')\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  /* 保存名牌设置 */\n  @action async saveSortList(params) {\n    try {\n      let res = await services.posts('saveQrcode')(params);\n      if (isDataExist(res)) {\n        message.success('设置成功')\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  /* 获取设备列表详细信息 */\n  @action async getDevInfo(params) {\n    try {\n      let res = await services.gets('getDevInfo')(params);\n      if (isDataExist(res)) {\n        this.devCurrent = res.data.data;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  @action async getUsersByRoles(params) {\n    try {\n      let res = await services.gets('getUsersByRoles')(params);\n      if (isDataExist(res)) {\n        this.employeeList = res.data.data;\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  @action async saveDevice(params) {\n    try {\n      let res = await services.posts('saveDevice')(params)\n      if (isDataExist(res)) {\n        message.success('保存成功！');\n      }\n    } catch (error) {\n\n    }\n    this.getDevList()\n  }\n  @action async deleteDevice(params) {\n    try {\n      let res = await services.posts('deleteDevice')(params)\n      if (isDataExist(res)) {\n        message.success('删除成功！');\n      }\n    } catch (error) {\n\n    }\n    this.getDevList()\n  }\n\n  @action async downloadModule() {\n    try {\n      let res = await services.gets('downloadModule')()\n      if (isDataExist(res)) {\n        message.success('下载成功')\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n\n  /* 修改value */\n  @action changeValue(key, value) {\n    this[key] = value;\n  }\n\n  /* -------------设备配置 */\n  @observable customerList = []\n  @observable configVisible = false;\n  @observable configStatus = 'add';\n\n  @action async getCustomerList(params) {\n    try {\n      let res = await services.gets('getCustomerList')(params);\n      if (isDataExist(res)) {\n        this.customerList = res.data.data;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  /* --------------设备日志 */\n  @observable deviceLog = []\n  @observable deviceLogPage = {}\n  @observable pageIndex = 1\n  @observable dailyDeviceId = ''\n  @observable dailyTypeId = ''\n  @observable dailyModelId = ''\n  @observable isDaily = false\n  @observable currentDaily = {}\n  @observable logDetailList = []\n\n  @action async getDeviceLog(params) {\n    this.pageIndex = params.pageIndex\n    try {\n      if (this.pageIndex === 1) {\n        this.deviceLog = []\n      }\n      let res = await services.gets('getDeviceLog')(params);\n      if (isDataExist(res)) {\n        let deviceLog = JSON.parse(JSON.stringify(this.deviceLog))\n        deviceLog = deviceLog.concat(res.data.data.items);\n        this.deviceLog = deviceLog\n        this.deviceLogPage = res.data.data.page\n      }\n    } catch (error) {\n      console.log(error);\n\n    }\n  }\n  @action async getDetailLog(params) {\n    try {\n      let res = await services.gets('getDetailLog')(params)\n      if (isDataExist(res)) {\n        this.logDetailList = res.data.data;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\nlet DeviceDefineStore = new DeviceDefine();\nexport default DeviceDefineStore;","export default function decodeHtml(text) { \n  var temp = document.createElement(\"div\"); \n  temp.innerHTML = text; \n  var output = temp.innerText || temp.textContent; \n  temp = null; \n  return output; \n} ","import { Modal } from 'antd';\nimport querystring from 'query-string';\nimport parseURL from './parseUrl';\nimport { forEach } from 'lodash';\nimport decodeHtml from './htmlTag';\n\nlet config = {};\n// judge env to do something\nif (process.env.NODE_ENV === 'development') {\n  config.env = 'dev';\n} else if (process.env.NODE_ENV === 'production') {\n  config.env = 'product'\n}\n\n// let Pace;\n// (function loadPace(env) {\n//   if (env !== 'dev' && !Pace) {\n//     Pace = require('../pace.min.js');\n//   }\n// })(config.env);\n\n// Pace.start();\n// ====== Request Class ======\nconst defaultOptions = {\n  ignoreError: false\n};\n\n/*\n * Requests a URL, returning a promise.\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n * @return {object}           An object containing either \"data\" or \"err\"\n */\n\nexport function request(url, options) {\n  // console.log('test request: ',Pace);\n  // Pace && Pace.restart();\n  // setDefault\n  options = {\n    ...defaultOptions,\n    ...options\n  };\n  return (\n    fetch(url, options)\n      .then(checkStatus)\n      .then(parseJSON)\n      .then(res => checkResponse(res, options)) // 接口通信成功，处理返回值\n      .catch(err => handleError(err, options))\n  ); // 发生异常，进行兜底处理\n}\n\n/*\n * @param {string} url - 请求的接口地址\n * @param {object} data - 请求参数\n * @param {object} options 传递给fetch API的参数\n */\nexport function post(url, data, options) {\n  // 开发环境使用mock数据\n  // if (config.env === 'dev') {\n  //   url = '/api' + url;\n  // }\n  // data = injectSelfToken(data);\n  return request(url, {\n    method: 'POST',\n    credentials: 'same-origin',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'token': injectSelfToken()\n    },\n    body: stringify({\n      ...data\n    }),\n    ...options\n  });\n}\n\nexport function put(url, data, options) {\n  // 开发环境使用mock数据\n  // if (config.env === 'dev') {\n  //   url = '/api' + url;\n  // }\n  // data = injectSelfToken(data);\n  return request(url, {\n    method: 'POST',\n    credentials: 'same-origin',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json;charset=utf-8',\n      'token': injectSelfToken()\n    },\n    body: JSON.stringify({\n      ...data,\n    }),\n    ...options\n  });\n}\n\nexport function postJson(url, data, options) {\n  // 开发环境使用mock数据\n  // if (config.env === 'dev') {\n  //   url = '/api' + url;\n  // }\n  return request(url, {\n    method: 'POST',\n    credentials: 'same-origin',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json;charset=utf-8',\n      'token': injectSelfToken()\n    },\n    body: JSON.stringify({\n      ...data,\n    }),\n    ...options\n  });\n}\n\n/*\n *\n * @param {string} url 请求的接口地址\n * @param {object} data 请求参数\n * @param {object} options 传递给fetch API的参数\n */\nexport function get(url, data = {}, options) {\n  // 开发环境使用mock数据\n  // if (config.env === 'dev') {\n  //   url = '/api' + url;\n  // }\n  // data = data;\n  return request(`${url}?${stringify(data)}`, {\n    method: 'GET',\n    credentials: 'same-origin',\n    headers: {\n      'token': injectSelfToken()\n    },\n    ...options\n  });\n}\n\n// ====== Response Class ======\n\nclass AbstractResponse {\n  constructor(response, error) {\n    if (response) {\n      this.code = response.code;\n      this.data = response; // 这里的返回数据为整个response对象\n    }\n    this.error = error || null;\n  }\n}\n\n/*\n * 错误时候的响应对象\n */\nclass ErrorResponse extends AbstractResponse {\n  constructor(error) {\n    super(null, error);\n    this.errorType = 'response';\n  }\n}\n\n/*\n * 接口正常时的返回对象\n */\nclass SuccessResponse extends AbstractResponse {\n  constructor(response) {\n    super(response, null);\n  }\n}\n// ====== Util ======\n/*\n * { a: 1, b: 2} ==> a=1&b=2\n */\nfunction stringify(obj = {}) {\n  let a = Object.keys(obj)\n    .filter(k => obj[k] || +obj[k] === 0)\n    .map(k => {\n      let value = obj[k];\n      if (typeof value === 'object') {\n        value = encodeURIComponent(JSON.stringify(value));\n      } else {\n        value = encodeURIComponent(value);\n      }\n      return encodeURIComponent(k) + '=' + value;\n    })\n    .join('&');\n  return a;\n}\n\n// ====== 接口返回值处理具体逻辑 ======\nconst SUCCESS_CODE = [\n  0\n];\n// const SUCCESS_BOOL = true; // 返回success\nconst ErrorHandlers = {\n  '401.1': function (error, options) {\n    return Modal.error({\n      title: '提示',\n      content: '您当前的会话已超时，请重新登录。',\n      afterClose: () => {\n        if (error && error.data) {\n          let url = parseURL(error.data);\n          let searchs = [],\n            searchString = '',\n            querystringParse = querystring.parse(url.search);\n          querystringParse.redirectUrl = window.location.href;\n          forEach(querystringParse, (value, key) => {\n            searchs.push(`${key}=${value}`);\n          });\n          searchs.length && (searchString = searchs.join('&'));\n          options && options.callback && options.callback();\n\n          let newUrl = `${url.protocol}//${url.hostname}`;\n          url.port && (newUrl += `:${url.port}`);\n          url.pathname && (newUrl += `${url.pathname}`);\n          searchString && (newUrl += `?${searchString}`);\n          window.location.href = newUrl;\n        }\n      }\n    });\n  },\n  verifyCodeInvalid: () => { },\n  'NoPermission.Directory': function () {\n    //TODO: do nothing\n  }\n};\n\n\n/*\n * 接口返回值处理逻辑，如果未捕获到匹配的处置方案，则抛出异常\n * @param {*} response\n * @param {*} options 配置可选项，如忽略错误\n */\nfunction checkResponse(response, options) {\n  const { code, } = response;\n  if (SUCCESS_CODE.includes(code)) {\n    return new SuccessResponse(response);\n  } else {\n    if (code === -100) {\n      Modal.warning({\n        content: '登录超时，请重新登陆',\n        okText: '确定',\n        onOk: () => {\n          window.location.href = `//${window.location.host}/login`;\n        }\n      })\n    }else{\n      throw new ErrorResponse(response);\n    }\n  }\n}\n\nfunction parseJSON(response) {\n  return response.json();\n}\n\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n  const error = new Error(response.statusText);\n  error.response = response;\n  throw error;\n}\n\nlet dialogInstance;\n\n// 兜底的错误处理\nfunction handleError(err, options) {\n  let msg = null,\n    code = null;\n    console.log(err)\n  if (!options.ignoreError) {\n    // if (dialogInstance) return;\n    if (err.errorType === 'response') {\n      let responseError = err.error || null;\n      if (responseError) {\n        code = responseError.code || null;\n        msg = responseError.msg || responseError.message || null;\n        let handleResError =\n          code && ErrorHandlers[code] ? ErrorHandlers[code] : null;\n\n        if (handleResError) {\n          return (dialogInstance = handleResError(responseError, {\n            callback: () => {\n              dialogInstance = null;\n            }\n          }));\n        }\n      }\n    }\n    msg = err.message || msg || 'Unknown error';\n\n    //针对faked与Pace的本地冲突的错误提示的关闭\n    if (msg === 'request.addEventListener is not a function') {\n      return;\n    }\n    return (dialogInstance = Modal.error({\n      title: '提示',\n      content: `${decodeHtml(msg)}`,\n      afterClose: () => {\n        dialogInstance = null;\n      }\n    }));\n  }\n  throw new ErrorResponse(err);\n}\n\n/*\n * 引入验证token\n */\nfunction injectSelfToken() {\n  let selfToken = sessionStorage.getItem('selfToken');\n  return selfToken\n\n}\n","export default function parseURL(url) { \n  var a = document.createElement('a'); \n  a.href = url; \n  return { \n      source: url, \n      protocol: a.protocol.replace(':',''), \n      host: a.hostname, \n      port: a.port, \n      query: a.search, \n      params: (function(){ \n          var ret = {}, \n          seg = a.search.replace(/^\\?/,'').split('&'), \n          len = seg.length, i = 0, s; \n          for (;i<len;i++) { \n              if (!seg[i]) { continue; } \n              s = seg[i].split('='); \n              ret[s[0]] = s[1]; \n          } \n          return ret; \n      })(), \n      file: (a.pathname.match(/\\/([^\\/?#]+)$/i) || [,''])[1], \n      hash: a.hash.replace('#',''), \n      path: a.pathname.replace(/^([^\\/])/,'/$1'), \n      relative: (a.href.match(/tps?:\\/\\/[^\\/]+(.+)/) || [,''])[1], \n      segments: a.pathname.replace(/^\\//,'').split('/') \n  }; \n}","import { observable, action } from 'mobx';\nimport { isDataExist } from 'Utils/dataTools';\nimport * as services from '../services/basic';\nimport { message } from 'antd';\n// import { moment } from 'moment';\n\nclass DeviceMaintain {\n\t/* 查询页面数据 */\n\t@observable isLoading = false;\n\t@observable deviceList = [];\n\t@observable serverList = [];\n\t@observable schemaList = [];\n\t@observable schemaPage = {};\n\t@observable deviceType = '';\n\t@observable maintainType = 1;\n\t@observable planType = 1;\n\n\t/* 弹窗内容 */\n\t@observable currentMain = {};\n\t@observable editVisible = false\n\n\t@action async getDevice() {\n\t\t/* 获取所有的设备类型 */\n\t\tthis.isLoading = true;\n\t\ttry {\n\t\t\tlet res = await services.gets('getSelectType')();\n\t\t\tthis.isLoading = false;\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tthis.deviceList = res.data.data;\n\t\t\t\tthis.deviceType = res.data.data[0].id;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\t/* ---------------- 点检库 */\n\n\t@action async getMaintainServer(params = {}) {\n\t\t/* 获取列表 */\n\t\tthis.isLoading = true;\n\t\ttry {\n\t\t\tlet res = await services.gets('getMaintainServer')({\n\t\t\t\tmaintainType: this.maintainType,\n\t\t\t\t...params\n\t\t\t});\n\t\t\tthis.isLoading = false;\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tthis.serverList = res.data.data;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\t@action async getMaintainSchema(params = {}) {\n\t\t/* 获取列表 */\n\t\tthis.isLoading = true;\n\t\ttry {\n\t\t\tlet res = await services.gets('getMaintainSchema')({\n\t\t\t\t// typeId: this.deviceType,\n\t\t\t\tpageIndex: 1,\n\t\t\t\tpageSize: 10,\n\t\t\t\tmaintainType: this.maintainType,\n\t\t\t\t...params\n\t\t\t});\n\t\t\tthis.isLoading = false;\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tthis.schemaList = res.data.data.items;\n\t\t\t\tthis.schemaPage = res.data.data.pageInfo;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\t@action async save(params, type) {\n\t\ttry {\n\t\t\tlet req = type === 'server' ? 'saveServer' : 'saveSchema';\n\t\t\tlet data = {\n\t\t\t\t...params,\n\t\t\t\ttypeId: this.deviceType\n\t\t\t}\n\t\t\t// console.log(this.status,data);\n\t\t\tlet res = await services.posts(req)(data);\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tmessage.success('保存成功');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t}\n\t\ttype === 'server' ? this.getMaintainServer() : this.getMaintainSchema({ typeId: this.deviceType });\n\t}\n\t@action async delete(params, type) {\n\t\ttry {\n\t\t\tlet req = type === 'server' ? 'deleteServer' : 'deleteSchema';\n\t\t\tlet res = await services.posts(req)(params);\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tmessage.success('保存成功');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t}\n\t\ttype === 'server' ? this.getMaintainServer() : this.getMaintainSchema();\n\t}\n\t@observable currentMainServer = {}\n\t@observable currentMainSchame = {}\n\t@action async getInfo(params, type) {\n\t\ttry {\n\t\t\tlet req = type === 'server' ? 'getServerInfo' : 'getSchemaInfo';\n\t\t\tlet res = await services.gets(req)(params);\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tif (type === 'server') {\n\t\t\t\t\tthis.currentMainServer = res.data.data;\n\t\t\t\t} else {\n\t\t\t\t\tthis.currentMainSchame = res.data.data;\n\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t}\n\t}\n\n\n\n}\n\nlet DeviceMaintainStore = new DeviceMaintain();\nexport default DeviceMaintainStore;\n","import { observable, action, } from 'mobx';\nimport { isDataExist } from 'Utils/dataTools';\nimport * as services from '../services/basic';\nimport { message } from 'antd';\n\nclass TitleConfig {\n  @observable titleList = []\n  @observable isLoading = false\n  @action.bound async getTitle(params){\n    this.isLoading = true\n    this.titleList = []\n    try {\n      let res = await services.gets('getTitle')(params)\n      this.isLoading = false\n      if(isDataExist(res)){\n        this.titleList = res.data.data;\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  @action.bound async saveTitle(params,extParams){\n    this.isLoading = true\n    try {\n      let res = await services.posts('saveTitle')(params)\n      this.isLoading = false\n      if(isDataExist(res)){\n        message.success('保存成功！')\n        this.getTitle({...extParams})\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n}\nlet TitleConfigStore = new TitleConfig();\nexport default TitleConfigStore;\n","// import React from 'react';\nimport LoadingComponent from '../components/ComponentLoading';\nimport Loadable from 'react-loadable';\n\nconst HomeRouter = Loadable({\n  loader: () => import('./HomeRouter'),\n  loading: LoadingComponent\n});\nconst LoginPage = Loadable({\n  loader: () => import('layouts/LoginPage'),\n  loading: LoadingComponent\n});\nconst StudioPage = Loadable({\n  loader: () => import('layouts/ZCloudDevice'),\n  loading: LoadingComponent\n});\nconst StudioDevice = Loadable({\n  loader: () => import('layouts/ZDeviceMonitor'),\n  loading: LoadingComponent\n});\nconst ZWordView = Loadable({\n  loader: () => import('layouts/ZWordView'),\n  loading: LoadingComponent\n});\n\nexport {\n  HomeRouter,\n  LoginPage,\n  StudioPage,\n  StudioDevice,\n  ZWordView\n};","/* \n* router by zyn on 0509\n* Router -- 根节点\n* BrowserHistory 建立路由传递文件 当前路由引入方式\n* Switch 路由切换组件 Router 路由包裹  Redirect 路由指向\n* HomeLayout 最外层Home包裹架子\n*/\n\nimport React,{PureComponent} from 'react';\nimport { \n  BrowserRouter as Router,\n  // Redirect,\n  Route,\n  Switch\n} from 'react-router-dom';\n\n/* 引入组件 */\nimport { \n  HomeRouter,\n  LoginPage,StudioPage,StudioDevice,\n  ZWordView\n} from './home';\n\nexport default class RootRouter extends PureComponent{\n  render(){\n    return (\n      <Router >\n        <Switch>\n          <Route path='/login' component={LoginPage} />\n          <Route path='/iotstudio' component={StudioPage} />\n          <Route path='/iot/device' component={StudioDevice} />\n          <Route path='/iot/doc' component={ZWordView} />\n          <Route path='/' component={HomeRouter} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nimport locale from 'antd/lib/date-picker/locale/zh_CN';\nimport moment from 'moment';\nwindow.GLOBAL_PARAMS = {\n  locale :locale,\n  moment :moment,\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n/* 引入总的样式文件 */\nimport './css/index.less';\nimport './css/newTheme.less';\n\n/* 引入Store注入组件 */\nimport { Provider } from 'mobx-react';\nimport store from './stores';\n\n/* 引入router根组件 */\nimport RootRouter from './routes';\n\n/* 引入最外层组件 */\nimport * as serviceWorker from './serviceWorker';\n\n/* 设置组件国际化配置 */\nimport 'constants/global_config';\n\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nmoment.locale('zh-cn');\n\nReactDOM.render(\n  <Provider {...store}>\n    <RootRouter />\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { get, put } from '../utils/request';\n\nconst requestList = {\n  /* 工单设备 */\n  getWork: '/manage/work/list',\n  saveWork: '/manage/work/save',\n  // deleteType :'/manage/base/deviceType/delete',\n  getWorkLog: '/manage/work/getInfo',\n  getCountByWorkerId: '/manage/work/getCountByWorkerId',\n  getWorkAuth: '/manage/sys/user/adminOrRepair',\n  getDetailLog: '/manage/result/getByLogId',\n\n}\n\nexport function gets(type) {\n  return async function (data, options) {\n    return await get(requestList[type], data, options);\n  }\n}\nexport function posts(type) {\n  return async function (data, options) {\n    return await put(requestList[type], data, options);\n  }\n}","import { observable, action, } from 'mobx';\nimport { isDataExist } from 'Utils/dataTools';\nimport * as services from '../services/work';\nimport { message } from 'antd';\n\nclass Work {\n  @observable workList = []\n  @observable workPage = {}\n  @observable isLoading = false\n  @observable status = 'add'\n  @observable currentMain = {}\n  @observable visible = false\n  @observable searchCondition = {}\n  @observable current = '1'\n  @observable isDaily = false\n  @observable workLog = []\n  @observable workDetailList = []\n  @observable workerAuth = {}\n  @observable detailLogId = ''\n  @observable detailVisible = false\n  @observable logDetailList = []\n  @observable workerName = ''\n  @observable workCols = []\n\n  @action async getWork(params) {\n    this.isLoading = true\n    try {\n      let data = {\n        pageIndex: 1,\n        pageSize: 10,\n        ...this.searchCondition,\n        ...params\n      }\n      if (this.current === '1') {\n        data.init = true;\n      } else if (this.current === '2') {\n        data.progress = true;\n      } else {\n        data.finish = true;\n      }\n      let res = await services.gets('getWork')(data)\n      this.isLoading = false\n      if (isDataExist(res)) {\n        this.workList = res.data.data.items;\n        this.workPage = res.data.data.page;\n        this.workCols = res.data.dataExt;\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  @action async saveWork(params) {\n    this.isLoading = true\n    try {\n      let res = await services.posts('saveWork')(params)\n      this.isLoading = false\n      if (isDataExist(res)) {\n        message.success('保存成功')\n      }\n    } catch (error) {\n      console.log(error)\n    }\n    this.getWork()\n  }\n  @action async deleteWork(params) {\n    try {\n      let res = await services.posts('deleteWork')(params)\n      if (isDataExist(res)) {\n        message.success('删除成功')\n      }\n    } catch (error) {\n      console.log(error)\n    }\n    this.getWork()\n  }\n\n  @action async getWorkLog(params) {\n    try {\n      let res = await services.gets('getWorkLog')(params)\n      if (isDataExist(res)) {\n        this.workLog = res.data.data;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  /* 判断权限 */\n  @action async getWorkAuth() {\n    try {\n      let res = await services.gets('getWorkAuth')();\n      if (isDataExist(res)) {\n        this.workerAuth = res.data.data;\n      }\n    } catch (error) {\n      console.log(error);\n\n    }\n  }\n  /* 获取保养工单详情 */\n  @action async getDetailLog(params) {\n    try {\n      let res = await services.gets('getDetailLog')(params)\n      if (isDataExist(res)) {\n        this.logDetailList = res.data.data;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  /* 获取工人工单信息 */\n  @action async getCountByWorkerId(params) {\n    try {\n      let res = await services.gets('getCountByWorkerId')(params)\n      if (isDataExist(res)) {\n        // res.data.data.workerName = this.workerName\n        this.workDetailList = res.data.data;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\n  @action changeValue(key, value) {\n    this[key] = value;\n  }\n}\nlet WorkStore = new Work();\nexport default WorkStore;","import { get,put } from '../utils/request';\n\nconst requestList = {\n  getDevice :'/studio/basic/deviceType/devTypeList',\n  getDeviceList :'/studio/basic/device/getDevice',\n\n  /* -------------点检 && 保养--------------- */\n  /* 库 */\n  getMaintain:'/studio/device/maintain/list',\n  batchRemove:'/studio/device/maintain/batchRemove',\n  singleRemove:'/studio/device/maintain/remove',\n  addMaintain:'/studio/device/maintain/save',\n  updateMaintain:'/studio/device/maintain/update',\n  getServeInfo:'/studio/device/maintain/getInfo',\n\n  /* 方案 */\n  getScheme:'/studio/device/maintainSchema/list',\n  batchDelSchema:'/studio/device/maintainSchema/batchRemove',\n  delSchema:'/studio/device/maintainSchema/remove',\n  saveSchema:'/studio/device/maintainSchema/save',\n  updateSchema:'/studio/device/maintainSchema/update',\n  schemaInfo:'/studio/device/maintainSchema/getInfo',\n\n  /* 计划 */\n  getPlan:'/studio/device/maintainPlan/listMaintainPlanExcute',\n  toDetail:'/studio/device/maintainPlan/detail',\n  savePlan:'/studio/device/maintainPlan/save',\n  delPlan:'/studio/device/maintainPlan/remove',\n  batchDelPlan:'/studio/device/maintainPlan/batchRemove',\n  getPlanInfo:'/studio/device/maintainPlan/getInfo',\n  getDeviceByType:'/studio/basic/device/listByType',\n  getSchemaByType:'/studio/device/maintainSchema/listTypeId',\n\n\n  /* 操作 */\n  getDeviceByOp:'/studio/basic/device/listByType',\n  getOperateList:'/studio/device/maintainPlan/listOperator',\n  getListByContentIds:'/studio/device/maintain/listByContentIds', //弹窗内获取列表数据\n  saveOperate:'/studio/device/checkPlanExecution/execution',\n\n\n  /* 查询 */\n  getQuery:'/studio/device/maintainRecord/listNew',\n\n  /* ------------设备监控------------- */\n  getMonitor:'/studio/device/listStatus',\n\n}\n\nexport function gets(type){\n  return async function(data,options){\n    return await get(requestList[type],data,options);\n  }\n}\nexport function posts(type){\n  return async function(data,options){\n    return await put(requestList[type],data,options);\n  }\n}","import { observable, action } from 'mobx';\nimport { isDataExist } from 'Utils/dataTools';\nimport * as services from '../services/zcloud';\nimport { message } from 'antd';\n\nclass DeviceMaintain {\n\t/* 查询页面数据 */\n\t@observable isLoading = false;\n\t@observable deviceList = [];\n\t@observable maintainList = [];\n\t@observable maintainPage = {\n\t\tpageIndex: 1,\n\t\tpageSize: 10,\n\t};\n\t@observable deviceType = '';\n\t@observable planType = 1;\n\t@observable maintainType = 1;\n\t@observable devStatus = 1;\n\t@observable devId = '';\n\n\t/* 监控详情 */\n\t@observable isDetail = false;\n\n\t/* 弹窗内容 */\n\t@observable currentMain = {};\n\n\t/* ---------------- 点检库 */\n\t@action async getDevice() {\n\t\t/* 获取设备类型 */\n\t\tthis.isLoading = true;\n\t\ttry {\n\t\t\tlet res = await services.gets('getDevice')();\n\t\t\tthis.isLoading = false;\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tthis.deviceList = ([{ typeName: '全部', id: 112211 }]).concat(res.data.data);\n\t\t\t\tthis.deviceType = '';\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\t@action async getMaintain(params = {}) {\n\t\t/* 获取列表 */\n\t\tthis.isLoading = true;\n\t\ttry {\n\t\t\tlet res = await services.gets('getMaintain')({\n\t\t\t\tdeviceType: this.deviceType,\n\t\t\t\tplanType: this.planType,\n\t\t\t\tmaintainType: this.maintainType,\n\t\t\t\t...this.maintainPage,\n\t\t\t\t...params\n\t\t\t});\n\t\t\tthis.isLoading = false;\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tthis.maintainList = res.data.data.items;\n\t\t\t\tthis.maintainPage = res.data.data.page;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\t/* 表格操作 */\n\t@action async removeMaintain(params, type) {\n\t\tlet req = type === 'batch' ? 'batchRemove' : 'singleRemove';\n\t\ttry {\n\t\t\tlet res = await services.posts(req)(params);\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tmessage.success('删除成功');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t\tthis.getMaintain();\n\t}\n\t/* 获取编辑信息 */\n\t@action async getServeInfo(params) {\n\t\tthis.currentMain = {};\n\t\ttry {\n\t\t\tlet res = await services.gets('getServeInfo')(params);\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tthis.currentMain = res.data.data;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\t/* 保存 */\n\t@action async saveMaintain(params) {\n\t\ttry {\n\t\t\tlet req = this.status === 'edit' ? 'updateMaintain' : 'addMaintain';\n\t\t\tlet res = await services.posts(req)(params);\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tmessage.success('保存成功');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t\tthis.getMaintain();\n\t}\n\n\t/* ------------ 方案 */\n\t@observable schemeList = [];\n\t@observable schemePage = { pageIndex: 1, pageSize: 10 };\n\n\t@action async getScheme(params = {}) {\n\t\tthis.isLoading = true;\n\t\ttry {\n\t\t\tlet data = {\n\t\t\t\tplanType: this.planType,\n\t\t\t\tmaintainType: this.maintainType,\n\t\t\t\tdeviceType: this.deviceType,\n\t\t\t\t...this.schemePage,\n\t\t\t\t...params\n\t\t\t};\n\t\t\tlet res = await services.gets('getScheme')(data);\n\t\t\tthis.isLoading = false;\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tthis.schemeList = res.data.data.items;\n\t\t\t\tthis.schemePage = res.data.data.page;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\t@action async getSchemaInfo(params) {\n\t\ttry {\n\t\t\tlet res = await services.gets('schemaInfo')(params);\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tthis.currentMain = res.data.data;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\t@action async saveSchema(params) {\n\t\tlet req = this.status === 'edit' ? 'updateSchema' : 'saveSchema';\n\t\tlet data = {\n\t\t\t...params\n\t\t};\n\t\ttry {\n\t\t\tlet res = await services.posts(req)(data);\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tmessage.success('保存成功');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t\tthis.getScheme();\n\t}\n\t@action async delSchema(params, type) {\n\t\tlet req = type === 'batch' ? 'batchDelSchema' : 'delSchema';\n\t\ttry {\n\t\t\tlet res = await services.posts(req)(params);\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tmessage.success('删除成功');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t\tthis.getScheme();\n\t}\n\n\t/* ----------- 计划 */\n\t@observable checkPlanList = [];\n\t@observable checkPlanPage = { pageIndex: 1, pageSize: 10 };\n\t@observable deviceByIdList = [];\n\t@observable schemaByIdList = [];\n\n\t@action async getPlan(params = {}) {\n\t\tthis.isLoading = true;\n\t\ttry {\n\t\t\tlet data = {\n\t\t\t\ttypeId: this.deviceType,\n\t\t\t\tplanType: this.planType,\n\t\t\t\tmaintainType: this.maintainType,\n\t\t\t\t...this.checkPlanPage,\n\t\t\t\t...params\n\t\t\t};\n\t\t\tlet res = await services.gets('getPlan')(data);\n\t\t\tthis.isLoading = false;\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tthis.checkPlanList = res.data.data.items;\n\t\t\t\tthis.checkPlanPage = res.data.data.page;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\t@action async getListByType(type, data) {\n\t\ttry {\n\t\t\tlet req = type === 'device' ? 'getDeviceByType' : 'getSchemaByType';\n\t\t\tlet params = { typeId: this.deviceType, ...data };\n\t\t\tif (type === 'schema') params.planType = this.planType;\n\t\t\tlet res = await services.gets(req)(params);\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tif (type === 'device') {\n\t\t\t\t\tthis.deviceByIdList = res.data.data;\n\t\t\t\t} else {\n\t\t\t\t\tthis.schemaByIdList = res.data.data;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\t@action async savePlan(params) {\n\t\tlet req = 'savePlan';\n\t\tlet data = {\n\t\t\t...params\n\t\t};\n\t\ttry {\n\t\t\tlet res = await services.posts(req)(data);\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tmessage.success('保存成功');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t\tthis.getPlan();\n\t}\n\t@action async delPlan(params, type) {\n\t\tlet req = type === 'batch' ? 'batchDelPlan' : 'delPlan';\n\t\ttry {\n\t\t\tlet res = await services.posts(req)(params);\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tmessage.success('删除成功');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t\tthis.getPlan();\n\t}\n\t@action async getPlanInfo(params) {\n\t\ttry {\n\t\t\tlet res = await services.gets('getPlanInfo')(params);\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tthis.currentMain = res.data.data;\n\t\t\t\treturn res.data.data.excuteTime;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\t@action async toDetail(params) {\n\t\ttry {\n\t\t\tlet res = await services.posts('toDetail')(params);\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tmessage.success('下发成功');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t\tthis.getPlan();\n\t}\n\n\t/* ---------点检操作-------- */\n\t@observable deviceId = '';\n\t@observable op_deviceList = [];\n\t@observable operateList = [];\n\t@observable operatePage = { pageIndex: 1, pageSize: 10 };\n\t@observable listByContentsIds = [];\n\n\t@action async getOperateDevice() {\n\t\ttry {\n\t\t\tlet res = await services.gets('getDeviceList')();\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tthis.op_deviceList = res.data.data\n\t\t\t\tthis.deviceId = '';\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\t@action async getOperateList(params) {\n\t\tthis.isLoading = true;\n\t\ttry {\n\t\t\tlet data = {\n\t\t\t\tplanType: this.planType,\n\t\t\t\tmaintainType: this.maintainType,\n\t\t\t\tdeviceId: this.deviceId,\n\t\t\t\t...this.operatePage,\n\t\t\t\t...params\n\t\t\t};\n\t\t\t// getScheme\n\t\t\tlet res = await services.gets('getOperateList')(data);\n\t\t\tthis.isLoading = false;\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tthis.operateList = res.data.data.items;\n\t\t\t\tthis.operatePage = res.data.data.page;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\t@action async getListByContents(params) {\n\t\ttry {\n\t\t\tlet res = await services.gets('getListByContentIds')(params);\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tthis.listByContentsIds = res.data.data;\n\t\t\t\treturn res.data.data;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\t@action async saveExcution(params) {\n\t\ttry {\n\t\t\tlet res = await services.posts('saveOperate')(params);\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tmessage.success('编辑成功');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t\tthis.getOperateList();\n\t}\n\n\t/* ----------查询---------- */\n\t@observable result = 0\n\t@observable typeId = 0\n\t@observable deviceId = 0\n\t@observable queryList = []\n\t@observable queryPage = { pageIndex: 1, pageSize: 10, }\n\n\t@action async getQuery(params) {\n\t\tthis.queryList = []\n\t\tthis.isLoading = true;\n\t\ttry {\n\t\t\tlet data = {\n\t\t\t\t...this.queryPage,\n\t\t\t\tplanType: this.planType,\n\t\t\t\tmaintainType: this.maintainType,\n\t\t\t\tresult: this.queryResult,\n\t\t\t\ttypeId: this.typeId || '',\n\t\t\t\tdeviceId: this.deviceId || '',\n\t\t\t\t...params\n\t\t\t}\n\t\t\tlet res = await services.gets('getQuery')(data)\n\t\t\tthis.isLoading = false;\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tthis.queryList = res.data.data.items;\n\t\t\t\tthis.queryPage = res.data.data.page;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\t/* -----------设备监控------------ */\n\t@observable monitorList = [];\n\t@observable monitorPage = {};\n\t@observable monitorVisible = false;\n\t@observable deviceSearchId = '';\n\t@observable detailList = [];\n\t@observable detailId = '';\n\t@observable detailInfo = {};\n\n\t@action async getMonitor() {\n\t\tthis.isLoading = true;\n\t\ttry {\n\t\t\tlet res = await services.gets('getMonitor')();\n\t\t\tthis.isLoading = false;\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tthis.monitorList = res.data.data;\n\t\t\t\t// this.monitorPage = res.data.data.page;\n\t\t\t}\n\t\t} catch (error) {\n\t\t}\n\t}\n\t@action async getMonitorDetail() {\n\t\ttry {\n\t\t\tlet res = await services.gets('getMonitorDetail')({ devId: this.detailId })\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tthis.detailList = res.data.data;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\t/* 查询所有的设备名称 */\n\t@observable devList = []\n\t@action async getDeviceList() {\n\t\ttry {\n\t\t\tlet res = await services.gets('getDeviceList')()\n\t\t\tif (isDataExist(res)) {\n\t\t\t\tthis.devList = res.data.data;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\t@action clearData() {\n\t\tthis.result = 0\n\t\tthis.typeId = 0\n\t\tthis.deviceId = 0\n\t\tthis.queryList = []\n\t\tthis.queryPage = {}\n\t}\n\t@action modifyValue(key, value) {\n\t\tthis[key] = value\n\t}\n\n}\n\nlet DeviceMaintainStore = new DeviceMaintain();\nexport default DeviceMaintainStore;\n","import { get, put } from '../utils/request';\n\nexport const requestUrl = {\n    deviceList: '/manage/statistics/device/list',\n    exportDevice: '/manage/statistics/device/export',\n    spareList: '/manage/statistics/spare/list',\n    exportSpare: '/manage/statistics/spare/export',\n    breakenList: '/manage/statistics/breaken/list',\n    exportBreaken: '/manage/statistics/breaken/export',\n    staffList: '/manage/statistics/staff/list',\n    exportStaff: '/manage/statistics/staff/export',\n    getBreakenInfo: '/manage/statistics/breaken/getBreakenInfo',\n    getAllWorkInfo: '/manage/statistics/staff/getAllWorkInfo',\n    getByLogId: '/manage/result/getByLogId',\n}\n\n/* 测试接口的数据 */\nexport async function getRequest(url, data, options) {\n    return await get(url, data, options);\n}\n\n/* 测试接口的数据 */\nexport async function putRequest(url, data, options) {\n    return await put(url, data, options);\n}","import { observable, action, } from 'mobx';\nimport { isDataExist } from 'Utils/dataTools';\nimport * as services from '../services/statistics';\n\nclass Statistics {\n    @observable isLoading = false;\n    @observable columnsType = 1;\n    @observable tableData = [];//表格数据\n    @observable searchDate = [];\n    @observable pageInfo = { pageIndex: 1, pageSize: 10 };//分页数据\n    @observable modalVisible = false;\n    @observable detailInfo = {};\n    @observable breakenInfo = [];\n    @observable breakenPage = {};\n    @observable logInfo = {};\n    @observable workInfo = [];\n    @observable deviceId = '';\n\n    @action.bound async getData(type, params) {\n        this.isLoading = true\n        //1故障分析，2备件分析，3点检分析，4人员绩效分析\n        const url = type === 1 ? services.requestUrl.deviceList : type === 2 ? services.requestUrl.spareList : type === 3 ? services.requestUrl.breakenList : services.requestUrl.staffList\n        try {\n            let res = await services.getRequest(url, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.tableData = res.data.data.items\n                this.pageInfo = res.data.data.page\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    @action.bound async getBreakenInfo(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.getBreakenInfo, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.breakenInfo = this.breakenInfo.concat(res.data.data.items)\n                this.breakenPage = res.data.data.page\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    @action.bound async getAllWorkInfo(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.getAllWorkInfo, { isSelf: true, ...params })\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.workInfo = res.data.data\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    @action.bound async getByLogId(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.getByLogId, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.logInfo = res.data.data\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    @action.bound async exportDate(type, params) {\n        //1导出设备，2导出备件，3导出点检，4导出人员绩效\n        let url = type === 1 ? services.requestUrl.exportDevice : type === 2 ? services.requestUrl.exportSpare : type === 3 ? services.requestUrl.exportBreaken : services.requestUrl.exportStaff\n        url = `${url}?pageIndex=${this.pageInfo.pageIndex}&pageSize=${this.pageInfo.pageSize}&startDate=${this.searchDate[0] ? this.searchDate[0] : ''}&endDate=${this.searchDate[1] ? this.searchDate[1] : ''} `\n        // console.log(url)\n        window.open(url)\n        // try {\n        //     let res = await services.getRequest(url, params)\n        //     this.isLoading = false\n        //     if (isDataExist(res)) {\n        //         return res\n        //     }\n        // } catch (error) {\n        //     console.log(error)\n        // }\n    }\n    @action.bound async clearData() {\n        this.columnsType = 1;\n        this.tableData = [];\n    }\n    @action modalChange = () => {\n        // console.log(this.modalVisible)\n        this.modalVisible = !this.modalVisible\n    }\n}\nlet StatisticsStore = new Statistics();\nexport default StatisticsStore;\n","import { get, put } from '../utils/request';\n\nexport const requestUrl = {\n    getSpareType: '/manage/spare/spareType/list',//备件类型列表\n    saveSpareType: '/manage/spare/spareType/save',//新增备件类型\n    deleteSpareType: '/manage/spare/spareType/delete',//删除备件类型\n    allSpareType: '/manage/spare/spareType/listAll',//所有备件类型\n    getSpare: '/manage/spare/spare/list',//备件列表\n    saveSpare: '/manage/spare/spare/save',//新增备件\n    spareAll: '/manage/spare/spare/listAll',//新增备件\n    deleteSpare: '/manage/spare/spare/delete',//删除备件\n    getDeviceType: '/manage/base/deviceModel/listAll',//设备型号\n    operationSpare: '/manage/spare/spareRecord/operation',//设备类型出入库\n    spareRecordList: '/manage/spare/spareRecord/list',//出入库记录\n    warnList: '/manage/spare/warn/list',//库存预警\n    getByType: '/manage/work/getByType',//工单\n    export:'/manage/spare/spare/export',\n    // modelList: '/manage/base/deviceModel/listByTypeId',//类型获取设备型号\n\n}\n\n/* 测试接口的数据 */\nexport async function getRequest(url, data, options) {\n    return await get(url, data, options);\n}\n\n/* 测试接口的数据 */\nexport async function putRequest(url, data, options) {\n    return await put(url, data, options);\n}","import { observable, action } from 'mobx';\nimport { isDataExist } from 'Utils/dataTools';\nimport { message } from 'antd';\nimport * as services from '../services/spareparts';\n\nclass Spareparts {\n    @observable isLoading = false;\n    @observable modalTitle = 1;\n    @observable tableData = [];\n    @observable inPutLogData = [];\n    @observable columnsType = '1';\n    @observable PageInfo = {};\n    @observable id = \"\";\n    @observable formData = {};\n    @observable searchDate = [];//搜索时间\n    @observable modalVisible = false;\n    @observable modalType = 0;\n    @observable typeName = '';\n    @observable spareName = undefined;\n    @observable typeList = [];\n    @observable devTypeList = [];\n    @observable oddList = [];\n    @observable spareList = [];\n    @observable workList = [];\n\n    //获取表格数据\n    @action.bound async getData(type, params) {\n        this.isLoading = true\n        //1.备件类型，2.备件列表，3.库存预警\n        const url = type === 1 ? services.requestUrl.getSpareType : type === 2 ? services.requestUrl.getSpare : services.requestUrl.warnList\n        try {\n            let res = await services.getRequest(url, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.tableData = res.data.data.items\n                this.PageInfo = res.data.data.page\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //获取库存数据\n    @action.bound async getLogData(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.spareRecordList, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.inPutLogData = res.data.data.items\n                this.PageInfo = res.data.data.page\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //获取工单信息\n    @action.bound async getworkData(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.getByType, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.workList = res.data.data\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //新增备件类型\n    @action.bound async addNewType(params) {\n        this.isLoading = true\n        try {\n            let res = await services.putRequest(services.requestUrl.saveSpareType, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //新增备件\n    @action.bound async addNewSpa(params) {\n        this.isLoading = true\n        try {\n            let res = await services.putRequest(services.requestUrl.saveSpare, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //删除备件类型\n    @action.bound async deleteType(params) {\n        this.isLoading = true\n        try {\n            let res = await services.putRequest(services.requestUrl.deleteSpareType, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //删除备件\n    @action.bound async deleteSpa(params) {\n        this.isLoading = true\n        try {\n            let res = await services.putRequest(services.requestUrl.deleteSpare, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    // 备件导出\n    @action async export(params){\n        this.isLoading = true\n        let data = {\n            ids:params.ids.join(',')\n        }\n        try {\n            let res = await services.getRequest(services.requestUrl.export, data)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                message.success('导出成功')\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //备件出入库\n    @action.bound async inPutStorage(params) {\n        this.isLoading = true\n        try {\n            let res = await services.putRequest(services.requestUrl.operationSpare, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //所有备件类型\n    @action.bound async getAllType(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.allSpareType, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.typeList = res.data.data\n\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //所有备件\n    @action.bound async getAllSpare(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.spareAll, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.spareList = res.data.data\n\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //所有设备类型\n    @action.bound async getAllDeviceType(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.getDeviceType, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.devTypeList = []\n                res.data.data.map(item => {\n                    this.devTypeList.push({ label: item.modelName, value: item.id.toString() })\n                })\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //所有工单\n    @action.bound async getAllOdd(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.getAllOdd, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.oddList = res.data.data\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    //打开/关闭模态框\n    @action modalChange = (type, record) => {\n        if (type) {\n            this.formData = record\n        } else {\n            this.formData = {}\n        }\n        this.modalType = type\n        this.modalVisible = !this.modalVisible\n    }\n    //打开/关闭模态框\n    @action clearData = () => {\n        this.isLoading = false;\n        this.modalTitle = 1;\n        this.tableData = [];\n        this.inPutLogData = [];\n        this.columnsType = '1';\n        this.PageInfo = { pageIndex: 1, pageSize: 10 };\n        this.formData = {};\n        this.searchDate = [];\n        this.modalVisible = false;\n        this.typeName = '';\n        this.spareName = undefined;\n        this.typeList = [];\n        this.devTypeList = [];\n        this.oddList = [];\n        this.workList = [];\n    }\n}\n\nlet SparepartsStore = new Spareparts();\nexport default SparepartsStore;","import { get, put } from '../utils/request';\n\nconst requestList = {\n  getList: 'manage/index/console',\n  setLogin: '/manage/login',\n  getMenuList: '/manage/sys/menu/getMenuByUserId',\n  getCustomMenu: '/getCustomMenu',\n  workEndInfo: '/manage/index/workEndInfo',\n  deviceInfo: '/manage/index/deviceInfo',\n  staffInfo: '/manage/index/staffInfo',\n\n}\n\nexport function gets(type) {\n  return async function (data, options) {\n    return await get(requestList[type], data, options);\n  }\n}\nexport function posts(type) {\n  return async function (data, options) {\n    return await put(requestList[type], data, options);\n  }\n}","import { observable, action, toJS, } from 'mobx';\nimport { isDataExist } from 'Utils/dataTools';\nimport * as services from '../services/home';\nimport { isEmpty, uniqBy, } from 'lodash';\nimport { checkCurrentMenu } from 'utils/dataTools';\nimport { MenuObj, First_Menu_List } from '../constants/configs';\nconst uuid = require('uuid/v1');\n\nclass Home {\n  @observable contentScrollHeight = 0; //当前content滚动高度\n  @observable collapsed = false;\n  @observable menuObj = MenuObj.leafMenuModels;\n  @observable openKeys = ['1']; // 菜单初始化默认打开的key数组\n  @observable selectedKeys = ['101']; // 菜单初始化默认选中的key数组\n  @observable crumbsList = []; // 全局crumbs需求\n  @observable size_class = '';\n  @observable isClickCollapsed = false;\n  @observable followMenuList = First_Menu_List; // 首页关注的菜单豆腐块\n  @observable isRecommend = true; // 是否需要推荐菜单\n  @observable customMenu = [];// 首页自定义菜单\n  @observable isLoading = false;\n  @observable toggledActionId = 0;\n  @observable addInfo = []//首页工单信息;\n  @observable workInfo = []//首页人员维修;\n  @observable staffInfo = []//首页人员维修;\n  @observable devInfo = []//首页人员维修;\n  @observable isAuth = false\n\n  /* 设置登陆信息 */\n  @action async setLogin(params, finished) {\n    this.isLoading = true;\n    let result = { success: false, token: null };\n    try {\n      let res = await services.posts('setLogin')(params);\n      this.isLoading = false;\n      if (isDataExist(res)) {\n        result.success = true;\n        result.token = res.data.data;\n      }\n\n    } catch (error) {\n      console.log(error)\n    }\n    if (finished)\n      finished(result);\n  }\n\n  /* 首页初始化获取菜单信息 */\n  @action async getMenuList() {\n    let menuObj = toJS(this.menuObj);\n    try {\n      let res = await services.gets('getMenuList')();\n      if (isDataExist(res)) {\n        let data = res.data.data.children;\n        /* 一级菜单 */\n        menuObj.map(lv => {\n          Object.assign(lv, {\n            id: uuid(),\n            displayNone: true\n          });\n          data.map(item => {\n            if (lv.name === item.text) {\n              if (item.children) {\n                lv.children = item.children;\n              }\n              Object.assign(lv, {\n                id: item.id,\n                displayNone: false\n              });\n            }\n          })\n        })\n        /* 二级菜单 */\n        menuObj.map(lv => {\n          if (!lv.displayNone) {\n            lv.leafMenuModels.map(lv2 => {\n              Object.assign(lv2, {\n                id: uuid(),\n                displayNone: false\n              });\n              lv.children.map(item => {\n                if (item.parentId === lv.id) {\n                  if (item.text === lv2.name) {\n                    Object.assign(lv2, {\n                      id: item.id,\n                      displayNone: false\n                    })\n                  }\n                }\n              })\n            })\n          }\n\n        })\n        this.isAuth = !isEmpty(data);\n        this.menuObj = menuObj;\n        /* 设置当前登录页面 */\n        let current = {\n          id: -1, parentId: -1\n        }\n        data.map(item => {\n          if (current.id > 0) return;\n          if (!isEmpty(item.children)) {\n            current = item.children[0]\n          }\n        })\n        menuObj.map(lv => {\n          if (lv.id === current.parentId) {\n            current.url = lv.leafMenuModels.filter(lv2 => lv2.id === current.id)[0].path\n          }\n        })\n        return current.url\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  /* 菜单加载的初始化 */\n  @action initMenu(pathname) {\n    try {\n      let menuObj = toJS(this.menuObj);\n      let currentMenu = [], crumbsList = [];\n      /* 菜单查询 */\n      currentMenu = menuObj.filter(leaf => leaf.path === pathname)[0];\n      if (isEmpty(currentMenu)) {\n        menuObj.map(lv => {\n          if (!isEmpty(currentMenu)) return lv.id;\n          currentMenu = (pathname.indexOf(lv.path) > -1) ? lv : {};\n        });\n      }\n      if (!isEmpty(currentMenu)) {\n        crumbsList.push({\n          id: currentMenu.id, name: currentMenu.name, path: currentMenu.path\n        });\n      }\n      if (currentMenu.path === pathname) {\n        this.selectedKeys = [`${currentMenu.id}`];\n        this.openKeys = [`${currentMenu.parentId}`];\n      } else {\n        /* 判断二级 */\n        // console.log(currentMenu)\n        currentMenu.leafMenuModels.map(lv2 => {\n\n          if (lv2.path === pathname) {\n            this.selectedKeys = [`${lv2.id}`];\n            this.openKeys = [`${lv2.parentId}`];\n            crumbsList.push({\n              id: lv2.id, name: lv2.name, path: lv2.path\n            });\n          } else {\n            if (lv2.activeRouter) {\n              if (lv2.activeRouter.indexOf(pathname) > -1) {\n                this.selectedKeys = [`${lv2.id}`];\n                this.openKeys = [`${lv2.parentId}`];\n              }\n            } else {\n              /* 判断三级 */\n              if (!isEmpty(lv2.leafMenuModels)) {\n                lv2.leafMenuModels.map(lv3 => {\n                  if (lv3.path === pathname) {\n                    this.selectedKeys = [`${lv3.id}`];\n                    this.openKeys = [`${lv2.parentId}`];\n                  }\n                })\n              }\n            }\n          }\n        })\n      }\n      let history = sessionStorage.getItem('menu') || [];\n      if (!isEmpty(history)) {\n        history = JSON.parse(history);\n        history = uniqBy(history, 'id');\n      }\n      sessionStorage.setItem('menu', JSON.stringify(history));\n      this.crumbsList = crumbsList;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  @action toggleMenu({ actionItem, actionId }, finished) {\n    try {\n      let menuObj = toJS(this.menuObj); // 根菜单节点\n      // actionId = actionId;\n      /* 查询当前菜单item */\n      let current = checkCurrentMenu({ menuObj, actionId });\n      let currentMenu = current.currentMenu, crumbsList = current.crumbsList;\n      finished(currentMenu[0].path);\n      this.crumbsList = crumbsList;\n      /* 记录历史-浏览记录 */\n      this.setLastMenuHistory(currentMenu[0], actionId);\n      this.toggledActionId = currentMenu[0].id;\n      this.selectedKeys = [`${currentMenu[0].id}`];\n      this.openKeys = [`${currentMenu[0].parentId}`];\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  setLastMenuHistory = (actionItem, actionId) => {\n    let history = sessionStorage.getItem('menu') || [];\n    let index = -1;\n    if (!isEmpty(history)) history = JSON.parse(history);\n    for (let i = 0; i < history.length; i++) {\n      if (history[i].id === actionId) {\n        index = i;\n      }\n    }\n    if (index > -1) {\n      history.splice(index, 1);\n    }\n    history.push(actionItem);\n    if (history.length >= 4) {\n      history.splice(0, 1);\n    }\n    history = uniqBy(history, 'id');\n    sessionStorage.setItem('menu', JSON.stringify(history));\n  }\n\n  //获取首页工单数据\n  @action.bound async getOddCount(params) {\n    this.isLoading = true\n    try {\n      let res = await services.gets('getList')(params)\n      this.isLoading = false\n      if (isDataExist(res)) {\n        this.addInfo = res.data.data\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  //获取7天已结\n  @action.bound async workEndInfo(params) {\n    this.isLoading = true\n    try {\n      let res = await services.gets('workEndInfo')(params)\n      this.isLoading = false\n      if (isDataExist(res)) {\n        let date = []\n        let data = res.data.data;\n        for (let i = 0; i < 7; i++) {\n          date.push({ currentDate: this.getDay(-i), number: 0 })\n        }\n        date.map(time => {\n          data.map(item => {\n            item.currentDate = item.currentDate.split(' ')[0]\n            if (time.currentDate === item.currentDate) {\n              time.number = Number(item.number)\n            }\n            // item.number = Number(item.number)\n          })\n        })\n        this.workInfo = date\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  getDay(day) {\n    var today = new Date();\n    var targetday_milliseconds = today.getTime() + 1000 * 60 * 60 * 24 * day;\n    today.setTime(targetday_milliseconds); //注意，这行是关键代码\n\n    var tDate = today.getFullYear() + \"-\" + (\"0\" + (today.getMonth() + 1)).slice(-2) + \"-\" + ('0' + today.getDate()).slice(-2);\n    return tDate;\n  }\n  //获取设备分布\n  @action.bound async deviceInfo(params) {\n    this.isLoading = true\n    try {\n      let res = await services.gets('deviceInfo')(params)\n      this.isLoading = false\n      if (isDataExist(res)) {\n        this.devInfo = res.data.data\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  //获取维修信息\n  @action.bound async getStaffInfo(params) {\n    this.isLoading = true\n    try {\n      let res = await services.gets('staffInfo')(params)\n      this.isLoading = false\n      if (isDataExist(res)) {\n        this.staffInfo = res.data.data\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  @action.bound addCrumbs(obj) {\n    this.crumbsList.push(obj);\n  }\n\n  @action changeValue(key, value) {\n    this[key] = value;\n  }\n}\nlet HomeStore = new Home();\nexport default HomeStore;","import { get, post, put } from '../utils/request';\n\n/* 存储请求地址*/\nexport const requestUrl = {\n    departmentList: '/manage/sys/sysDept/list',//部门列表\n    departmentTree: '/manage/sys/sysDept/tree',//部门列表树\n    removeDepartment: '/manage/sys/sysDept/delete',//删除部门\n    saveDepartment: '/manage/sys/sysDept/add',//新增部门\n    updataDepartment: '/manage/sys/sysDept/update',//编辑部门\n    roleList: '/manage/sys/role/list',//角色列表\n    allRoleList: '/manage/sys/role/listAll',//角色列表\n    saveRole: '/manage/sys/role/add',//新增角色\n    updataRole: '/manage/sys/role/update',//编辑角色\n    removeRole: '/manage/sys/role/delete',//删除角色\n    batchRemoveRole: '/manage/sys/role/batchDelete',//批量删除角色\n    treeMenu: '/manage/sys/menu/tree',//获取菜单树\n    getMenuIdsByRole: '/manage/sys/menu/getMenuIdsByRole',//查询角色当前权限\n    menuList: '/manage/sys/menu/list',//菜单列表\n    removeMenu: '/manage/sys/menu/delete',//删除菜单\n    userList: '/manage/sys/user/list',//用户列表\n    saveMenu: '/manage/sys/menu/add',//新增菜单\n    updateMenu: '/manage/sys/menu/update',//编辑菜单\n    saveUser: '/manage/sys/user/add',//保存用户\n    updataUser: '/manage/sys/user/update',//编辑用户\n    removeUser: '/manage/sys/user/delete',//删除用户\n    batchRemoveUser: '/manage/sys/user/batchDelete',//批量删除用户\n    adminResetPwd: '/manage/sys/user/adminResetPwd',//修改用户密码\n    getUserRoles: '/manage/sys/user/getRoles',//查询用户所有角色\n    getCustomer: '/manage/sys/customer/list',//客户列表\n    addCustomer: '/manage/sys/customer/add',//客户新增\n    updateCustomer: '/manage/sys/customer/update',//客户编辑\n    deleteCus: '/manage/sys/customer/delete',//客户删除\n    exist: '/manage/sys/user/exist',//客户删除\n}\n\n/* 测试接口的数据 */\nexport async function getRequest(url, data, options) {\n    return await get(url, data, options);\n}\n\n/* 测试接口的数据 */\nexport async function postRequest(url, data, options) {\n    return await post(url, data, options);\n}\n/* 测试接口的数据 */\nexport async function putRequest(url, data, options) {\n    return await put(url, data, options);\n}","import { observable, action, } from 'mobx';\nimport { isDataExist } from 'Utils/dataTools';\nimport * as services from '../services/system';\n\n\nclass Order {\n    @observable isLoading = false;\n    @observable tableData = [];//表格数据\n    @observable roleList = [];//角色列表\n    @observable menuData = [];//菜单列表\n    @observable arr = [];\n    @observable DepList = [];//部门树列表\n    @observable allDept = [];//部门列表\n    @observable CumList = [];//客户列表\n    @observable SupList = [];//供应商列表\n    @observable tagList = [];//筛选数据\n    @observable selectedRows = [];//选中表格\n    @observable PageInfo = { pageIndex: 1, pageSize: 10 };//分页信息\n    @observable formData = {};//表单数据\n    @observable treeData = {};//菜单树数据\n    @observable modalVisible = false;//模态框显隐\n    @observable roleName = \"\";\n    @observable name = \"\";\n    @observable customerName = \"\";\n    @observable roleIds = \"\";//用户的角色列表\n    @observable deptId = \"\";\n    @observable columnsType = \"1\";\n    @observable innerModalVisible = false;\n    @observable isReview = false;\n\n    //获取表格数据\n    @action.bound async getData(type, params) {\n        this.isLoading = true\n        //1部门管理，2角色管理，3用户管理\n        const url = type === 1 ? services.requestUrl.departmentList : type === 2 ? services.requestUrl.roleList : services.requestUrl.userList\n        try {\n            let res = await services.getRequest(url, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                if (type === 1) {\n                    this.tableData = res.data.data\n                } else {\n                    this.tableData = res.data.data.items\n                    this.PageInfo = res.data.data.page\n                }\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //获取组织架构列表\n    @action.bound async getDeptData(type, params) {\n        this.isLoading = true\n        //1制造商，2客户\n        const url = type === '1' ? services.requestUrl.departmentList : services.requestUrl.getCustomer\n        try {\n            let res = await services.getRequest(url, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                if (type === '1') {\n                    this.arr = res.data.data\n                    // console.log(this.arr)\n                    const data = this.transTreeData(this.arr)\n                    this.tableData = data\n                    // this.tableData = res.data.data.children\n\n                } else {\n                    this.tableData = res.data.data\n                }\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //获取制造商部门列表\n    @action.bound async getDept(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.departmentList, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.allDept = res.data.data\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //获取菜单树数据\n    @action.bound async getTreeData(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.treeMenu, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.treeData = []\n                this.treeData.push(res.data.data)\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    //保存更新部门信息\n    @action.bound async addNew(type, params) {\n        this.isLoading = true\n        const url = type ? services.requestUrl.saveDepartment : services.requestUrl.updataDepartment\n        try {\n            let res = await services.putRequest(url, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //保存更新角色信息\n    @action.bound async addNewRole(type, params) {\n        this.isLoading = true\n        const url = type ? services.requestUrl.saveRole : services.requestUrl.updataRole\n        try {\n            let res = await services.putRequest(url, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //保存系统菜单\n    @action.bound async addNewMenu(type, params) {\n        this.isLoading = true\n        const url = type ? services.requestUrl.saveMenu : services.requestUrl.updateMenu\n        try {\n            let res = await services.putRequest(url, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //保存系统菜单\n    @action.bound async addNewUser(type, params) {\n        this.isLoading = true\n        const url = type ? services.requestUrl.saveUser : services.requestUrl.updataUser\n        try {\n            let res = await services.putRequest(url, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //保存系统菜单\n    @action.bound async addNewCustomer(type, params) {\n        this.isLoading = true\n        const url = type ? services.requestUrl.addCustomer : services.requestUrl.updateCustomer\n        try {\n            let res = await services.putRequest(url, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //保存系统菜单\n    @action.bound async resetPassword(params) {\n        this.isLoading = true\n        try {\n            let res = await services.putRequest(services.requestUrl.adminResetPwd, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //部门删除\n    @action.bound async deleteCol(params) {\n        this.isLoading = true\n        try {\n            let res = await services.putRequest(services.requestUrl.removeDepartment, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //客户删除\n    @action.bound async deleteCus(params) {\n        this.isLoading = true\n        try {\n            let res = await services.putRequest(services.requestUrl.deleteCus, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //角色删除\n    @action.bound async deleteRole(type, params) {\n        this.isLoading = true\n        const url = type ? services.requestUrl.removeRole : services.requestUrl.batchRemoveRole\n        try {\n            let res = await services.putRequest(url, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //菜单删除\n    @action.bound async deleteMenu(params) {\n        this.isLoading = true\n        try {\n            let res = await services.putRequest(services.requestUrl.removeMenu, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //菜单删除\n    @action.bound async deleteUser(type, params) {\n        this.isLoading = true\n        const url = type ? services.requestUrl.removeUser : services.requestUrl.batchRemoveUser\n        try {\n            let res = await services.putRequest(url, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //获取角色当前菜单权限\n    @action.bound async getMenuIdsByRole(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.getMenuIdsByRole, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.formData.menuIds = res.data.data\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //打开/关闭模态框\n    @action modalChange = (type, record) => {\n        // console.log(record)\n        if (type) {\n            this.formData = record\n        } else {\n            this.formData = { delFlag: 1, customerStatus: 1 }\n        }\n        this.modalVisible = !this.modalVisible\n    }\n    //获取角色列表\n    @action.bound async getRoleList(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.allRoleList, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.roleList = []\n                res.data.data.map(item => {\n                    this.roleList.push({ label: item.roleName, value: item.id })\n                })\n                // console.log(this.roleList);\n\n            }\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //获取部门列表\n    @action.bound async getDepList(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.departmentTree, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.DepList = [{ id: \"-1\", text: '所有部门', children: res.data.data.children }]\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //获取客户列表\n    @action.bound async getCumList(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.getCustomer, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.CumList = res.data.data\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //获取客户列表\n    @action.bound async getSupList(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.getCustomer, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.SupList = res.data.data\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //查询用户的角色\n    @action.bound async getUserRole(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.getUserRoles, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res.data.data\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //查询用户的角色\n    @action.bound async existUsername(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.exist, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res.data.data\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //获取菜单列表\n    @action.bound async getMenuData(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.menuList, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.arr = res.data.data\n                const data = this.transTreeData(this.arr)\n                this.menuData = data\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //数据类型转换(平级数据装换成树结构)\n    @action.bound transTreeData = (items) => {\n        if (items.length > 0) {\n            let curPid = 0 //pid=0，为最上层节点 ，即无父节点\n            let parent = this.findChild(curPid);//数组\n            // console.log(parent)\n            return parent;\n        } else {\n            return [];\n        }\n    }\n    //找子节点\n    @action.bound findChild = (curPid) => {\n        let _arr = [];\n        let items = this.arr;\n        let length = items.length;\n        for (let i = 0; i < length; i++) {\n            if (items[i].parentId == curPid) {\n                let _obj = items[i];\n                _obj.children = this.findChild(_obj.id);\n                _arr.push(_obj);\n            }\n        }\n        return _arr;\n    }\n\n    //销毁数据\n    @action.bound async clearData() {\n        this.tableData = []\n        this.columnsType = '1'\n        this.arr = []\n        this.roleList = [];\n        this.menuData = [];//菜单列表\n        this.DepList = [];//部门列表\n        this.tagList = [];//筛选数据\n        this.SupList = [];\n        this.CumList = [];\n        this.selectedRows = [];//选中表格\n        this.PageInfo = { pageIndex: 1, pageSize: 10 };//分页信息\n        this.formData = {};//表单数据\n        this.treeData = {};//菜单树数据\n        this.modalVisible = false;//模态框显隐\n        this.roleName = \"\";\n        this.name = \"\";\n        this.customerName = \"\";\n        this.deptId = \"\";\n        this.innerModalVisible = false;\n    }\n}\nlet OrderDefineStore = new Order();\nexport default OrderDefineStore;","import './index.less';\nimport React from 'react';\n\nexport default ({ isLoading, error }) => {\n  if (isLoading) {\n    return <div className=\"component-loading\">\n      <p>页面加载中</p>\n    </div>;\n  } else if (error) {\n    return <div className=\"component-loading\">\n      <p className=\"wrong-msg\">出错了，请\n        刷新\n        页面重试，或者确认地址是否正确</p>\n    </div>;\n  } else {\n    return null;\n  }\n};","/**\n * @description 项目中复用到的工具方法\n */\n\nimport { isEmpty } from 'lodash';\n\n/* 判断数据是否存在 */\nexport function isDataExist(res){\n  let isExist = false;\n  if(res){\n    if(res.data){\n      if(res.data.data)\n        isExist = true;\n      if(res.data.code.toString() === '0')\n        isExist = true; \n    }\n  }\n  return isExist;\n}\n\n/* 关于解析路径上的query传参 */\nexport function initSearchQuery(search){\n  let data = {};\n  search = search.split('?')[1];\n  if(search.indexOf('&') > -1){\n    search = search.split('&');\n    search.map(item=>{\n      let per = item.split('=');\n      data[per[0]] = per[1];\n      return item;\n    });\n  }else{\n    search = search.split('=');\n    data[search[0]] = search[1];\n  }\n  return data;\n}\n\n/* 判断当前终端 */\nexport function judgeIsMobile(type) {\n  if(type === 'pc') return false;\n  if(type === 'mobile') return true;\n}\n\n/* 校验当前menu选择 */\nexport function checkCurrentMenu({\n  menuObj,actionId,\n}){\n  let currentMenu = [],crumbsList = [];\n  /* 一级菜单查询 */\n  currentMenu = menuObj.filter(leaf => leaf.id === actionId);\n  try {\n    if (isEmpty(currentMenu)) {\n      /* 二级菜单查询 */\n      for(let lv2 of menuObj){\n        if( lv2.leafMenuModels.length > 0 ){\n          currentMenu = lv2.leafMenuModels.filter(leaf=>leaf.id === actionId);\n          if(!isEmpty(currentMenu)){\n            crumbsList = crumbsList.concat([{\n              id:lv2.id,name:lv2.name,path:lv2.path\n            },{\n              id:currentMenu[0].id,name:currentMenu[0].name,path:currentMenu[0].path\n            }]);\n            // finished(currentMenu[0].path);\n            return { currentMenu,crumbsList };\n          } else {\n            /* 三级菜单查询 */\n            for (let lv3 of lv2.leafMenuModels){\n              if (lv3.leafMenuModels) {\n                currentMenu = lv3.leafMenuModels.filter(leaf => leaf.id === actionId);\n                if(!isEmpty(currentMenu)){\n                  crumbsList.push({\n                    id:currentMenu[0].id,name:currentMenu[0].name,path:currentMenu[0].path\n                  });\n                }\n                return { currentMenu,crumbsList };\n                // finished(currentMenu[0].path);\n              }\n            }\n          }\n        }\n      }\n    }else{\n      crumbsList.push(currentMenu[0]);\n      // finished(currentMenu[0].path);\n      return { currentMenu,crumbsList };\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  return { currentMenu,crumbsList };\n}\n\n\n/* 关于cookie */\nexport function getCookie(c_name){\n  if (document.cookie.length > 0) {\n    let c_start = document.cookie.indexOf(c_name + \"=\")\n    if (c_start !== -1) {\n        c_start = c_start + c_name.length + 1\n        let c_end = document.cookie.indexOf(\";\", c_start)\n        if (c_end === -1) c_end = document.cookie.length\n        return unescape(document.cookie.substring(c_start, c_end)).replace(/\\\"/g, \"\");\n    }\n  }\n}\nexport function setCookie(name,value,seconds){\n  seconds = seconds || 0;   //seconds有值就直接赋值，没有为0\n  let expires = \"\";\n  if (seconds !== 0) {      //设置cookie生存时间\n    let date = new Date();\n    date.setTime(date.getTime() + (seconds * 1000));\n    expires = \"; expires=\" + date.toGMTString();\n  }\n  document.cookie = name + \"=\" + escape(value) + expires + \"; path=/\";   //转码并赋值\n}\nexport function clearCookie(name){\n  setCookie(name, \"\");\n  setCookie('isChecked',false);\n}\n","export const MenuObj = {\n  id: 'root',\n  name: '首页',\n  path: '/index',\n  activeRouter: [],\n  displayNone: false,\n  leafMenuModels: [\n    {\n      id: 2,\n      name: '设备管理',\n      iconfontFont: '&#xe629;',\n      iconfont: 'icon-device',\n      path: '/device',\n      action: false,\n      displayNone: false,\n      leafMenuModels: [\n        {\n          id: 201,\n          name: '设备台账',\n          parentId: 1,\n          path: '/device/standing',\n          action: false,\n          displayNone: false\n        },\n        // {\n        //   id: 202,\n        //   name: '设备日志',\n        //   parentId: 1,\n        //   path: '/device/daily',\n        //   action: false,\n        //   displayNone: false\n        // },\n        {\n          id: 203,\n          name: '运维工单',\n          icon: 'profile',\n          parentId: 1,\n          path: '/device/work',\n          action: false,\n          displayNone: false,\n        }\n      ]\n    },\n    {\n      id: 3,\n      name: '备件管理',\n      iconfont: 'icon-part',\n      path: '/spareparts',\n      action: false,\n      displayNone: false,\n      leafMenuModels: [\n        {\n          id: 301,\n          parentId: 3,\n          name: '备件定义',\n          path: '/spareparts/define',\n          action: false,\n          displayNone: false\n        },\n        {\n          id: 302,\n          name: '备件库存',\n          parentId: 3,\n          path: '/spareparts/stock',\n          action: false,\n          displayNone: false\n        },\n        {\n          id: 303,\n          name: '库存预警',\n          parentId: 3,\n          path: '/spareparts/warning',\n          action: false,\n          displayNone: false\n        }\n      ]\n    },\n    {\n      id: 4,\n      name: '统计报表',\n      iconfont: 'icon-chart',\n      path: '/statistics',\n      action: false,\n      displayNone: false,\n      leafMenuModels: [\n        {\n          id: 401,\n          parentId: 4,\n          name: '数据统计',\n          path: '/statistics/data',\n          action: false,\n          displayNone: false\n        }\n      ]\n    },\n    {\n      id: 1,\n      name: '基础配置',\n      iconfont: 'icon-instrument',\n      path: '/basic',\n      action: false,\n      displayNone: false,\n      leafMenuModels: [\n        {\n          id: 101,\n          parentId: 1,\n          name: '设备定义',\n          path: '/basic/device/define',\n          action: false,\n          displayNone: false\n        },\n        {\n          id: 102,\n          name: '设备配置',\n          parentId: 1,\n          path: '/basic/device/configuration',\n          action: false,\n          displayNone: false\n        },\n        {\n          id: 105,\n          name: '通知配置',\n          parentId: 1,\n          path: '/basic/message',\n          action: false,\n          displayNone: false\n        },\n        {\n          id: 106,\n          name: '维护配置',\n          parentId: 1,\n          path: '/basic/maintain',\n          action: false,\n          displayNone: false\n        },\n        {\n          id: 107,\n          name: '表头配置',\n          parentId: 1,\n          path: '/basic/titleconfig',\n          action: false,\n          displayNone: false\n        }\n      ]\n    },\n    {\n      id: 5,\n      name: '系统管理',\n      iconfont: 'icon-system',\n      path: '/system',\n      action: false,\n      displayNone: false,\n      leafMenuModels: [\n        {\n          id: 501,\n          parentId: 5,\n          name: '组织架构',\n          path: '/system/department',\n          action: false,\n          displayNone: false\n        },\n        {\n          id: 502,\n          parentId: 5,\n          name: '角色管理',\n          path: '/system/role',\n          action: false,\n          displayNone: false\n        },\n        {\n          id: 503,\n          parentId: 5,\n          name: '用户管理',\n          path: '/system/user',\n          action: false,\n          displayNone: false\n        },\n        {\n          id: 504,\n          parentId: 5,\n          name: '系统菜单',\n          path: '/system/menu',\n          action: false,\n          displayNone: false\n        }\n      ]\n    }\n  ]\n};\n\nexport const work_ChildrenMenu = [\n  {\n    id: 1,\n    parentId: 203,\n    name: '待办任务',\n    // path: '/device/work/operate',\n    action: false,\n    displayNone: false\n  },\n  {\n    id: 2,\n    name: '工单明细',\n    parentId: 203,\n    // path: '/work/list',\n    action: false,\n    displayNone: false\n  },\n  {\n    id: 3,\n    name: '工单报告',\n    parentId: 203,\n    // path: '/work/history',\n    action: false,\n    displayNone: false\n  }\n];\n\nexport const inspectList = [\n  {\n    id: 1,\n    parentId: 106,\n    rootId: 1,\n    name: '点检类型',\n    path: '/basic/maintain/check',\n    action: false,\n    displayNone: false\n  },\n  {\n    id: 2,\n    parentId: 106,\n    rootId: 1,\n    name: '巡检类型',\n    path: '/basic/maintain/inspect',\n    action: false,\n    displayNone: false\n  },\n  {\n    id: 3,\n    parentId: 106,\n    rootId: 1,\n    name: '保养类型',\n    path: '/basic/maintain/again',\n    action: false,\n    displayNone: false\n  },\n  {\n    id: 4,\n    parentId: 106,\n    rootId: 1,\n    name: '故障类型',\n    path: '/basic/maintain/repair',\n    action: false,\n    displayNone: false\n  }\n]\n\n// 首页菜单设置\nexport const First_Menu_List = [\n  {\n    id: 102,\n    parentId: 1,\n    name: '订单查询',\n    path: '/order/query',\n    url: '/order',\n    action: false,\n    displayNone: false\n  }, {\n    id: 9,\n    name: '基础管理',\n    icon: 'profile',\n    path: '/basic',\n    action: false,\n    displayNone: false,\n  }, {\n    id: 202,\n    parentId: 2,\n    name: '生产计划',\n    url: '/product/plan',\n    path: '/production/productionPlan',\n    action: false,\n    displayNone: false\n  },\n]\n\n\n\n\n// 媒体查询 ： 条件\nexport const Media_Query = {\n  'screen-xs': {\n    maxWidth: 575\n  },\n  'screen-sm': {\n    minWidth: 576,\n    maxWidth: 767\n  },\n  'screen-md': {\n    minWidth: 768,\n    maxWidth: 991\n  },\n  'screen-lg': {\n    minWidth: 992,\n    maxWidth: 1199\n  },\n  'screen-xl': {\n    minWidth: 1200,\n    maxWidth: 1599\n  },\n  'screen-xxl': {\n    minWidth: 1600\n  }\n};\nexport const s_size = ['screen-xs'];\nexport const m_size = ['screen-sm', 'screen-md'];\nexport const l_size = ['screen-lg', 'screen-xl', 'screen-xxl'];\n","const context = require.context('./', false, /\\.js$/);\nconst keys = context.keys().filter(item => item !== './index.js');\nconst stores = {};\nfor (let i = 0; i < keys.length; i++) {\n  let key = keys[i].replace(/\\.\\/([\\w]*)\\.js/, (match, p1) => {\n    return p1;\n  });\n  stores[key] = context(keys[i]).default;\n}\nexport default stores;\n","import { get, put } from '../utils/request';\n\nconst requestList = {\n  /* 设备定义 */\n  /* ----设备类型 */\n  getType: '/manage/base/deviceType/list',\n  saveType: '/manage/base/deviceType/save',\n  deleteType: '/manage/base/deviceType/delete',\n  batchDeleteType: '/manage/base/deviceType/batchDelete',\n\n  /* ----设备型号 */\n  getModel: '/manage/base/deviceModel/list',\n  saveModel: '/manage/base/deviceModel/save',\n  deleteModel: '/manage/base/deviceModel/delete',\n  batchDeleteModal: '/manage/base/deviceModel/batchDelete',\n\n  getSelectType: '/manage/base/deviceType/listAll',\n  getSelectModel: '/manage/base/deviceModel/listByTypeId',\n  getSelectDevice: '/manage/base/device/listByModelId',\n\n  getDeviceFileList: '/manage/base/file/getFileList',\n  deleteFile: '/manage/base/file/deleteFile',\n  downloadFile: '/manage/base/file/download',\n\n  /* ----设备列表 */\n  getDevList: '/manage/base/device/list',//获取设备列表\n  getDevInfo: '/manage/base/device/getInfo',\n  getUsersByRoles: '/manage/sys/user/getWorkUsers',\n  deleteDevice: '/manage/base/device/delete',\n  saveDevice: '/manage/base/device/save',\n  saveQrcode: '/manage/base/qrcode/save',\n  getQrcode: '/manage/base/qrcode/list',\n  downloadModule: '/manage/base/device/download',\n  ImportModule: '/manage/base/device/import',\n\n  /* 设备台账 */\n  getDevStanding: '/manage/base/device/list1',\n\n  /* 设备配置 */\n  getCustomerList: '/manage/sys/customer/list',\n\n  /* 设备日志 */\n  getDeviceLog: '/manage/base/deviceLog/list',\n  getDetailLog: '/manage/result/getByLogId',\n\n  /* 维护配置 */\n  getMaintainServer: '/manage/base/config/list',\n  getServerInfo: '/manage/base/config/getInfo',\n  saveServer: '/manage/base/config/save',\n  deleteServer: '/manage/base/config/delete',\n\n  getMaintainSchema: '/manage/base/configPath/list',\n  getSchemaInfo: '/manage/base/configPath/getInfo',\n  saveSchema: '/manage/base/configPath/save',\n  deleteSchema: '/manage/base/configPath/delete',\n\n\n  /* title 配置页面 */\n  getTitle:'/manage/base/title/list',\n  saveTitle:'/manage/base/title/save',\n\n\n}\n\nexport function gets(type) {\n  return async function (data, options) {\n    return await get(requestList[type], data, options);\n  }\n}\nexport function posts(type) {\n  return async function (data, options) {\n    return await put(requestList[type], data, options);\n  }\n}"],"sourceRoot":""}