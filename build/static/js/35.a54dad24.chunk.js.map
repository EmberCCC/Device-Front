{"version":3,"sources":["layouts/HomeLayout/HomePage/LineChart.js","layouts/HomeLayout/HomePage/PieChart.js","layouts/HomeLayout/HomePage/AreaCharts.js","layouts/HomeLayout/HomePage/index.js"],"names":["AreaChart","inject","observer","data","toJS","this","props","HomeStore","workInfo","_react_16_8_6_react_default","a","createElement","BizCharts","height","padding","scale","currentDate","number","range","forceFit","name","crosshairs","type","itemTpl","position","shape","size","color","React","Component","PieChart","DataView","DataSet","devInfo","dv","source","transform","field","dimension","as","cols","percent","formatter","val","Number","toFixed","radius","innerRadius","showTitle","tooltip","customerName","value","style","lineWidth","stroke","AreaCharts","staffInfo","chartIns","count","min","minute","onGetG2Instance","chart","custom","allowAllCanceled","items","marker","symbol","fill","onClick","ev","item","checked","geoms","getAllGeoms","i","length","geom","console","log","getYScale","show","hide","HomePage","withRouter","state","isShow","getNumber","e","addInfo","_this","map","status","_this$props$HomeStore","className","flex","textAlign","background","width","src","alt","float","LineChart","empty_default","image","PRESENTED_IMAGE_SIMPLE","description","HomePage_PieChart","HomePage_AreaCharts","getOddCount","deviceInfo","getStaffInfo","workEndInfo"],"mappings":"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","file":"static/js/35.a54dad24.chunk.js","sourcesContent":["import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { toJS } from 'mobx';\nimport {\n  Chart,\n  Geom,\n  Axis,\n  Tooltip,\n} from \"bizcharts\";\n\n@inject('HomeStore')\n@observer\nclass AreaChart extends React.Component {\n  render() {\n    const data = toJS(this.props.HomeStore.workInfo);\n    // console.log(data)\n    // const data = [{ currentDate: '2019-07-07', number: 1 }, { currentDate: '2019-07-08', number: 1 }, { currentDate: '2019-07-09', number: 2 }, { currentDate: '2019-07-10', number: 1 }, { currentDate: '2019-07-11', number: 1 }, { currentDate: '2019-07-12', number: 0 }, { currentDate: '2019-07-13', number: 1 },]\n    const cols = {\n      currentDate: {\n        // min: 10000\n      },\n      number: {\n        range: [0, 1]\n      }\n    };\n    return <div>\n      <Chart height='300' padding='auto' data={data} scale={cols} forceFit >\n        <Axis name=\"currentDate\" />\n        <Axis\n          name=\"number\"\n        // label={{\n        //   formatter: val => {\n        //     return (val / 10000).toFixed(1) + \"k\";\n        //   }\n        // }}\n        />\n        <Tooltip\n          crosshairs={{\n            type: \"line\"\n          }}\n          itemTpl=\"<li><span style=&quot;background-color:{color};&quot; class=&quot;g2-tooltip-marker&quot;></span>结算工单数: {value}</li>\"\n        />\n        {/*<Geom type=\"area\" position=\"currentDate*number\" shape=\"smooth\" />*/}\n        <Geom type=\"line\" position=\"currentDate*number\" shape=\"smooth\" size={2} color=\"l(90) 0:#32C5FF  1:#BEF4FF\" />\n      </Chart>\n    </div>\n  }\n}\nexport default AreaChart;","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport {\n    Chart,\n    Geom,\n    Axis,\n    Tooltip,\n    Coord,\n    Label,\n    Legend,\n} from \"bizcharts\";\nimport DataSet from \"@antv/data-set\";\n\n@inject('HomeStore')\n@observer\nclass PieChart extends React.Component {\n    render() {\n        const { DataView } = DataSet;\n        const data = this.props.HomeStore.devInfo;\n        const dv = new DataView();\n        dv.source(data).transform({\n            type: \"percent\",\n            field: \"number\",\n            dimension: \"customerName\",\n            as: \"percent\"\n        });\n        const cols = {\n            percent: {\n                formatter: val => {\n                    val = +Number(val * 100).toFixed(2) + \"%\";\n                    return val;\n                }\n            }\n        };\n        return <div>\n            <Chart\n                height='300'\n                data={dv}\n                scale={cols}\n                padding={'auto'}\n                forceFit\n            >\n                <Coord type={\"theta\"} radius={0.75} innerRadius={0.6} />\n                <Axis name=\"percent\" />\n                <Legend\n                    position=\"bottom\"\n                />\n                <Tooltip\n                    showTitle={false}\n                    itemTpl=\"<li><span style=&quot;background-color:{color};&quot; class=&quot;g2-tooltip-marker&quot;></span>{name}: {value}</li>\"\n                />\n                <Geom\n                    type=\"intervalStack\"\n                    position=\"percent\"\n                    color=\"customerName\"\n                    tooltip={[\n                        \"customerName*percent\",\n                        (customerName, percent) => {\n                            percent = +Number(percent * 100).toFixed(2) + \"%\";\n                            return {\n                                name: customerName,\n                                value: percent\n                            };\n                        }\n                    ]}\n                    style={{\n                        lineWidth: 1,\n                        stroke: \"#fff\"\n                    }}\n                >\n                    {/*<Label\n                        content=\"percent\"\n                        formatter={(val, customerName) => {\n                            return customerName.point.customerName + \": \" + val;\n                        }}\n                    />*/}\n                </Geom>\n            </Chart>\n        </div>\n    }\n\n}\nexport default PieChart;","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport {\n    Chart,\n    Geom,\n    Axis,\n    Tooltip,\n    Legend,\n} from 'bizcharts';\n\n@inject('HomeStore')\n@observer\nclass AreaCharts extends React.Component {\n    render() {\n        const data = this.props.HomeStore.staffInfo;\n        const cols = {\n            count: {\n                min: 0\n            },\n            minute: {\n                min: 0\n            }\n        };\n        let chartIns = null;\n        return (\n            <div>\n                <Chart height={300} data={data} scale={cols} forceFit onGetG2Instance={chart => {\n                    chartIns = chart;\n                }}>\n                    <Axis name=\"name\" />\n                    <Axis name=\"count\" />\n                    <Legend\n                        custom={true}\n                        allowAllCanceled={true}\n                        items={[\n                            {\n                                value: \"维修工时\",\n                                marker: {\n                                    symbol: \"square\",\n                                    fill: \"#6236FF\",\n                                    radius: 5\n                                }\n                            },\n                            {\n                                value: \"维修次数\",\n                                marker: {\n                                    symbol: \"square\",\n                                    fill: \"#32C5FF\",\n                                    radius: 5,\n                                }\n                            }\n                        ]}\n                        onClick={ev => {\n                            const item = ev.item;\n                            const value = item.value === '维修次数' ? 'count' : 'minute';\n                            const checked = ev.checked;\n                            const geoms = chartIns.getAllGeoms();\n                            for (let i = 0; i < geoms.length; i++) {\n                                const geom = geoms[i];\n                                console.log(geom.getYScale().field, checked)\n                                if (geom.getYScale().field === value) {\n                                    if (checked) {\n                                        geom.show();\n                                    } else {\n                                        geom.hide();\n                                    }\n                                }\n                            }\n                        }} />\n                    <Tooltip itemTpl=\"<li><span style=&quot;background-color:{color};&quot; class=&quot;g2-tooltip-marker&quot;></span>{name}: {value}</li>\" />\n                    <Geom type=\"areaStack\" position=\"name*count\" tooltip={false} color={[['l (270) 0:#FFFFFF 1:#32C5FF']]} />\n                    <Geom type=\"lineStack\" position=\"name*count\" size={2} color={['#32C5FF']} />\n                    <Geom type=\"areaStack\" position=\"name*minute\" tooltip={false} color={['l (270) 0:#FFFFFF 1:#6236FF']} />\n                    <Geom type=\"lineStack\" position=\"name*minute\" size={2} color={['#6236FF']} />\n                </Chart>\n            </div>\n        );\n    }\n}\nexport default AreaCharts;","/**\n * 首页豆腐块配置 连接到主页面\n */\nimport React from 'react';\nimport './index.less';\nimport { Empty, Card, Button, Modal } from 'antd';\nimport LineChart from './LineChart'\nimport PieChart from './PieChart'\nimport AreaCharts from './AreaCharts'\nimport { inject, observer } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\n\n\n@withRouter\n@inject('HomeStore')\n@observer\nclass HomePage extends React.Component {\n  state = {\n    isShow: false\n  };\n  render() {\n    const { devInfo, workInfo, staffInfo } = this.props.HomeStore\n    return (\n      <div className='home_index'>\n        <div className='home_page_title'>\n          <div className='title_tag'>\n            <div className='title_tag_left'>\n              <span style={{ flex: 1, textAlign: 'right' }}>{this.getNumber(1)}</span>\n              <div style={{ background: 'rgba(98,54,255,1)', width: 27, height: 7 }}></div>\n            </div>\n            <div className='title_tag_right'>\n              <h3>当前未派工单</h3>\n              <div>\n                <img src='https://assets-boranet.oss-cn-hangzhou.aliyuncs.com/img/waiting.png' alt='待派' />\n              </div>\n            </div>\n          </div>\n          <div className='title_tag'>\n            <div className='title_tag_left'>\n              <span style={{ flex: 1, textAlign: 'right' }}>{this.getNumber(2)}</span>\n              <div style={{ background: 'rgba(98,54,255,1)', width: 27, height: 7 }}></div>\n            </div>\n            <div className='title_tag_right'>\n              <h3>当前进行中工单</h3>\n              <div>\n                <img src='https://assets-boranet.oss-cn-hangzhou.aliyuncs.com/img/doing.png' alt='进行中' />\n              </div>\n            </div>\n          </div>\n          <div className='title_tag'>\n            <div className='title_tag_left'>\n              <span style={{ flex: 1, textAlign: 'right' }}>{this.getNumber(3)}</span>\n              <div style={{ background: 'rgba(98,54,255,1)', width: 27, height: 7 }}></div>\n            </div>\n            <div className='title_tag_right'>\n              <h3>当前待结工单</h3>\n              <div>\n                <img src='https://assets-boranet.oss-cn-hangzhou.aliyuncs.com/img/done.png' alt='当前待结工单' />\n              </div>\n            </div>\n          </div>\n          <div className='title_tag'>\n            <div className='title_tag_left'>\n              <span style={{ flex: 1, textAlign: 'right' }}>{this.getNumber(4)}</span>\n              <div style={{ background: 'rgba(98,54,255,1)', width: 27, height: 7 }}></div>\n            </div>\n            <div className='title_tag_right'>\n              <h3>本周已结工单</h3>\n              <div>\n                <img src='https://assets-boranet.oss-cn-hangzhou.aliyuncs.com/img/success.png' alt='本周已结工单' />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"chart_content\">\n          <div style={{ width: '60%', float: 'left' }}>\n            <h3>\n              <span></span>最近7天已结\n          </h3>\n            {workInfo.length ? <LineChart /> : <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description={'暂无数据'} />}\n          </div>\n          <div style={{ width: '38%', float: 'right' }}>\n            <h3>\n              <span></span>设备分布\n          </h3>\n            {devInfo.length ? <PieChart /> : <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description={'暂无数据'} />}\n          </div>\n        </div>\n        <div className=\"chart_content\">\n          <div style={{ width: '100%' }}>\n            <h3>\n              <span></span>人员维修情况\n          </h3>\n            {staffInfo.length ? <AreaCharts /> : <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description={'暂无数据'} />}\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  getNumber = (e) => {\n    const { addInfo } = this.props.HomeStore\n    let number = 0\n    addInfo.map(item => {\n      if (item.status === e) {\n        number = item.number\n        return\n      }\n    })\n    return number\n  }\n  componentDidMount() {\n    this.props.HomeStore.getOddCount()\n    this.props.HomeStore.deviceInfo()\n    this.props.HomeStore.getStaffInfo()\n    this.props.HomeStore.workEndInfo()\n  }\n}\n\nexport default HomePage;\n\n\n"],"sourceRoot":""}