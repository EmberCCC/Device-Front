{"ast":null,"code":"// mutationobserver-shim v0.3.3 (github.com/megawac/MutationObserver.js)\n// Authors: Graeme Yeates (github.com/megawac) \n\n/*\n Shim for MutationObserver interface\n Author: Graeme Yeates (github.com/megawac)\n Repository: https://github.com/megawac/MutationObserver.js\n License: WTFPL V2, 2004 (wtfpl.net).\n Though credit and staring the repo will make me feel pretty, you can modify and redistribute as you please.\n Attempts to follow spec (https://www.w3.org/TR/dom/#mutation-observers) as closely as possible for native javascript\n See https://github.com/WebKit/webkit/blob/master/Source/WebCore/dom/MutationObserver.cpp for current webkit source c++ implementation\n*/\nwindow.MutationObserver || (window.MutationObserver = function (y) {\n  function z(a) {\n    this.i = [];\n    this.m = a;\n  }\n\n  function K(a) {\n    (function c() {\n      var d = a.takeRecords();\n      d.length && a.m(d, a);\n      a.h = setTimeout(c, z._period);\n    })();\n  }\n\n  function r(a) {\n    var b = {\n      type: null,\n      target: null,\n      addedNodes: [],\n      removedNodes: [],\n      previousSibling: null,\n      nextSibling: null,\n      attributeName: null,\n      attributeNamespace: null,\n      oldValue: null\n    },\n        c;\n\n    for (c in a) {\n      b[c] !== y && a[c] !== y && (b[c] = a[c]);\n    }\n\n    return b;\n  }\n\n  function L(a, b) {\n    var c = E(a, b);\n    return function (d) {\n      var f = d.length;\n      b.a && 3 === a.nodeType && a.nodeValue !== c.a && d.push(new r({\n        type: \"characterData\",\n        target: a,\n        oldValue: c.a\n      }));\n      b.b && c.b && C(d, a, c.b, b.f);\n      if (b.c || b.g) var m = M(d, a, c, b);\n      if (m || d.length !== f) c = E(a, b);\n    };\n  }\n\n  function N(a, b) {\n    return b.value;\n  }\n\n  function O(a, b) {\n    return \"style\" !== b.name ? b.value : a.style.cssText;\n  }\n\n  function C(a, b, c, d) {\n    for (var f = {}, m = b.attributes, k, g, p = m.length; p--;) {\n      k = m[p], g = k.name, d && d[g] === y || (F(b, k) !== c[g] && a.push(r({\n        type: \"attributes\",\n        target: b,\n        attributeName: g,\n        oldValue: c[g],\n        attributeNamespace: k.namespaceURI\n      })), f[g] = !0);\n    }\n\n    for (g in c) {\n      f[g] || a.push(r({\n        target: b,\n        type: \"attributes\",\n        attributeName: g,\n        oldValue: c[g]\n      }));\n    }\n  }\n\n  function M(a, b, c, d) {\n    function f(g, p, t, q, x) {\n      var A = g.length - 1;\n      x = -~((A - x) / 2);\n\n      for (var h, l, e; e = g.pop();) {\n        h = t[e.j], l = q[e.l], d.c && x && Math.abs(e.j - e.l) >= A && (a.push(r({\n          type: \"childList\",\n          target: p,\n          addedNodes: [h],\n          removedNodes: [h],\n          nextSibling: h.nextSibling,\n          previousSibling: h.previousSibling\n        })), x--), d.b && l.b && C(a, h, l.b, d.f), d.a && 3 === h.nodeType && h.nodeValue !== l.a && a.push(r({\n          type: \"characterData\",\n          target: h,\n          oldValue: l.a\n        })), d.g && m(h, l);\n      }\n    }\n\n    function m(g, p) {\n      for (var t = g.childNodes, q = p.c, x = t.length, A = q ? q.length : 0, h, l, e, n, v, B = 0, w = 0, u = 0; w < x || u < A;) {\n        n = t[w], v = (e = q[u]) && e.node, n === v ? (d.b && e.b && C(a, n, e.b, d.f), d.a && e.a !== y && n.nodeValue !== e.a && a.push(r({\n          type: \"characterData\",\n          target: n,\n          oldValue: e.a\n        })), l && f(l, g, t, q, B), d.g && (n.childNodes.length || e.c && e.c.length) && m(n, e), w++, u++) : (k = !0, h || (h = {}, l = []), n && (h[e = G(n)] || (h[e] = !0, -1 === (e = H(q, n, u, \"node\")) ? d.c && (a.push(r({\n          type: \"childList\",\n          target: g,\n          addedNodes: [n],\n          nextSibling: n.nextSibling,\n          previousSibling: n.previousSibling\n        })), B++) : l.push({\n          j: w,\n          l: e\n        })), w++), v && v !== t[w] && (h[e = G(v)] || (h[e] = !0, -1 === (e = H(t, v, w)) ? d.c && (a.push(r({\n          type: \"childList\",\n          target: p.node,\n          removedNodes: [v],\n          nextSibling: q[u + 1],\n          previousSibling: q[u - 1]\n        })), B--) : l.push({\n          j: e,\n          l: u\n        })), u++));\n      }\n\n      l && f(l, g, t, q, B);\n    }\n\n    var k;\n    m(b, c);\n    return k;\n  }\n\n  function E(a, b) {\n    var c = !0;\n    return function m(f) {\n      var k = {\n        node: f\n      };\n      !b.a || 3 !== f.nodeType && 8 !== f.nodeType ? (b.b && c && 1 === f.nodeType && (k.b = I(f.attributes, function (g, p) {\n        if (!b.f || b.f[p.name]) g[p.name] = F(f, p);\n        return g;\n      }, {})), c && (b.c || b.a || b.b && b.g) && (k.c = P(f.childNodes, m)), c = b.g) : k.a = f.nodeValue;\n      return k;\n    }(a);\n  }\n\n  function G(a) {\n    try {\n      return a.id || (a.mo_id = a.mo_id || J++);\n    } catch (b) {\n      try {\n        return a.nodeValue;\n      } catch (c) {\n        return J++;\n      }\n    }\n  }\n\n  function P(a, b) {\n    for (var c = [], d = 0; d < a.length; d++) {\n      c[d] = b(a[d], d, a);\n    }\n\n    return c;\n  }\n\n  function I(a, b, c) {\n    for (var d = 0; d < a.length; d++) {\n      c = b(c, a[d], d, a);\n    }\n\n    return c;\n  }\n\n  function H(a, b, c, d) {\n    for (; c < a.length; c++) {\n      if ((d ? a[c][d] : a[c]) === b) return c;\n    }\n\n    return -1;\n  }\n\n  z._period = 30;\n  z.prototype = {\n    observe: function observe(a, b) {\n      for (var c = {\n        b: !!(b.attributes || b.attributeFilter || b.attributeOldValue),\n        c: !!b.childList,\n        g: !!b.subtree,\n        a: !(!b.characterData && !b.characterDataOldValue)\n      }, d = this.i, f = 0; f < d.length; f++) {\n        d[f].s === a && d.splice(f, 1);\n      }\n\n      b.attributeFilter && (c.f = I(b.attributeFilter, function (m, k) {\n        m[k] = !0;\n        return m;\n      }, {}));\n      d.push({\n        s: a,\n        o: L(a, c)\n      });\n      this.h || K(this);\n    },\n    takeRecords: function takeRecords() {\n      for (var a = [], b = this.i, c = 0; c < b.length; c++) {\n        b[c].o(a);\n      }\n\n      return a;\n    },\n    disconnect: function disconnect() {\n      this.i = [];\n      clearTimeout(this.h);\n      this.h = null;\n    }\n  };\n  var D = document.createElement(\"i\");\n  D.style.top = 0;\n  var F = (D = \"null\" != D.attributes.style.value) ? N : O,\n      J = 1;\n  return z;\n}(void 0));","map":null,"metadata":{},"sourceType":"script"}