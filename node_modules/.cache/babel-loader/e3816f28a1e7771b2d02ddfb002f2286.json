{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/tabs/style\";\nimport _Tabs from \"antd/lib/tabs\";\nimport _classCallCheck from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\n\nvar _dec,\n    _dec2,\n    _class,\n    _jsxFileName = \"F:\\\\documents\\\\bl-device-manage-test\\\\src\\\\components\\\\GlobalForm\\\\index.js\";\n\n/*\r\n * @Author: your name\r\n * @Date: 2022-04-05 11:02:45\r\n * @LastEditTime: 2022-04-12 22:53:22\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n * @FilePath: \\bl-device-manage-test\\src\\components\\GlobalForm\\index.js\r\n */\nimport React from 'react';\nimport { EditOutlined } from '@ant-design/icons';\nimport { GlobalComponent } from 'layouts/TableEdit/config';\nimport { inject, observer } from 'mobx-react';\nimport { typeName } from 'constants/status_constant';\nimport { toJS } from 'mobx';\nvar Option = _Select.Option;\nvar GlobalForm = (_dec = inject('HomeStore'), _dec2 = inject('BasicStore'), _dec(_class = _dec2(_class = observer(_class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GlobalForm, _React$Component);\n\n  function GlobalForm() {\n    _classCallCheck(this, GlobalForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GlobalForm).apply(this, arguments));\n  }\n\n  _createClass(GlobalForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props$HomeStore = this.props.HomeStore,\n          secondFormId = _this$props$HomeStore.secondFormId,\n          itemDataT = _this$props$HomeStore.itemDataT;\n      var loading = this.props.loading;\n      var getData = this.props.getData;\n      var TabPane = _Tabs.TabPane;\n      var page = {\n        pageIndex: 1,\n        pageSize: 2\n      };\n      var itemData = [];\n      var uploadData = [];\n      var secondId = secondFormId; //转换为所需对象\n\n      var changeField = function changeField() {\n        var obj = [];\n\n        if (itemDataT.length != 0) {\n          var itemData1 = itemDataT.filter(function (txt) {\n            return txt.secondFormId == secondId;\n          });\n\n          if (itemData1.length == 0) {\n            return [];\n          }\n\n          toJS(itemData1);\n          var properties = {};\n          properties = toJS(itemData1[0].properties);\n          properties.forEach(function (element) {\n            var ele = {};\n            ele.label = element.name;\n            ele.attr = element.others;\n            delete ele.attr.value;\n            ele.propertyId = element.propertyId;\n            ele.name = typeName[element.typeId];\n            obj.push(ele);\n          });\n        }\n\n        itemData = obj;\n        return obj;\n      };\n\n      var handleLabelChange = function handleLabelChange(e) {\n        var x = Object.keys(e);\n        itemData.map(function (item) {\n          if (item.label == x[0]) {\n            item.attr.value = e[x[0]];\n          }\n        });\n      };\n\n      var renderDiffComponents = function renderDiffComponents(item, indexs, ComponentInfo) {\n        switch (item.name) {\n          case 'Divider':\n            return React.createElement(ComponentInfo, Object.assign({\n              key: indexs\n            }, item.attr, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 72\n              },\n              __self: this\n            }));\n\n          case 'Select':\n            return React.createElement(ComponentInfo, {\n              key: indexs,\n              defaultValue: item.attr.value,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 75\n              },\n              __self: this\n            }, item.attr.options.map(function (subItem) {\n              return React.createElement(Option, {\n                key: subItem.key,\n                value: subItem.value + '',\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 77\n                },\n                __self: this\n              }, subItem.label);\n            }));\n\n          default:\n            return React.createElement(ComponentInfo, Object.assign({\n              key: indexs\n            }, item.attr, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 82\n              },\n              __self: this\n            }));\n        }\n      }; // 递归函数\n\n\n      var loop = function loop(arr, index) {\n        arr = changeField();\n        console.log(arr);\n        return arr.map(function (item, i) {\n          var indexs = index === '' ? String(i) : \"\".concat(index, \"-\").concat(i);\n\n          if (item) {\n            if (item.children) {\n              return React.createElement(\"div\", Object.assign({}, item.attr, {\n                \"data-id\": indexs,\n                key: indexs,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 95\n                },\n                __self: this\n              }), loop(item.children, indexs));\n            }\n\n            var ComponentInfo = GlobalComponent[item.name];\n            return React.createElement(_Form.Item, {\n              key: indexs,\n              label: item.label,\n              name: item.label,\n              className: \"formItemStyle\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 102\n              },\n              __self: this\n            }, renderDiffComponents(item, indexs, ComponentInfo));\n          } else {\n            return null;\n          }\n        });\n      };\n\n      var sub = function sub(values) {\n        var _this$props$HomeStore2 = _this.props.HomeStore,\n            firstFormId = _this$props$HomeStore2.firstFormId,\n            addNew = _this$props$HomeStore2.addNew;\n        var data = {};\n        console.log(toJS(itemDataT));\n        itemData.forEach(function (element) {\n          var key = element.propertyId;\n\n          if ('value' in element.attr) {\n            data[key] = element.attr.value;\n          }\n        });\n        console.log(data);\n        var params = {};\n        params.data = uploadData;\n        params.firstFormId = firstFormId;\n\n        _Modal.confirm({\n          title: '提示',\n          content: '是否添加此条数据？',\n          okText: '确认',\n          cancelText: '取消',\n          onOk: function onOk() {\n            console.log(_this.props.HomeStore.itemDataT);\n            console.log(params); // getData(page)\n            // addNew(params).then(res => {\n            //     message.success('添加成功')\n            // })\n          }\n        });\n      };\n\n      var changeTabs = function changeTabs(e) {\n        _this.secondId = Number(e);\n        uploadData.map(function (item) {\n          console.log(item);\n        });\n      };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(_Tabs, {\n        size: \"large\",\n        activeKey: secondId.toString(),\n        onChange: changeTabs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, this.props.HomeStore.itemDataT.map(function (item, index) {\n        return React.createElement(TabPane, {\n          tab: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159\n            },\n            __self: this\n          }, React.createElement(EditOutlined, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159\n            },\n            __self: this\n          }), item.secondFormId),\n          key: (index + 1).toString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        });\n      })), React.createElement(_Form, {\n        layout: 'vertical',\n        onFinish: sub,\n        onValuesChange: handleLabelChange,\n        loading: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, loop(itemData, ''), React.createElement(_Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        onClick: sub,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return GlobalForm;\n}(React.Component)) || _class) || _class) || _class);\nexport default GlobalForm;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage-test\\src\\components\\GlobalForm\\index.js"],"names":["React","EditOutlined","GlobalComponent","inject","observer","typeName","toJS","Option","GlobalForm","props","HomeStore","secondFormId","itemDataT","loading","getData","TabPane","page","pageIndex","pageSize","itemData","uploadData","secondId","changeField","obj","length","itemData1","filter","txt","properties","forEach","element","ele","label","name","attr","others","value","propertyId","typeId","push","handleLabelChange","e","x","Object","keys","map","item","renderDiffComponents","indexs","ComponentInfo","options","subItem","key","loop","arr","index","console","log","i","String","children","sub","values","firstFormId","addNew","data","params","confirm","title","content","okText","cancelText","onOk","changeTabs","Number","toString","Component"],"mappings":"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","sourcesContent":["/*\r\n * @Author: your name\r\n * @Date: 2022-04-05 11:02:45\r\n * @LastEditTime: 2022-04-12 22:53:22\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n * @FilePath: \\bl-device-manage-test\\src\\components\\GlobalForm\\index.js\r\n */\r\n\r\nimport React from 'react'\r\nimport { Form, Button, Select, Modal, message, Tabs } from 'antd'\r\nimport { EditOutlined } from '@ant-design/icons';\r\nimport { GlobalComponent } from 'layouts/TableEdit/config';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { typeName } from 'constants/status_constant';\r\nimport { toJS } from 'mobx';\r\n\r\nconst { Option } = Select;\r\n@inject('HomeStore')\r\n@inject('BasicStore')\r\n@observer\r\nclass GlobalForm extends React.Component {\r\n    render() {\r\n        const { secondFormId, itemDataT } = this.props.HomeStore\r\n        const loading = this.props.loading\r\n        const getData = this.props.getData\r\n        const { TabPane } = Tabs;\r\n        let page = { pageIndex: 1, pageSize: 2 }\r\n        let itemData = []\r\n        let uploadData = []\r\n        let secondId = secondFormId\r\n        //转换为所需对象\r\n        const changeField = () => {\r\n            let obj = []\r\n            if (itemDataT.length != 0) {\r\n                let itemData1 = itemDataT.filter(function (txt) {\r\n                    return txt.secondFormId == secondId\r\n                })\r\n                if (itemData1.length == 0) {\r\n                    return [];\r\n                }\r\n                toJS(itemData1)\r\n                let properties = {}\r\n                properties = toJS(itemData1[0].properties)\r\n                properties.forEach(element => {\r\n                    let ele = {}\r\n                    ele.label = element.name\r\n                    ele.attr = element.others\r\n                    delete ele.attr.value\r\n                    ele.propertyId = element.propertyId\r\n                    ele.name = typeName[element.typeId]\r\n                    obj.push(ele)\r\n                });\r\n            }\r\n            itemData = obj\r\n            return obj\r\n        }\r\n\r\n\r\n        const handleLabelChange = (e) => {\r\n            const x = Object.keys(e);\r\n            itemData.map(item => {\r\n                if (item.label == x[0]) {\r\n                    item.attr.value = e[x[0]];\r\n                }\r\n            })\r\n        }\r\n\r\n        const renderDiffComponents = (item, indexs, ComponentInfo) => {\r\n            switch (item.name) {\r\n                case 'Divider':\r\n                    return <ComponentInfo key={indexs} {...item.attr}></ComponentInfo>\r\n                case 'Select':\r\n                    return (\r\n                        <ComponentInfo key={indexs} defaultValue={item.attr.value}>\r\n                            {\r\n                                item.attr.options.map(subItem => <Option key={subItem.key} value={subItem.value + ''}>{subItem.label}</Option>)\r\n                            }\r\n                        </ComponentInfo>\r\n                    )\r\n                default:\r\n                    return <ComponentInfo key={indexs} {...item.attr} />\r\n            }\r\n        }\r\n        // 递归函数\r\n        const loop = (arr, index) => {\r\n            arr = changeField()\r\n            console.log(arr);\r\n            return (\r\n                arr.map((item, i) => {\r\n                    const indexs = index === '' ? String(i) : `${index}-${i}`;\r\n                    if (item) {\r\n                        if (item.children) {\r\n                            return (\r\n                                <div {...item.attr} data-id={indexs} key={indexs}>\r\n                                    {loop(item.children, indexs)}\r\n                                </div>\r\n                            )\r\n                        }\r\n                        const ComponentInfo = GlobalComponent[item.name]\r\n                        return (\r\n                            <Form.Item\r\n                                key={indexs}\r\n                                label={item.label}\r\n                                name={item.label}\r\n                                className='formItemStyle'\r\n                            >\r\n                                {\r\n                                    renderDiffComponents(item, indexs, ComponentInfo)\r\n                                }\r\n                            </Form.Item>\r\n                        )\r\n                    } else {\r\n                        return null\r\n                    }\r\n                })\r\n            )\r\n        };\r\n\r\n        const sub = (values) => {\r\n            const { firstFormId, addNew } = this.props.HomeStore\r\n            let data = {}\r\n            console.log(toJS(itemDataT));\r\n            itemData.forEach(element => {\r\n                let key = element.propertyId\r\n                if ('value' in element.attr) {\r\n                    data[key] = element.attr.value\r\n                }\r\n            });\r\n            console.log(data);\r\n            let params = {};\r\n            params.data = uploadData\r\n            params.firstFormId = firstFormId\r\n            Modal.confirm({\r\n                title: '提示',\r\n                content: '是否添加此条数据？',\r\n                okText: '确认',\r\n                cancelText: '取消',\r\n                onOk: () => {\r\n                    console.log(this.props.HomeStore.itemDataT);\r\n                    console.log(params);\r\n                    // getData(page)\r\n                    // addNew(params).then(res => {\r\n                    //     message.success('添加成功')\r\n                    // })\r\n                },\r\n            });\r\n        }\r\n\r\n        const changeTabs = (e) => {\r\n            this.secondId = Number(e)\r\n            uploadData.map((item) => {\r\n                console.log(item);\r\n            })\r\n        }\r\n        return <div>\r\n            <Tabs size='large' activeKey={secondId.toString()} onChange={changeTabs}>\r\n                {this.props.HomeStore.itemDataT.map((item,index)=>{\r\n                    return <TabPane tab={<div><EditOutlined />{item.secondFormId}</div>} key={(index + 1).toString()} />\r\n                })}\r\n            </Tabs>\r\n            <Form layout={'vertical'} onFinish={sub} onValuesChange={handleLabelChange} loading={loading}>\r\n                {loop(itemData, '')}\r\n                <Form.Item>\r\n                    <Button type=\"primary\" onClick={sub}>Submit</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    }\r\n\r\n}\r\nexport default GlobalForm"]},"metadata":{},"sourceType":"module"}