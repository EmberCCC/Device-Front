{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { get, put } from '../utils/request';\nexport var requestUrl = {\n  getSpareType: '/manage/spare/spareType/list',\n  //备件类型列表\n  saveSpareType: '/manage/spare/spareType/save',\n  //新增备件类型\n  deleteSpareType: '/manage/spare/spareType/delete',\n  //删除备件类型\n  allSpareType: '/manage/spare/spareType/listAll',\n  //所有备件类型\n  getSpare: '/manage/spare/spare/list',\n  //备件列表\n  saveSpare: '/manage/spare/spare/save',\n  //新增备件\n  spareAll: '/manage/spare/spare/listAll',\n  //新增备件\n  deleteSpare: '/manage/spare/spare/delete',\n  //删除备件\n  getDeviceType: '/manage/base/deviceModel/listAll',\n  //设备型号\n  operationSpare: '/manage/spare/spareRecord/operation',\n  //设备类型出入库\n  spareRecordList: '/manage/spare/spareRecord/list',\n  //出入库记录\n  warnList: '/manage/spare/warn/list',\n  //库存预警\n  getByType: '/manage/work/getByType',\n  //工单\n  export: '/manage/spare/spare/export' // modelList: '/manage/base/deviceModel/listByTypeId',//类型获取设备型号\n\n};\n/* 测试接口的数据 */\n\nexport function getRequest(_x, _x2, _x3) {\n  return _getRequest.apply(this, arguments);\n}\n/* 测试接口的数据 */\n\nfunction _getRequest() {\n  _getRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url, data, options) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return get(url, data, options);\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getRequest.apply(this, arguments);\n}\n\nexport function putRequest(_x4, _x5, _x6) {\n  return _putRequest.apply(this, arguments);\n}\n\nfunction _putRequest() {\n  _putRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(url, data, options) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return put(url, data, options);\n\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _putRequest.apply(this, arguments);\n}","map":{"version":3,"sources":["C:/Users/Misaki/Desktop/kda/设备运维前端/bl-device-manage/src/services/spareparts.js"],"names":["get","put","requestUrl","getSpareType","saveSpareType","deleteSpareType","allSpareType","getSpare","saveSpare","spareAll","deleteSpare","getDeviceType","operationSpare","spareRecordList","warnList","getByType","export","getRequest","url","data","options","putRequest"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,GAAd,QAAyB,kBAAzB;AAEA,OAAO,IAAMC,UAAU,GAAG;AACtBC,EAAAA,YAAY,EAAE,8BADQ;AACuB;AAC7CC,EAAAA,aAAa,EAAE,8BAFO;AAEwB;AAC9CC,EAAAA,eAAe,EAAE,gCAHK;AAG4B;AAClDC,EAAAA,YAAY,EAAE,iCAJQ;AAI0B;AAChDC,EAAAA,QAAQ,EAAE,0BALY;AAKe;AACrCC,EAAAA,SAAS,EAAE,0BANW;AAMgB;AACtCC,EAAAA,QAAQ,EAAE,6BAPY;AAOkB;AACxCC,EAAAA,WAAW,EAAE,4BARS;AAQoB;AAC1CC,EAAAA,aAAa,EAAE,kCATO;AAS4B;AAClDC,EAAAA,cAAc,EAAE,qCAVM;AAUgC;AACtDC,EAAAA,eAAe,EAAE,gCAXK;AAW4B;AAClDC,EAAAA,QAAQ,EAAE,yBAZY;AAYc;AACpCC,EAAAA,SAAS,EAAE,wBAbW;AAac;AACpCC,EAAAA,MAAM,EAAC,4BAde,CAetB;;AAfsB,CAAnB;AAmBP;;AACA,gBAAsBC,UAAtB;AAAA;AAAA;AAIA;;;yEAJO,iBAA0BC,GAA1B,EAA+BC,IAA/B,EAAqCC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACUpB,GAAG,CAACkB,GAAD,EAAMC,IAAN,EAAYC,OAAZ,CADb;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAKP,gBAAsBC,UAAtB;AAAA;AAAA;;;yEAAO,kBAA0BH,GAA1B,EAA+BC,IAA/B,EAAqCC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACUnB,GAAG,CAACiB,GAAD,EAAMC,IAAN,EAAYC,OAAZ,CADb;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { get, put } from '../utils/request';\n\nexport const requestUrl = {\n    getSpareType: '/manage/spare/spareType/list',//备件类型列表\n    saveSpareType: '/manage/spare/spareType/save',//新增备件类型\n    deleteSpareType: '/manage/spare/spareType/delete',//删除备件类型\n    allSpareType: '/manage/spare/spareType/listAll',//所有备件类型\n    getSpare: '/manage/spare/spare/list',//备件列表\n    saveSpare: '/manage/spare/spare/save',//新增备件\n    spareAll: '/manage/spare/spare/listAll',//新增备件\n    deleteSpare: '/manage/spare/spare/delete',//删除备件\n    getDeviceType: '/manage/base/deviceModel/listAll',//设备型号\n    operationSpare: '/manage/spare/spareRecord/operation',//设备类型出入库\n    spareRecordList: '/manage/spare/spareRecord/list',//出入库记录\n    warnList: '/manage/spare/warn/list',//库存预警\n    getByType: '/manage/work/getByType',//工单\n    export:'/manage/spare/spare/export',\n    // modelList: '/manage/base/deviceModel/listByTypeId',//类型获取设备型号\n\n}\n\n/* 测试接口的数据 */\nexport async function getRequest(url, data, options) {\n    return await get(url, data, options);\n}\n\n/* 测试接口的数据 */\nexport async function putRequest(url, data, options) {\n    return await put(url, data, options);\n}"]},"metadata":{},"sourceType":"module"}