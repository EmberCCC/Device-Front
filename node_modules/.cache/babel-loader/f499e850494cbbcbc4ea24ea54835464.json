{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"type\", \"children\"];\nimport * as React from 'react';\nimport Icon from './Icon';\nvar customCache = new Set();\n\nfunction isValidCustomScriptUrl(scriptUrl) {\n  return Boolean(typeof scriptUrl === 'string' && scriptUrl.length && !customCache.has(scriptUrl));\n}\n\nfunction createScriptUrlElements(scriptUrls) {\n  var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var currentScriptUrl = scriptUrls[index];\n\n  if (isValidCustomScriptUrl(currentScriptUrl)) {\n    var script = document.createElement('script');\n    script.setAttribute('src', currentScriptUrl);\n    script.setAttribute('data-namespace', currentScriptUrl);\n\n    if (scriptUrls.length > index + 1) {\n      script.onload = function () {\n        createScriptUrlElements(scriptUrls, index + 1);\n      };\n\n      script.onerror = function () {\n        createScriptUrlElements(scriptUrls, index + 1);\n      };\n    }\n\n    customCache.add(currentScriptUrl);\n    document.body.appendChild(script);\n  }\n}\n\nexport default function create() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var scriptUrl = options.scriptUrl,\n      _options$extraCommonP = options.extraCommonProps,\n      extraCommonProps = _options$extraCommonP === void 0 ? {} : _options$extraCommonP;\n  /**\n   * DOM API required.\n   * Make sure in browser environment.\n   * The Custom Icon will create a <script/>\n   * that loads SVG symbols and insert the SVG Element into the document body.\n   */\n\n  if (scriptUrl && typeof document !== 'undefined' && typeof window !== 'undefined' && typeof document.createElement === 'function') {\n    if (Array.isArray(scriptUrl)) {\n      // 因为iconfont资源会把svg插入before，所以前加载相同type会覆盖后加载，为了数组覆盖顺序，倒叙插入\n      createScriptUrlElements(scriptUrl.reverse());\n    } else {\n      createScriptUrlElements([scriptUrl]);\n    }\n  }\n\n  var Iconfont = /*#__PURE__*/React.forwardRef(function (props, ref) {\n    var type = props.type,\n        children = props.children,\n        restProps = _objectWithoutProperties(props, _excluded); // children > type\n\n\n    var content = null;\n\n    if (props.type) {\n      content = /*#__PURE__*/React.createElement(\"use\", {\n        xlinkHref: \"#\".concat(type)\n      });\n    }\n\n    if (children) {\n      content = children;\n    }\n\n    return /*#__PURE__*/React.createElement(Icon, _objectSpread(_objectSpread(_objectSpread({}, extraCommonProps), restProps), {}, {\n      ref: ref\n    }), content);\n  });\n  Iconfont.displayName = 'Iconfont';\n  return Iconfont;\n}","map":null,"metadata":{},"sourceType":"module"}