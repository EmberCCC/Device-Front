{"ast":null,"code":"import \"antd/lib/spin/style\";\nimport _Spin from \"antd/lib/spin\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/popover/style\";\nimport _Popover from \"antd/lib/popover\";\nimport \"antd/lib/checkbox/style\";\nimport _Checkbox from \"antd/lib/checkbox\";\nimport _classCallCheck from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\n\nvar _dec,\n    _class,\n    _jsxFileName = \"F:\\\\documents\\\\bl-device-manage-test\\\\src\\\\components\\\\GlobalTabel2\\\\dataModal.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/*\r\n * @Author: EmberCCC 1810888456@qq.com\r\n * @Date: 2022-06-30 09:07:55\r\n * @LastEditors: EmberCCC 1810888456@qq.com\r\n * @LastEditTime: 2022-07-06 16:39:24\r\n * @FilePath: \\bl-device-manage-test\\src\\components\\GlobalTabel2\\dataModal.js\r\n * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n */\nimport { FunnelPlotOutlined } from '@ant-design/icons';\nimport { Radio } from 'components/BLComps';\nimport { toJS } from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport React, { Component } from 'react';\nimport { injectSelfToken } from 'utils/request';\nimport './index.css';\nvar DataModal = (_dec = inject('TableStore', 'HomeStore'), _dec(_class = observer(_class = /*#__PURE__*/function (_Component) {\n  _inherits(DataModal, _Component);\n\n  var _super = _createSuper(DataModal);\n\n  function DataModal() {\n    _classCallCheck(this, DataModal);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DataModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props$TableStor = this.props.TableStore,\n          itemIndex = _this$props$TableStor.itemIndex,\n          dataSource = _this$props$TableStor.dataSource,\n          modalFieldValue = _this$props$TableStor.modalFieldValue,\n          modalField = _this$props$TableStor.modalField,\n          modalData = _this$props$TableStor.modalData,\n          formArr = _this$props$TableStor.formArr;\n\n      var getExactData = function getExactData(formName) {\n        console.log(toJS(formArr[formName]));\n\n        for (var key in formArr[formName]) {\n          if (Object.hasOwnProperty.call(formArr[formName], key)) {\n            var element = formArr[formName][key];\n\n            if (key == 'properties') {\n              for (var key1 in element) {\n                console.log(key1);\n              }\n            }\n          }\n        } // return (\n        //     modalField.map((item) => {\n        //         if (modalFieldValue.includes(item['id']) && !(['createPerson', 'createTime', 'updateTime'].indexOf(item['id']) > -1)) {\n        //             const detaileJson = JSON.parse(toJS(item['detailJson']))\n        //             const title = detaileJson['title'];\n        //             return (\n        //                 <div className='item_content' key={item['id']}>\n        //                     <div className='item_title'>\n        //                         {title}\n        //                     </div>\n        //                     <div className='item_article'>\n        //                         {modalData[item['id']]}\n        //                     </div>\n        //                 </div>\n        //             )\n        //         }\n        //     })\n        // )\n\n      };\n\n      var getData = function getData() {\n        console.log(toJS(formArr));\n        console.log(toJS(modalField));\n        console.log(toJS(modalFieldValue));\n        getExactData('root'); // return (\n        //     modalField.map((item) => {\n        //         if (modalFieldValue.includes(item['id']) && !(['createPerson', 'createTime', 'updateTime'].indexOf(item['id']) > -1)) {\n        //             const detaileJson = JSON.parse(toJS(item['detailJson']))\n        //             const title = detaileJson['title'];\n        //             return (\n        //                 <div className='item_content' key={item['id']}>\n        //                     <div className='item_title'>\n        //                         {title}\n        //                     </div>\n        //                     <div className='item_article'>\n        //                         {modalData[item['id']]}\n        //                     </div>\n        //                 </div>\n        //             )\n        //         }\n        //     })\n        // )\n      };\n\n      var getInfo = function getInfo() {\n        var arr = ['createPerson', 'createTime', 'updateTime'];\n        var arr_title = {\n          'createPerson': '创建人',\n          'createTime': '创建时间',\n          'updateTime': '更新时间'\n        };\n        return arr.map(function (item) {\n          if (modalFieldValue.includes(item)) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"info_item\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 91\n              },\n              __self: this\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"info_title\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 92\n              },\n              __self: this\n            }, arr_title[item]), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"info_article\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 93\n              },\n              __self: this\n            }, modalData[item]));\n          }\n        });\n      };\n\n      var handleClickFront = function handleClickFront() {\n        console.log(dataSource[itemIndex - 1]);\n\n        _this.props.TableStore.getOneData({\n          'formId': _this.props.HomeStore.firstFormId,\n          \"dataId\": dataSource[itemIndex - 1]['key']\n        });\n\n        _this.props.TableStore.setValue('itemIndex', itemIndex - 1);\n      };\n\n      var handleClickBehind = function handleClickBehind() {\n        console.log(dataSource[itemIndex + 1]);\n\n        _this.props.TableStore.getOneData({\n          'formId': _this.props.HomeStore.firstFormId,\n          \"dataId\": dataSource[itemIndex + 1]['key']\n        });\n\n        _this.props.TableStore.setValue('itemIndex', itemIndex + 1);\n      };\n\n      var judgeFront = function judgeFront() {\n        if (itemIndex == 0) {\n          return true;\n        } else {\n          return false;\n        }\n      };\n\n      var judgeBehind = function judgeBehind() {\n        if (itemIndex == dataSource.length - 1) {\n          return true;\n        } else {\n          return false;\n        }\n      };\n\n      var checkChange = function checkChange(value) {\n        _this.props.TableStore.setValue('modalFieldValue', value);\n      };\n\n      var visibleChange = function visibleChange(visible) {\n        // if (visible == false) {\n        // }\n        console.log(visible);\n      };\n\n      var handleClick = function handleClick(value) {\n        if (value == 'del') {\n          var formdata = new FormData();\n          formdata.append('formId', parseInt(toJS(_this.props.HomeStore.firstFormId)));\n          formdata.append('dataId', parseInt(modalData['id']));\n          var requestOptions = {\n            method: 'POST',\n            headers: {\n              'Authorization': injectSelfToken()\n            },\n            body: formdata\n          };\n          fetch(\"/data/delete\", requestOptions).then(function (response) {\n            return response.text();\n          }).then(function (result) {\n            return _this.props.TableStore.getAllData({\n              'formId': _this.props.HomeStore.firstFormId\n            }, 'all');\n          }).catch(function (error) {\n            console.log('error', error);\n          });\n\n          _this.props.TableStore.setDataPageModalVis(false);\n        }\n\n        console.log(value);\n      };\n\n      var fieldChoose = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Checkbox.Group, {\n        onChange: checkChange,\n        defaultValue: this.props.TableStore.modalFieldValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, modalField.map(function (item, index) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Checkbox, {\n          value: item.id,\n          key: index,\n          style: {\n            width: '300px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, item.name), /*#__PURE__*/React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }));\n      })));\n      return /*#__PURE__*/React.createElement(_Spin, {\n        spinning: this.props.TableStore.isLoading,\n        size: \"large\",\n        tip: \"Loading..\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"main_modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"left_main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"left_modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"left_header_left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(_Popover, {\n        placement: \"bottomRight\",\n        content: fieldChoose,\n        trigger: \"click\",\n        onVisibleChange: visibleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"header_btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(FunnelPlotOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), \"\\u5B57\\u6BB5\")), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: function onClick() {\n          handleClick('share');\n        },\n        className: \"header_btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(FunnelPlotOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), \"\\u5206\\u4EAB\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header_split\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: function onClick() {\n          handleClick('print');\n        },\n        className: \"header_btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(FunnelPlotOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), \"\\u6253\\u5370\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: function onClick() {\n          handleClick('copy');\n        },\n        className: \"header_btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(FunnelPlotOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), \"\\u590D\\u5236\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: function onClick() {\n          handleClick('edit');\n        },\n        className: \"header_btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(FunnelPlotOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), \"\\u7F16\\u8F91\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: function onClick() {\n          handleClick('del');\n        },\n        className: \"header_btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(FunnelPlotOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), \"\\u5220\\u9664\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"left_header_right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(_Button, {\n        size: \"small\",\n        disabled: judgeFront(),\n        type: \"text\",\n        onClick: handleClickFront,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"\\u2190\"), /*#__PURE__*/React.createElement(\"span\", {\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, itemIndex + 1, \"/\", dataSource.length), /*#__PURE__*/React.createElement(_Button, {\n        size: \"small\",\n        disabled: judgeBehind(),\n        type: \"text\",\n        onClick: handleClickBehind,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"\\u2192\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"left_content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, getData(), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"info_content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, getInfo()))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"right_modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"right_header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Radio.Group, {\n        onChange: function onChange(value) {\n          return console.log(value);\n        },\n        defaultValue: \"1\",\n        style: {\n          paddingLeft: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Radio.Button, {\n        value: '1',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"\\u6570\\u636E\\u65E5\\u5FD7\"), /*#__PURE__*/React.createElement(Radio.Button, {\n        value: '2',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"\\u8BC4\\u8BBA\"))))));\n    }\n  }]);\n\n  return DataModal;\n}(Component)) || _class) || _class);\nexport default DataModal;","map":{"version":3,"names":["FunnelPlotOutlined","Radio","toJS","inject","observer","React","Component","injectSelfToken","DataModal","props","TableStore","itemIndex","dataSource","modalFieldValue","modalField","modalData","formArr","getExactData","formName","console","log","key","Object","hasOwnProperty","call","element","key1","getData","getInfo","arr","arr_title","map","item","includes","handleClickFront","getOneData","HomeStore","firstFormId","setValue","handleClickBehind","judgeFront","judgeBehind","length","checkChange","value","visibleChange","visible","handleClick","formdata","FormData","append","parseInt","requestOptions","method","headers","body","fetch","then","response","text","result","getAllData","catch","error","setDataPageModalVis","fieldChoose","index","id","width","name","isLoading","paddingLeft"],"sources":["F:/documents/bl-device-manage-test/src/components/GlobalTabel2/dataModal.js"],"sourcesContent":["/*\r\n * @Author: EmberCCC 1810888456@qq.com\r\n * @Date: 2022-06-30 09:07:55\r\n * @LastEditors: EmberCCC 1810888456@qq.com\r\n * @LastEditTime: 2022-07-06 16:39:24\r\n * @FilePath: \\bl-device-manage-test\\src\\components\\GlobalTabel2\\dataModal.js\r\n * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n */\r\nimport { FunnelPlotOutlined } from '@ant-design/icons'\r\nimport { Button, Checkbox, Popover, Spin } from 'antd'\r\nimport { Radio } from 'components/BLComps'\r\nimport { toJS } from 'mobx'\r\nimport { inject, observer } from 'mobx-react'\r\nimport React, { Component } from 'react'\r\nimport { injectSelfToken } from 'utils/request'\r\nimport './index.css'\r\n\r\n@inject('TableStore', 'HomeStore')\r\n@observer\r\nclass DataModal extends Component {\r\n    render() {\r\n        const { itemIndex, dataSource, modalFieldValue, modalField, modalData, formArr } = this.props.TableStore\r\n        const getExactData = (formName) => {\r\n            console.log(toJS(formArr[formName]));\r\n            for (const key in formArr[formName]) {\r\n                if (Object.hasOwnProperty.call(formArr[formName], key)) {\r\n                    const element = formArr[formName][key];\r\n                    if (key == 'properties') {\r\n                        for (const key1 in element) {\r\n                            console.log(key1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // return (\r\n            //     modalField.map((item) => {\r\n            //         if (modalFieldValue.includes(item['id']) && !(['createPerson', 'createTime', 'updateTime'].indexOf(item['id']) > -1)) {\r\n            //             const detaileJson = JSON.parse(toJS(item['detailJson']))\r\n            //             const title = detaileJson['title'];\r\n            //             return (\r\n            //                 <div className='item_content' key={item['id']}>\r\n            //                     <div className='item_title'>\r\n            //                         {title}\r\n            //                     </div>\r\n            //                     <div className='item_article'>\r\n            //                         {modalData[item['id']]}\r\n            //                     </div>\r\n            //                 </div>\r\n            //             )\r\n            //         }\r\n\r\n            //     })\r\n            // )\r\n        }\r\n        const getData = () => {\r\n            console.log(toJS(formArr));\r\n            console.log(toJS(modalField));\r\n            console.log(toJS(modalFieldValue));\r\n            getExactData('root')\r\n            // return (\r\n            //     modalField.map((item) => {\r\n            //         if (modalFieldValue.includes(item['id']) && !(['createPerson', 'createTime', 'updateTime'].indexOf(item['id']) > -1)) {\r\n            //             const detaileJson = JSON.parse(toJS(item['detailJson']))\r\n            //             const title = detaileJson['title'];\r\n            //             return (\r\n            //                 <div className='item_content' key={item['id']}>\r\n            //                     <div className='item_title'>\r\n            //                         {title}\r\n            //                     </div>\r\n            //                     <div className='item_article'>\r\n            //                         {modalData[item['id']]}\r\n            //                     </div>\r\n            //                 </div>\r\n            //             )\r\n            //         }\r\n\r\n            //     })\r\n            // )\r\n        }\r\n        const getInfo = () => {\r\n            const arr = ['createPerson', 'createTime', 'updateTime'];\r\n            const arr_title = {\r\n                'createPerson': '创建人',\r\n                'createTime': '创建时间',\r\n                'updateTime': '更新时间'\r\n            }\r\n            return (\r\n                arr.map((item) => {\r\n                    if (modalFieldValue.includes(item)) {\r\n                        return (\r\n                            <div className='info_item'>\r\n                                <div className='info_title'>{arr_title[item]}</div>\r\n                                <div className='info_article'>{modalData[item]}</div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                })\r\n            )\r\n        }\r\n        const handleClickFront = () => {\r\n            console.log(dataSource[itemIndex - 1]);\r\n            this.props.TableStore.getOneData({ 'formId': this.props.HomeStore.firstFormId, \"dataId\": dataSource[itemIndex - 1]['key'] })\r\n            this.props.TableStore.setValue('itemIndex', itemIndex - 1);\r\n        }\r\n        const handleClickBehind = () => {\r\n            console.log(dataSource[itemIndex + 1]);\r\n            this.props.TableStore.getOneData({ 'formId': this.props.HomeStore.firstFormId, \"dataId\": dataSource[itemIndex + 1]['key'] })\r\n            this.props.TableStore.setValue('itemIndex', itemIndex + 1);\r\n\r\n        }\r\n        const judgeFront = () => {\r\n            if (itemIndex == 0) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n        const judgeBehind = () => {\r\n            if (itemIndex == dataSource.length - 1) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n        const checkChange = (value) => {\r\n            this.props.TableStore.setValue('modalFieldValue', value)\r\n        }\r\n        const visibleChange = (visible) => {\r\n            // if (visible == false) {\r\n\r\n            // }\r\n            console.log(visible);\r\n        }\r\n        const handleClick = (value) => {\r\n            if (value == 'del') {\r\n                var formdata = new FormData();\r\n                formdata.append('formId', parseInt(toJS(this.props.HomeStore.firstFormId)))\r\n                formdata.append('dataId', parseInt(modalData['id']))\r\n                var requestOptions = {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Authorization': injectSelfToken()\r\n                    },\r\n                    body: formdata\r\n                };\r\n                fetch(\"/data/delete\", requestOptions)\r\n                    .then(response => response.text())\r\n                    .then(result =>\r\n                        this.props.TableStore.getAllData({ 'formId': this.props.HomeStore.firstFormId }, 'all')\r\n                    )\r\n                    .catch(error => {\r\n                        console.log('error', error)\r\n                    });\r\n                this.props.TableStore.setDataPageModalVis(false);\r\n            }\r\n            console.log(value);\r\n        }\r\n        const fieldChoose = (\r\n            <>\r\n                {/* <Checkbox indeterminate={indeterminate} onChange={onCheckAllChange} checked={checkAll}>\r\n                    Check all\r\n                </Checkbox> */}\r\n                <Checkbox.Group onChange={checkChange} defaultValue={this.props.TableStore.modalFieldValue}>\r\n                    {modalField.map((item, index) => {\r\n                        return <>\r\n                            <Checkbox value={item.id} key={index} style={{ width: '300px' }}>{item.name}</Checkbox>\r\n                            <br />\r\n                        </>\r\n                    })}\r\n                </Checkbox.Group>\r\n            </>\r\n        )\r\n        return (\r\n            <Spin spinning={this.props.TableStore.isLoading} size='large' tip='Loading..'>\r\n                <div className='main_modal'>\r\n                    <div className='left_main'>\r\n                        <div className='left_modal'>\r\n                            <div className='left_header_left'>\r\n                                <Popover placement=\"bottomRight\" content={fieldChoose} trigger=\"click\"\r\n                                    onVisibleChange={visibleChange}\r\n                                >\r\n                                    <button className='header_btn'><FunnelPlotOutlined />字段</button>\r\n                                </Popover>\r\n                                <button onClick={() => { handleClick('share') }} className='header_btn'><FunnelPlotOutlined />分享</button>\r\n                                <div className='header_split' />\r\n                                <button onClick={() => { handleClick('print') }} className='header_btn'><FunnelPlotOutlined />打印</button>\r\n                                <button onClick={() => { handleClick('copy') }} className='header_btn'><FunnelPlotOutlined />复制</button>\r\n                                <button onClick={() => { handleClick('edit') }} className='header_btn'><FunnelPlotOutlined />编辑</button>\r\n                                <button onClick={() => { handleClick('del') }} className='header_btn'><FunnelPlotOutlined />删除</button>\r\n\r\n                            </div>\r\n                            <div className='left_header_right'>\r\n                                <Button size='small' disabled={judgeFront()} type='text' onClick={handleClickFront}>←</Button>\r\n                                <span type='text' >{itemIndex + 1}/{dataSource.length}</span>\r\n                                <Button size='small' disabled={judgeBehind()} type='text' onClick={handleClickBehind}>→</Button>\r\n                            </div>\r\n                        </div>\r\n                        <div className='left_content'>\r\n                            {getData()}\r\n                            <div className='info_content'>\r\n                                {getInfo()}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='right_modal'>\r\n                        <div className='right_header'>\r\n                            <Radio.Group onChange={(value) => console.log(value)} defaultValue=\"1\" style={{ paddingLeft: '5px' }}>\r\n                                <Radio.Button value={'1'}>数据日志</Radio.Button>\r\n                                <Radio.Button value={'2'}>评论</Radio.Button>\r\n                            </Radio.Group>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Spin>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataModal\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}