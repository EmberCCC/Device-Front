{"ast":null,"code":"import \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _defineProperty from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport \"antd/lib/tree/style\";\nimport _Tree from \"antd/lib/tree\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\src\\\\layouts\\\\SystemManager\\\\RoleManager\\\\RoleDialog.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { toJS } from 'mobx';\nimport GlobalModal from 'Components/GlobalModal';\nvar TreeNode = _Tree.TreeNode;\nvar RoleDialog = (_dec = inject('SystemStore'), _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_Component) {\n  _inherits(RoleDialog, _Component);\n\n  var _super = _createSuper(RoleDialog);\n\n  function RoleDialog() {\n    var _this;\n\n    _classCallCheck(this, RoleDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderTreeNodes = function (data) {\n      return data.map(function (item) {\n        if (item.children) {\n          return /*#__PURE__*/React.createElement(TreeNode, {\n            title: item.text,\n            key: item.id,\n            dataRef: item,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 21\n            }\n          }, _this.renderTreeNodes(item.children));\n        }\n\n        return /*#__PURE__*/React.createElement(TreeNode, Object.assign({}, item, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 20\n          }\n        }));\n      });\n    };\n\n    _this.onCheck = function (checkedKeys) {\n      console.log('onCheck', checkedKeys);\n      _this.props.SystemStore.formData.menuIds = checkedKeys;\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var _this$props$SystemSto = _this.props.SystemStore,\n          getData = _this$props$SystemSto.getData,\n          modalChange = _this$props$SystemSto.modalChange,\n          addNewRole = _this$props$SystemSto.addNewRole,\n          formData = _this$props$SystemSto.formData,\n          PageInfo = _this$props$SystemSto.PageInfo,\n          roleName = _this$props$SystemSto.roleName;\n\n      _this.props.form.validateFields(function (err, values) {\n        console.log(values, formData);\n\n        if (!err) {\n          if (formData.id) {\n            addNewRole(0, _objectSpread({}, formData, {}, values)).then(function (res) {\n              _message.success('更新成功');\n\n              modalChange(0);\n              getData(2, {\n                pageIndex: PageInfo.pageIndex,\n                pageSize: PageInfo.pageSize,\n                roleName: roleName\n              });\n            });\n          } else {\n            // formData.menuIds = formData.menuIds.join(',')\n            addNewRole(1, _objectSpread({}, formData, {}, values)).then(function (res) {\n              _message.success('添加成功');\n\n              modalChange(0);\n              getData(2, {\n                pageIndex: PageInfo.pageIndex,\n                pageSize: PageInfo.pageSize,\n                roleName: roleName\n              });\n            });\n          }\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(RoleDialog, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$SystemSto2 = this.props.SystemStore,\n          modalVisible = _this$props$SystemSto2.modalVisible,\n          formData = _this$props$SystemSto2.formData,\n          treeData = _this$props$SystemSto2.treeData;\n      var formLabelCol = {\n        span: 4\n      };\n      var formWrapperCol = {\n        span: 18\n      };\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      console.log(formData.menuIds);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 16\n        }\n      }, modalVisible && /*#__PURE__*/React.createElement(GlobalModal, {\n        title: JSON.stringify(formData) === '{}' ? '新增' : '编辑',\n        visible: modalVisible,\n        width: '50%',\n        onOk: this.handleSubmit,\n        onCancel: function onCancel(e) {\n          return _this2.props.SystemStore.modalChange(0);\n        },\n        children: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(_Form, {\n          onSubmit: this.handleSubmit,\n          layout: \"horizontal\",\n          labelCol: formLabelCol,\n          wrapperCol: formWrapperCol,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(_Form.Item, {\n          label: \"\\u89D2\\u8272\\u540D\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }\n        }, getFieldDecorator('roleName', {\n          rules: [{\n            required: true,\n            message: '请输入角色名称'\n          }],\n          initialValue: formData.roleName || ''\n        })( /*#__PURE__*/React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u89D2\\u8272\\u540D\\u79F0\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 41\n          }\n        }))), /*#__PURE__*/React.createElement(_Form.Item, {\n          label: \"\\u5907\\u6CE8\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }\n        }, getFieldDecorator('remark', {\n          initialValue: formData.remark || ''\n        })( /*#__PURE__*/React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u5907\\u6CE8\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 41\n          }\n        }))), /*#__PURE__*/React.createElement(_Form.Item, {\n          label: \"\\u83DC\\u5355\\u6743\\u9650\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            height: 450,\n            overflowY: 'auto'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(_Tree, {\n          checkable: true,\n          onExpand: this.onExpand,\n          defaultExpandedKeys: ['-1'],\n          onCheck: this.onCheck,\n          checkedKeys: formData.menuIds,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 41\n          }\n        }, this.renderTreeNodes(treeData)))))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 33\n        }\n      }));\n    }\n  }]);\n\n  return RoleDialog;\n}(Component), _temp)) || _class) || _class);\n\nvar RoleDialogForm = _Form.create({\n  name: 'define'\n})(RoleDialog);\n\nexport default RoleDialogForm;","map":{"version":3,"sources":["C:/Users/Misaki/Desktop/kda/设备运维前端/bl-device-manage/src/layouts/SystemManager/RoleManager/RoleDialog.js"],"names":["React","Component","inject","observer","toJS","GlobalModal","TreeNode","RoleDialog","renderTreeNodes","data","map","item","children","text","id","onCheck","checkedKeys","console","log","props","SystemStore","formData","menuIds","handleSubmit","e","preventDefault","getData","modalChange","addNewRole","PageInfo","roleName","form","validateFields","err","values","then","res","success","pageIndex","pageSize","modalVisible","treeData","formLabelCol","span","formWrapperCol","getFieldDecorator","JSON","stringify","rules","required","message","initialValue","remark","height","overflowY","onExpand","RoleDialogForm","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { toJS } from 'mobx';\nimport { message, Form, Input, Radio, Tree } from 'antd';\nimport GlobalModal from 'Components/GlobalModal';\nconst { TreeNode } = Tree;\n@inject('SystemStore')\n@observer\nclass RoleDialog extends Component {\n\n    renderTreeNodes = data =>\n        data.map(item => {\n            if (item.children) {\n                return (\n                    <TreeNode title={item.text} key={item.id} dataRef={item}>\n                        {this.renderTreeNodes(item.children)}\n                    </TreeNode>\n                );\n            }\n            return <TreeNode {...item} />;\n        });\n\n\n    render() {\n        const { modalVisible, formData, treeData } = this.props.SystemStore\n        const formLabelCol = { span: 4 }\n        const formWrapperCol = { span: 18 }\n        const { getFieldDecorator } = this.props.form;\n        console.log(formData.menuIds);\n\n        return <div>\n            {\n                modalVisible && <GlobalModal\n                    title={JSON.stringify(formData) === '{}' ? '新增' : '编辑'}\n                    visible={modalVisible}\n                    width={'50%'}\n                    onOk={this.handleSubmit}\n                    onCancel={e => this.props.SystemStore.modalChange(0)}\n                    children={\n                        <div>\n                            <Form onSubmit={this.handleSubmit} layout='horizontal' labelCol={formLabelCol} wrapperCol={formWrapperCol}>\n                                <Form.Item label=\"角色名\">\n                                    {getFieldDecorator('roleName', {\n                                        rules: [{ required: true, message: '请输入角色名称' }],\n                                        initialValue: formData.roleName || ''\n                                    })(\n                                        <Input placeholder=\"请输入角色名称\" />\n                                    )}\n                                </Form.Item>\n                                <Form.Item label=\"备注\">\n                                    {getFieldDecorator('remark', {\n                                        initialValue: formData.remark || ''\n                                    })(\n                                        <Input placeholder=\"请输入备注\" />\n                                    )}\n                                </Form.Item>\n                                <Form.Item label=\"菜单权限\">\n                                    <div style={{ height: 450, overflowY: 'auto' }}>\n                                        <Tree\n                                            checkable\n                                            onExpand={this.onExpand}\n                                            defaultExpandedKeys={['-1']}\n                                            onCheck={this.onCheck}\n                                            checkedKeys={formData.menuIds}\n                                        >\n                                            {this.renderTreeNodes(treeData)}\n                                        </Tree>\n                                    </div>\n                                </Form.Item>\n                            </Form>\n                        </div>\n                    }\n                />\n            }\n        </div>;\n    }\n\n    onCheck = checkedKeys => {\n        console.log('onCheck', checkedKeys);\n        this.props.SystemStore.formData.menuIds = checkedKeys\n    };\n    //提交表单\n    handleSubmit = e => {\n        e.preventDefault();\n        const { getData, modalChange, addNewRole, formData, PageInfo, roleName } = this.props.SystemStore\n        this.props.form.validateFields((err, values) => {\n            console.log(values, formData)\n\n            if (!err) {\n                if (formData.id) {\n                    addNewRole(0, { ...formData, ...values }).then(res => {\n                        message.success('更新成功')\n                        modalChange(0)\n                        getData(2, { pageIndex: PageInfo.pageIndex, pageSize: PageInfo.pageSize, roleName })\n                    })\n                } else {\n                    // formData.menuIds = formData.menuIds.join(',')\n                    addNewRole(1, { ...formData, ...values }).then(res => {\n                        message.success('添加成功')\n                        modalChange(0)\n                        getData(2, { pageIndex: PageInfo.pageIndex, pageSize: PageInfo.pageSize, roleName })\n                    })\n                }\n            }\n        });\n    };\n}\nconst RoleDialogForm = Form.create({ name: 'define' })(RoleDialog);\nexport default RoleDialogForm;"]},"metadata":{},"sourceType":"module"}