{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _color = require('./helpers/color');\n\nvar _color2 = _interopRequireDefault(_color);\n\nvar _Board = require('./Board');\n\nvar _Board2 = _interopRequireDefault(_Board);\n\nvar _Preview = require('./Preview');\n\nvar _Preview2 = _interopRequireDefault(_Preview);\n\nvar _Ribbon = require('./Ribbon');\n\nvar _Ribbon2 = _interopRequireDefault(_Ribbon);\n\nvar _Alpha = require('./Alpha');\n\nvar _Alpha2 = _interopRequireDefault(_Alpha);\n\nvar _Params = require('./Params');\n\nvar _Params2 = _interopRequireDefault(_Params);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _validationColor = require('./utils/validationColor');\n\nvar _validationColor2 = _interopRequireDefault(_validationColor);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n\nfunction noop() {}\n\nvar Panel = function (_React$Component) {\n  _inherits(Panel, _React$Component);\n\n  function Panel(props) {\n    _classCallCheck(this, Panel);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var alpha = typeof props.alpha === 'undefined' ? props.defaultAlpha : Math.min(props.alpha, props.defaultAlpha);\n    var color = new _color2[\"default\"](props.color || props.defaultColor);\n    _this.state = {\n      color: color,\n      alpha: alpha\n    };\n    return _this;\n  }\n\n  Panel.prototype.componentDidMount = function componentDidMount() {\n    this.props.onMount(this.ref);\n  };\n\n  Panel.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (nextProps.color) {\n      var color = new _color2[\"default\"](nextProps.color);\n      this.setState({\n        color: color\n      });\n    }\n\n    if (nextProps.alpha !== undefined) {\n      this.setState({\n        alpha: nextProps.alpha\n      });\n    }\n  };\n  /**\n   * 响应 alpha 的变更\n   * @param  {Number} alpha Range 0~100\n   */\n\n  /**\n   * color change\n   * @param  {Object}  color      tinycolor instance\n   * @param  {Boolean} syncParams Sync to <Params />\n   */\n\n\n  Panel.prototype.render = function render() {\n    var _cx,\n        _this2 = this;\n\n    var _props = this.props,\n        prefixCls = _props.prefixCls,\n        enableAlpha = _props.enableAlpha;\n    var _state = this.state,\n        color = _state.color,\n        alpha = _state.alpha;\n    var wrapClasses = (0, _classnames2[\"default\"])((_cx = {}, _defineProperty(_cx, prefixCls + '-wrap', true), _defineProperty(_cx, prefixCls + '-wrap-has-alpha', enableAlpha), _cx));\n    return _react2[\"default\"].createElement('div', {\n      ref: function ref(_ref) {\n        return _this2.ref = _ref;\n      },\n      className: [prefixCls, this.props.className].join(' '),\n      style: this.props.style,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      tabIndex: '0'\n    }, _react2[\"default\"].createElement('div', {\n      className: prefixCls + '-inner'\n    }, _react2[\"default\"].createElement(_Board2[\"default\"], {\n      rootPrefixCls: prefixCls,\n      color: color,\n      onChange: this.handleChange\n    }), _react2[\"default\"].createElement('div', {\n      className: wrapClasses\n    }, _react2[\"default\"].createElement('div', {\n      className: prefixCls + '-wrap-ribbon'\n    }, _react2[\"default\"].createElement(_Ribbon2[\"default\"], {\n      rootPrefixCls: prefixCls,\n      color: color,\n      onChange: this.handleChange\n    })), enableAlpha && _react2[\"default\"].createElement('div', {\n      className: prefixCls + '-wrap-alpha'\n    }, _react2[\"default\"].createElement(_Alpha2[\"default\"], {\n      rootPrefixCls: prefixCls,\n      alpha: alpha,\n      color: color,\n      onChange: this.handleAlphaChange\n    })), _react2[\"default\"].createElement('div', {\n      className: prefixCls + '-wrap-preview'\n    }, _react2[\"default\"].createElement(_Preview2[\"default\"], {\n      rootPrefixCls: prefixCls,\n      alpha: alpha,\n      onChange: this.handleChange,\n      onInputClick: this.onSystemColorPickerOpen,\n      color: color\n    }))), _react2[\"default\"].createElement('div', {\n      className: prefixCls + '-wrap',\n      style: {\n        height: 40,\n        marginTop: 6\n      }\n    }, _react2[\"default\"].createElement(_Params2[\"default\"], {\n      rootPrefixCls: prefixCls,\n      color: color,\n      alpha: alpha,\n      onAlphaChange: this.handleAlphaChange,\n      onChange: this.handleChange,\n      mode: this.props.mode,\n      enableAlpha: this.props.enableAlpha\n    }))));\n  };\n\n  return Panel;\n}(_react2[\"default\"].Component);\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.onSystemColorPickerOpen = function (e) {\n    // only work with broswer which support color input\n    if (e.target.type === 'color') {\n      _this3.systemColorPickerOpen = true;\n    }\n  };\n\n  this.onFocus = function () {\n    if (_this3._blurTimer) {\n      clearTimeout(_this3._blurTimer);\n      _this3._blurTimer = null;\n    } else {\n      _this3.props.onFocus();\n    }\n  };\n\n  this.onBlur = function () {\n    if (_this3._blurTimer) {\n      clearTimeout(_this3._blurTimer);\n    }\n\n    _this3._blurTimer = setTimeout(function () {\n      // if is system color picker open, then stop run blur\n      if (_this3.systemColorPickerOpen) {\n        _this3.systemColorPickerOpen = false;\n        return;\n      }\n\n      _this3.props.onBlur();\n    }, 100);\n  };\n\n  this.handleAlphaChange = function (alpha) {\n    var color = _this3.state.color;\n    color.alpha = alpha;\n\n    _this3.setState({\n      alpha: alpha,\n      color: color\n    });\n\n    _this3.props.onChange({\n      color: color.toHexString(),\n      alpha: alpha\n    });\n  };\n\n  this.handleChange = function (color) {\n    var alpha = _this3.state.alpha;\n    color.alpha = alpha;\n\n    _this3.setState({\n      color: color\n    });\n\n    _this3.props.onChange({\n      color: color.toHexString(),\n      alpha: color.alpha\n    });\n  };\n};\n\nexports[\"default\"] = Panel;\nPanel.propTypes = {\n  alpha: _propTypes2[\"default\"].number,\n  className: _propTypes2[\"default\"].string,\n  color: _validationColor2[\"default\"],\n  // Hex string\n  defaultAlpha: _propTypes2[\"default\"].number,\n  defaultColor: _validationColor2[\"default\"],\n  // Hex string\n  enableAlpha: _propTypes2[\"default\"].bool,\n  mode: _propTypes2[\"default\"].oneOf(['RGB', 'HSL', 'HSB']),\n  onBlur: _propTypes2[\"default\"].func,\n  onChange: _propTypes2[\"default\"].func,\n  onFocus: _propTypes2[\"default\"].func,\n  onMount: _propTypes2[\"default\"].func,\n  prefixCls: _propTypes2[\"default\"].string,\n  style: _propTypes2[\"default\"].object\n};\nPanel.defaultProps = {\n  className: '',\n  defaultAlpha: 100,\n  defaultColor: '#ff0000',\n  enableAlpha: true,\n  mode: 'RGB',\n  onBlur: noop,\n  onChange: noop,\n  onFocus: noop,\n  onMount: noop,\n  prefixCls: 'rc-color-picker-panel',\n  style: {}\n};\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}