{"ast":null,"code":"import \"antd/lib/checkbox/style\";\nimport _Checkbox from \"antd/lib/checkbox\";\nimport \"antd/lib/radio/style\";\nimport _Radio from \"antd/lib/radio\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _objectSpread from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"F:\\\\documents\\\\bl-device-manage\\\\src\\\\layouts\\\\SparepartsManage\\\\SpareDefinePage\\\\SparepartsDialog.js\";\n\nimport React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { toJS } from 'mobx';\nimport { Form } from '@ant-design/compatible';\nimport '@ant-design/compatible/assets/index.css';\nimport GlobalModal from 'Components/GlobalModal';\nvar SparepartsDialog = (_dec = inject('SparepartsStore'), _dec(_class = observer(_class = (_temp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SparepartsDialog, _Component);\n\n  function SparepartsDialog(props) {\n    var _this;\n\n    _classCallCheck(this, SparepartsDialog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SparepartsDialog).call(this, props));\n\n    _this.setValue = function (e, type) {\n      if (type) {\n        _this.props.SparepartsStore.formData.warnMax = e.target.value;\n      } else {\n        _this.props.SparepartsStore.formData.warnMin = e.target.value;\n      }\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var _this$props$Sparepart = _this.props.SparepartsStore,\n          getData = _this$props$Sparepart.getData,\n          modalChange = _this$props$Sparepart.modalChange,\n          addNewType = _this$props$Sparepart.addNewType,\n          modalType = _this$props$Sparepart.modalType,\n          addNewSpa = _this$props$Sparepart.addNewSpa,\n          formData = _this$props$Sparepart.formData,\n          PageInfo = _this$props$Sparepart.PageInfo,\n          columnsType = _this$props$Sparepart.columnsType,\n          typeName = _this$props$Sparepart.typeName,\n          spareName = _this$props$Sparepart.spareName;\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          if (columnsType === '1') {\n            //新增类型\n            addNewType(_objectSpread({}, formData, values)).then(function (res) {\n              _message.success('保存成功');\n\n              modalChange(0);\n              getData(1, {\n                typeName: typeName,\n                pageIndex: PageInfo.pageIndex,\n                pageSize: PageInfo.pageSize\n              });\n            });\n          } else {\n            if (modalType === 2) {\n              modalChange(0);\n            } else {\n              // 新增备件\n              console.log(values);\n              values.deviceModelId = values.deviceModelId.join(',');\n              addNewSpa(_objectSpread({}, formData, values)).then(function (res) {\n                _message.success('保存成功');\n\n                modalChange(0);\n                getData(2, {\n                  spareName: spareName,\n                  pageIndex: PageInfo.pageIndex,\n                  pageSize: PageInfo.pageSize\n                });\n              });\n            }\n          }\n        }\n      });\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(SparepartsDialog, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$Sparepart2 = this.props.SparepartsStore,\n          modalVisible = _this$props$Sparepart2.modalVisible,\n          formData = _this$props$Sparepart2.formData,\n          modalType = _this$props$Sparepart2.modalType,\n          devTypeList = _this$props$Sparepart2.devTypeList,\n          columnsType = _this$props$Sparepart2.columnsType,\n          typeList = _this$props$Sparepart2.typeList;\n      var formLabelCol = {\n        span: 6\n      };\n      var formWrapperCol = {\n        span: 18\n      };\n      var Option = _Select.Option;\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, modalVisible && React.createElement(GlobalModal, {\n        title: modalType === 2 ? '详情' : modalType === 1 ? '编辑' : '新增',\n        visible: modalVisible,\n        onOk: this.handleSubmit,\n        onCancel: function onCancel(e) {\n          return _this2.props.SparepartsStore.modalChange(0);\n        },\n        children: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, columnsType === '1' ? React.createElement(Form, {\n          onSubmit: this.handleSubmit,\n          layout: \"horizontal\",\n          labelCol: formLabelCol,\n          wrapperCol: formWrapperCol,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(Form.Item, {\n          label: \"\\u5907\\u4EF6\\u7C7B\\u578B\\u540D\\u79F0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, getFieldDecorator('typeName', {\n          rules: [{\n            required: true,\n            message: '请输入备件类型名称'\n          }],\n          initialValue: formData.typeName || ''\n        })(React.createElement(_Input, {\n          readOnly: modalType === 2,\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u5907\\u4EF6\\u7C7B\\u578B\\u540D\\u79F0\",\n          style: {\n            width: 300\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }))), React.createElement(Form.Item, {\n          label: \"\\u72B6\\u6001\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, getFieldDecorator('typeStatus', {\n          rules: [{\n            required: true,\n            message: '请选择状态'\n          }],\n          initialValue: formData.typeStatus || 0\n        })(React.createElement(_Radio.Group, {\n          disabled: modalType === 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(_Radio, {\n          value: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"\\u542F\\u7528\"), React.createElement(_Radio, {\n          value: 0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"\\u7981\\u7528\"))))) : React.createElement(Form, {\n          onSubmit: this.handleSubmit,\n          layout: \"horizontal\",\n          labelCol: formLabelCol,\n          wrapperCol: formWrapperCol,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(Form.Item, {\n          label: \"\\u5907\\u4EF6\\u540D\\u79F0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, getFieldDecorator('spareName', {\n          rules: [{\n            required: true,\n            message: '请输入备件类型名称'\n          }],\n          initialValue: formData.spareName || ''\n        })(React.createElement(_Input, {\n          readOnly: modalType === 2,\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u5907\\u4EF6\\u7C7B\\u578B\\u540D\\u79F0\",\n          style: {\n            width: 300\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }))), React.createElement(Form.Item, {\n          label: \"\\u5907\\u4EF6\\u7F16\\u53F7\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, getFieldDecorator('model', {\n          rules: [{\n            required: true,\n            message: '请输入备件编号'\n          }],\n          initialValue: formData.model || ''\n        })(React.createElement(_Input, {\n          readOnly: modalType === 2,\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u5907\\u4EF6\\u7F16\\u53F7\",\n          style: {\n            width: 300\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }))), React.createElement(Form.Item, {\n          label: \"\\u5907\\u4EF6\\u7C7B\\u578B\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, getFieldDecorator('spareTypeId', {\n          rules: [{\n            required: true,\n            message: '请输入备件类型名称'\n          }],\n          initialValue: formData.spareTypeId || ''\n        })(React.createElement(_Select, {\n          disabled: modalType === 2,\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u5907\\u4EF6\\u7C7B\\u578B\\u540D\\u79F0\",\n          style: {\n            width: 300\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, typeList.map(function (item) {\n          return React.createElement(Option, {\n            value: item.id,\n            key: item.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, item.typeName);\n        })))), React.createElement(Form.Item, {\n          label: \"\\u5173\\u8054\\u8BBE\\u5907\\u578B\\u53F7\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, getFieldDecorator('deviceModelId', {\n          rules: [{\n            required: false,\n            message: '请选择关联设备'\n          }],\n          initialValue: formData.deviceModelId ? formData.deviceModelId.split(',') : ''\n        })(React.createElement(_Checkbox.Group, {\n          disabled: modalType === 2,\n          options: devTypeList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }))), React.createElement(Form.Item, {\n          label: \"\\u5E93\\u5B58\\u9884\\u8B66\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, getFieldDecorator('warnMax', {\n          rules: [{\n            required: false,\n            message: '请输入库存预警'\n          }]\n        })(React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(_Input, {\n          readOnly: modalType === 2,\n          placeholder: \"\\u6700\\u5C0F\\u9884\\u8B66\\u503C\",\n          value: formData.warnMin,\n          style: {\n            width: 145\n          },\n          onChange: function onChange(e) {\n            return _this2.setValue(e, 0);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }), \"--\", React.createElement(_Input, {\n          readOnly: modalType === 2,\n          placeholder: \"\\u6700\\u5927\\u9884\\u8B66\\u503C\",\n          value: formData.warnMax,\n          style: {\n            width: 145\n          },\n          onChange: function onChange(e) {\n            return _this2.setValue(e, 1);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        })))), React.createElement(Form.Item, {\n          label: \"\\u4ED3\\u50A8\\u4F4D\\u7F6E\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, getFieldDecorator('address', {\n          rules: [{\n            required: false,\n            message: '请输入仓储位置'\n          }],\n          initialValue: formData.address || ''\n        })(React.createElement(_Input, {\n          readOnly: modalType === 2,\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u4ED3\\u50A8\\u4F4D\\u7F6E\",\n          style: {\n            width: 300\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }))), React.createElement(Form.Item, {\n          label: \"\\u4F9B\\u5E94\\u5546\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, getFieldDecorator('supplier', {\n          rules: [{\n            required: false,\n            message: '请输入供应商'\n          }],\n          initialValue: formData.supplier || ''\n        })(React.createElement(_Input, {\n          readOnly: modalType === 2,\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u4F9B\\u5E94\\u5546\",\n          style: {\n            width: 300\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }))), React.createElement(Form.Item, {\n          label: \"\\u4F9B\\u8D27\\u5468\\u671F(\\u6708)\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, getFieldDecorator('period', {\n          rules: [{\n            required: false,\n            message: '请输入供货周期(月)'\n          }],\n          initialValue: formData.period || ''\n        })(React.createElement(_Input, {\n          readOnly: modalType === 2,\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u5907\\u4EF6\\u7C7B\\u578B\\u540D\\u79F0\",\n          style: {\n            width: 300\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }))), React.createElement(Form.Item, {\n          label: \"\\u8054\\u7CFB\\u7535\\u8BDD\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, getFieldDecorator('phone', {\n          rules: [{\n            required: false,\n            message: '请输入联系电话'\n          }],\n          initialValue: formData.phone || ''\n        })(React.createElement(_Input, {\n          readOnly: modalType === 2,\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u8054\\u7CFB\\u7535\\u8BDD\",\n          style: {\n            width: 300\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }))))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// this.props.SparepartsStore.getProList()\n    }\n  }]);\n\n  return SparepartsDialog;\n}(Component), _temp)) || _class) || _class);\nvar SparepartsDialogForm = Form.create({\n  name: 'define'\n})(SparepartsDialog);\nexport default SparepartsDialogForm;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage\\src\\layouts\\SparepartsManage\\SpareDefinePage\\SparepartsDialog.js"],"names":["React","Component","inject","observer","toJS","Form","GlobalModal","SparepartsDialog","props","setValue","e","type","SparepartsStore","formData","warnMax","target","value","warnMin","handleSubmit","preventDefault","getData","modalChange","addNewType","modalType","addNewSpa","PageInfo","columnsType","typeName","spareName","form","validateFields","err","values","then","res","success","pageIndex","pageSize","console","log","deviceModelId","join","state","modalVisible","devTypeList","typeList","formLabelCol","span","formWrapperCol","Option","getFieldDecorator","rules","required","message","initialValue","width","typeStatus","model","spareTypeId","map","item","id","split","address","supplier","period","phone","SparepartsDialogForm","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { toJS } from 'mobx';\r\nimport { Form } from '@ant-design/compatible';\r\nimport '@ant-design/compatible/assets/index.css';\r\nimport { message, Input, Select, Radio, Checkbox } from 'antd';\r\nimport GlobalModal from 'Components/GlobalModal';\r\n@inject('SparepartsStore')\r\n@observer\r\nclass SparepartsDialog extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        const { modalVisible, formData, modalType, devTypeList, columnsType, typeList } = this.props.SparepartsStore\r\n        const formLabelCol = { span: 6 }\r\n        const formWrapperCol = { span: 18 }\r\n        const { Option } = Select\r\n        const { getFieldDecorator } = this.props.form;\r\n        return <div>\r\n            {\r\n                modalVisible && <GlobalModal\r\n                    title={modalType === 2 ? '详情' : modalType === 1 ? '编辑' : '新增'}\r\n                    visible={modalVisible}\r\n                    onOk={this.handleSubmit}\r\n                    onCancel={e => this.props.SparepartsStore.modalChange(0)}\r\n                    children={\r\n                        <div>\r\n                            {columnsType === '1' ? <Form onSubmit={this.handleSubmit} layout='horizontal' labelCol={formLabelCol} wrapperCol={formWrapperCol}>\r\n                                <Form.Item label=\"备件类型名称\">\r\n                                    {getFieldDecorator('typeName', {\r\n                                        rules: [{ required: true, message: '请输入备件类型名称' }],\r\n                                        initialValue: formData.typeName || ''\r\n                                    })(\r\n                                        <Input readOnly={modalType === 2} placeholder=\"请输入备件类型名称\" style={{ width: 300 }} />\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"状态\">\r\n                                    {getFieldDecorator('typeStatus', {\r\n                                        rules: [{ required: true, message: '请选择状态' }],\r\n                                        initialValue: formData.typeStatus || 0\r\n                                    })(\r\n                                        <Radio.Group disabled={modalType === 2}>\r\n                                            <Radio value={1}>启用</Radio>\r\n                                            <Radio value={0}>禁用</Radio>\r\n                                        </Radio.Group>\r\n                                    )}\r\n                                </Form.Item>\r\n                            </Form> : <Form onSubmit={this.handleSubmit} layout='horizontal' labelCol={formLabelCol} wrapperCol={formWrapperCol}>\r\n                                    <Form.Item label=\"备件名称\">\r\n                                        {getFieldDecorator('spareName', {\r\n                                            rules: [{ required: true, message: '请输入备件类型名称' }],\r\n                                            initialValue: formData.spareName || ''\r\n                                        })(\r\n                                            <Input readOnly={modalType === 2} placeholder=\"请输入备件类型名称\" style={{ width: 300 }} />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"备件编号\">\r\n                                        {getFieldDecorator('model', {\r\n                                            rules: [{ required: true, message: '请输入备件编号' }],\r\n                                            initialValue: formData.model || ''\r\n                                        })(\r\n                                            <Input readOnly={modalType === 2} placeholder=\"请输入备件编号\" style={{ width: 300 }} />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"备件类型\">\r\n                                        {getFieldDecorator('spareTypeId', {\r\n                                            rules: [{ required: true, message: '请输入备件类型名称' }],\r\n                                            initialValue: formData.spareTypeId || ''\r\n                                        })(\r\n                                            <Select disabled={modalType === 2} placeholder=\"请输入备件类型名称\" style={{ width: 300 }} >\r\n                                                {typeList.map(item => (<Option value={item.id} key={item.id}>{item.typeName}</Option>))}\r\n                                            </Select>\r\n                                        )}\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"关联设备型号\">\r\n                                        {getFieldDecorator('deviceModelId', {\r\n                                            rules: [{ required: false, message: '请选择关联设备' }],\r\n                                            initialValue: formData.deviceModelId ? formData.deviceModelId.split(',') : ''\r\n                                        })(\r\n                                            <Checkbox.Group disabled={modalType === 2} options={devTypeList} />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"库存预警\">\r\n                                        {getFieldDecorator('warnMax', {\r\n                                            rules: [{ required: false, message: '请输入库存预警' }],\r\n                                        })(\r\n                                            <div >\r\n                                                <Input readOnly={modalType === 2} placeholder=\"最小预警值\" value={formData.warnMin} style={{ width: 145 }} onChange={e => this.setValue(e, 0)} />\r\n                                                --\r\n                                    <Input readOnly={modalType === 2} placeholder=\"最大预警值\" value={formData.warnMax} style={{ width: 145 }} onChange={e => this.setValue(e, 1)} />\r\n                                            </div>\r\n\r\n                                        )}\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"仓储位置\">\r\n                                        {getFieldDecorator('address', {\r\n                                            rules: [{ required: false, message: '请输入仓储位置' }],\r\n                                            initialValue: formData.address || ''\r\n                                        })(\r\n                                            <Input readOnly={modalType === 2} placeholder=\"请输入仓储位置\" style={{ width: 300 }} />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"供应商\">\r\n                                        {getFieldDecorator('supplier', {\r\n                                            rules: [{ required: false, message: '请输入供应商' }],\r\n                                            initialValue: formData.supplier || ''\r\n                                        })(\r\n                                            <Input readOnly={modalType === 2} placeholder=\"请输入供应商\" style={{ width: 300 }} />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"供货周期(月)\">\r\n                                        {getFieldDecorator('period', {\r\n                                            rules: [{ required: false, message: '请输入供货周期(月)' }],\r\n                                            initialValue: formData.period || ''\r\n                                        })(\r\n                                            <Input readOnly={modalType === 2} placeholder=\"请输入备件类型名称\" style={{ width: 300 }} />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"联系电话\">\r\n                                        {getFieldDecorator('phone', {\r\n                                            rules: [{ required: false, message: '请输入联系电话' }],\r\n                                            initialValue: formData.phone || ''\r\n                                        })(\r\n                                            <Input readOnly={modalType === 2} placeholder=\"请输入联系电话\" style={{ width: 300 }} />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Form>}\r\n                        </div>\r\n                    }\r\n                />\r\n            }\r\n        </div>;\r\n    }\r\n    setValue = (e, type) => {\r\n        if (type) {\r\n            this.props.SparepartsStore.formData.warnMax = e.target.value\r\n        } else {\r\n            this.props.SparepartsStore.formData.warnMin = e.target.value\r\n        }\r\n    }\r\n    //提交表单\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const { getData, modalChange, addNewType, modalType, addNewSpa, formData, PageInfo, columnsType, typeName, spareName } = this.props.SparepartsStore\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                if (columnsType === '1') {\r\n                    //新增类型\r\n                    addNewType({ ...formData, ...values }).then(res => {\r\n                        message.success('保存成功')\r\n                        modalChange(0)\r\n                        getData(1, { typeName, pageIndex: PageInfo.pageIndex, pageSize: PageInfo.pageSize })\r\n                    })\r\n                } else {\r\n                    if (modalType === 2) {\r\n                        modalChange(0)\r\n                    } else {\r\n                        // 新增备件\r\n                        console.log(values)\r\n                        values.deviceModelId = values.deviceModelId.join(',')\r\n                        addNewSpa({ ...formData, ...values }).then(res => {\r\n                            message.success('保存成功')\r\n                            modalChange(0)\r\n                            getData(2, { spareName, pageIndex: PageInfo.pageIndex, pageSize: PageInfo.pageSize })\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    componentDidMount() {\r\n        // this.props.SparepartsStore.getProList()\r\n    }\r\n}\r\nconst SparepartsDialogForm = Form.create({ name: 'define' })(SparepartsDialog);\r\nexport default SparepartsDialogForm;"]},"metadata":{},"sourceType":"module"}