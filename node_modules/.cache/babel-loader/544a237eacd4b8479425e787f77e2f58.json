{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport _classCallCheck from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nvar _dec,\n    _class,\n    _jsxFileName = \"F:\\\\documents\\\\bl-device-manage-test\\\\src\\\\layouts\\\\MessageManage\\\\LogPage\\\\index.js\";\n\nimport { inject, observer } from 'mobx-react';\nimport React, { Component } from 'react';\nvar LoginPage = (_dec = inject('MessageStore'), _dec(_class = observer(_class =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginPage, _Component);\n\n  function LoginPage() {\n    _classCallCheck(this, LoginPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LoginPage).apply(this, arguments));\n  }\n\n  _createClass(LoginPage, [{\n    key: \"render\",\n    value: function render() {\n      var itemLog = this.props.MessageStore.itemLog;\n      var log = this.props.MessageStore.itemLog.message;\n      console.log(log);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, log.map(function (item) {\n        return React.createElement(_Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, \"\\u89E3\\u51B3\\u4EBA\\uFF1A\", item.solvePeopleNickname), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, \"\\u89E3\\u51B3\\u65F6\\u95F4\", item.solveTime), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, item.isPass));\n      }));\n    }\n  }]);\n\n  return LoginPage;\n}(Component)) || _class) || _class);\nexport default LoginPage;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage-test\\src\\layouts\\MessageManage\\LogPage\\index.js"],"names":["inject","observer","React","Component","LoginPage","itemLog","props","MessageStore","log","message","console","map","item","solvePeopleNickname","solveTime","isPass"],"mappings":";;;;;;;;;;;;AACA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;IAMMC,S,WAFLJ,MAAM,CAAC,cAAD,C,gBACNC,Q;;;;;;;;;;;;;6BAEU;AAAA,UACAI,OADA,GACW,KAAKC,KAAL,CAAWC,YADtB,CACAF,OADA;AAEP,UAAMG,GAAG,GAAG,KAAKF,KAAL,CAAWC,YAAX,CAAwBF,OAAxB,CAAgCI,OAA5C;AACAC,MAAAA,OAAO,CAACF,GAAR,CAAYA,GAAZ;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,GAAG,CAACG,GAAJ,CAAQ,UAACC,IAAD,EAAU;AACf,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAQA,IAAI,CAACC,mBAAb,CADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAQD,IAAI,CAACE,SAAb,CAFG,EAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIF,IAAI,CAACG,MAAT,CAHG,CAAP;AAML,OAPE,CADL,CADF;AAYD;;;;EAjBqBZ,S;AAoBxB,eAAeC,SAAf","sourcesContent":["import { Card } from 'antd';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react'\r\n\r\n\r\n\r\n@inject('MessageStore')\r\n@observer\r\nclass LoginPage extends Component {\r\n  render() {\r\n    const {itemLog} = this.props.MessageStore;\r\n    const log = this.props.MessageStore.itemLog.message\r\n    console.log(log);\r\n    return (\r\n      <div>\r\n          {log.map((item) => {\r\n              return <Card>\r\n                  <p>解决人：{item.solvePeopleNickname}</p>\r\n                  <p>解决时间{item.solveTime}</p>\r\n                  <p>{item.isPass}</p>\r\n                  {/* <p></p> */}\r\n              </Card>\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n"]},"metadata":{},"sourceType":"module"}