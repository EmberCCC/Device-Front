{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport _objectSpread from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"F:\\\\documents\\\\bl-device-manage\\\\src\\\\layouts\\\\WorkManage\\\\cell\\\\AddModal.js\";\n\nimport React, { Component } from 'react';\nimport { Form } from '@ant-design/compatible';\nimport '@ant-design/compatible/assets/index.css';\nimport { inject, observer } from 'mobx-react';\nvar Option = _Select.Option;\nvar formItemLayout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 12\n  }\n};\nvar AddModal = (_dec = inject('WorkStore', 'DeviceDefineStore'), _dec(_class = observer(_class = (_temp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddModal, _Component);\n\n  function AddModal(props) {\n    var _this;\n\n    _classCallCheck(this, AddModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddModal).call(this, props));\n\n    _this.getWorkerDetail = function (e) {\n      console.log(e);\n\n      _this.props.DeviceDefineStore.employeeList.map(function (mas) {\n        if (e === mas.id) _this.store.workerName = mas.name;\n      });\n\n      _this.store.getCountByWorkerId({\n        workerId: e\n      });\n    };\n\n    _this.onOk = function () {\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          _this.store.saveWork(_objectSpread({\n            id: _this.store.currentMain.id\n          }, values, {\n            workStatus: _this.store.currentMain.workStatus.toString() === '0' ? 1 : 7,\n            deviceId: _this.store.currentMain.deviceId\n          }));\n\n          _this.props.onClose();\n        }\n      });\n    };\n\n    _this.componentDidMount = function () {// this.store.workDetailList = {}\n    };\n\n    _this.store = _this.props.WorkStore;\n    return _this;\n  }\n\n  _createClass(AddModal, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var _this$props = this.props,\n          visible = _this$props.visible,\n          onClose = _this$props.onClose;\n      var currentMain = this.store.currentMain;\n      var employeeList = this.props.DeviceDefineStore.employeeList;\n      var columns = [{\n        title: '姓名',\n        dataIndex: 'workerName',\n        key: 'workerName'\n      }, {\n        title: '代接工单数',\n        dataIndex: '1',\n        key: '1'\n      }, {\n        title: '已接待完成数',\n        dataIndex: '2',\n        key: '2'\n      }];\n      var data = JSON.stringify(this.store.workDetailList) !== '{}' ? [this.store.workDetailList] : [];\n      return React.createElement(_Modal, {\n        title: '派单',\n        visible: visible,\n        onCancel: onClose,\n        footer: React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(_Button, {\n          onClick: this.props.onClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, \"\\u53D6\\u6D88\"), React.createElement(_Button, {\n          type: \"primary\",\n          onClick: this.onOk,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"\\u786E\\u5B9A\")),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"\\u5DE5\\u5355\\u7F16\\u53F7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), getFieldDecorator('workNo', {\n        initialValue: currentMain.workNo,\n        rules: [{\n          required: true,\n          message: '请输入工单编号'\n        }]\n      })(React.createElement(_Input, {\n        disabled: true,\n        placeholder: \"\\u8BF7\\u8F93\\u5165\",\n        style: {\n          width: '250px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }))), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"\\u7EF4\\u4FDD\\u4EBA\\u5458\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), getFieldDecorator('workerId', {\n        initialValue: currentMain.workerId,\n        rules: [{\n          required: true,\n          message: '请输入维保人员'\n        }]\n      })(React.createElement(_Select, {\n        showSearch: true,\n        optionFilterProp: \"children\",\n        placeholder: \"\\u8BF7\\u9009\\u62E9\",\n        onChange: this.getWorkerDetail,\n        style: {\n          width: 250\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, employeeList.map(function (mas) {\n        return React.createElement(Option, {\n          key: mas.id,\n          value: mas.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, mas.name);\n      })))), React.createElement(_Table, {\n        columns: columns,\n        size: \"middle\",\n        dataSource: data,\n        pagination: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AddModal;\n}(Component), _temp)) || _class) || _class);\nvar WrappedDynamicRule = Form.create({})(AddModal);\nexport default WrappedDynamicRule;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage\\src\\layouts\\WorkManage\\cell\\AddModal.js"],"names":["React","Component","Form","inject","observer","Option","formItemLayout","labelCol","span","wrapperCol","AddModal","props","getWorkerDetail","e","console","log","DeviceDefineStore","employeeList","map","mas","id","store","workerName","name","getCountByWorkerId","workerId","onOk","form","validateFieldsAndScroll","err","values","saveWork","currentMain","workStatus","toString","deviceId","onClose","componentDidMount","WorkStore","getFieldDecorator","visible","columns","title","dataIndex","key","data","JSON","stringify","workDetailList","initialValue","workNo","rules","required","message","width","WrappedDynamicRule","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form } from '@ant-design/compatible';\r\nimport '@ant-design/compatible/assets/index.css';\r\nimport { Input, Button, Select, Modal, Table } from 'antd';\r\nimport { inject, observer } from 'mobx-react';\r\nconst { Option } = Select;\r\n\r\nconst formItemLayout = {\r\n  labelCol: { span: 6 },\r\n  wrapperCol: { span: 12 },\r\n};\r\n@inject('WorkStore', 'DeviceDefineStore')\r\n@observer\r\nclass AddModal extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.store = this.props.WorkStore;\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { visible, onClose } = this.props;\r\n    const { currentMain, } = this.store;\r\n    const { employeeList } = this.props.DeviceDefineStore;\r\n    const columns = [\r\n      {\r\n        title: '姓名',\r\n        dataIndex: 'workerName',\r\n        key: 'workerName'\r\n      },\r\n      {\r\n        title: '代接工单数',\r\n        dataIndex: '1',\r\n        key: '1'\r\n      },\r\n      {\r\n        title: '已接待完成数',\r\n        dataIndex: '2',\r\n        key: '2'\r\n      },\r\n    ];\r\n    const data = JSON.stringify(this.store.workDetailList) !== '{}' ? [this.store.workDetailList] : []\r\n    return <Modal\r\n      title={'派单'}\r\n      visible={visible}\r\n      onCancel={onClose}\r\n      footer={\r\n        <React.Fragment>\r\n          <Button onClick={this.props.onClose}>取消</Button>\r\n          <Button type='primary' onClick={this.onOk}>确定</Button>\r\n        </React.Fragment>\r\n      }\r\n    >\r\n      <Form>\r\n        <Form.Item {...formItemLayout} label=\"工单编号\">\r\n          {getFieldDecorator('workNo', {\r\n            initialValue: currentMain.workNo,\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: '请输入工单编号'\r\n              }\r\n            ]\r\n          })(\r\n            <Input disabled placeholder='请输入' style={{ width: '250px' }} />\r\n          )}\r\n        </Form.Item>\r\n\r\n        <Form.Item {...formItemLayout} label=\"维保人员\">\r\n          {getFieldDecorator('workerId', {\r\n            initialValue: currentMain.workerId,\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: '请输入维保人员'\r\n              }\r\n            ]\r\n          })(\r\n            <Select\r\n              showSearch\r\n              optionFilterProp='children'\r\n              placeholder=\"请选择\"\r\n              onChange={this.getWorkerDetail}\r\n              style={{ width: 250 }}\r\n            >\r\n              {\r\n                employeeList.map(mas => <Option key={mas.id} value={mas.id}>{mas.name}</Option>)\r\n              }\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Table columns={columns} size='middle' dataSource={data} pagination={false} />\r\n      </Form>\r\n    </Modal>\r\n  }\r\n\r\n  getWorkerDetail = (e) => {\r\n    console.log(e)\r\n    this.props.DeviceDefineStore.employeeList.map(mas => {\r\n      if (e === mas.id) this.store.workerName = mas.name\r\n    })\r\n    this.store.getCountByWorkerId({ workerId: e })\r\n  }\r\n  onOk = () => {\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        this.store.saveWork({\r\n          id: this.store.currentMain.id,\r\n          ...values,\r\n          workStatus: this.store.currentMain.workStatus.toString() === '0' ? 1 : 7,\r\n          deviceId: this.store.currentMain.deviceId,\r\n        })\r\n        this.props.onClose();\r\n      }\r\n    });\r\n  }\r\n  componentDidMount = () => {\r\n    // this.store.workDetailList = {}\r\n  }\r\n}\r\nconst WrappedDynamicRule = Form.create({})(AddModal);\r\nexport default WrappedDynamicRule;"]},"metadata":{},"sourceType":"module"}