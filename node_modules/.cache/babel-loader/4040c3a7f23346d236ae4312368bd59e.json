{"ast":null,"code":"import \"antd/lib/radio/style\";\nimport _Radio from \"antd/lib/radio\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _defineProperty from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\src\\\\layouts\\\\SystemManager\\\\DepartmentManager\\\\DepartmentDialog.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { toJS } from 'mobx';\nimport GlobalModal from 'Components/GlobalModal';\nvar Department = (_dec = inject('SystemStore'), _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_Component) {\n  _inherits(Department, _Component);\n\n  var _super = _createSuper(Department);\n\n  function Department() {\n    var _this;\n\n    _classCallCheck(this, Department);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var _this$props$SystemSto = _this.props.SystemStore,\n          getDeptData = _this$props$SystemSto.getDeptData,\n          modalChange = _this$props$SystemSto.modalChange,\n          addNew = _this$props$SystemSto.addNew,\n          formData = _this$props$SystemSto.formData,\n          isReview = _this$props$SystemSto.isReview,\n          columnsType = _this$props$SystemSto.columnsType,\n          addNewCustomer = _this$props$SystemSto.addNewCustomer;\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          if (columnsType === '1') {\n            if (formData.id) {\n              values.parentId = values.parentId === '总部门' ? 0 : values.parentId;\n              addNew(0, _objectSpread({}, formData, {}, values)).then(function (res) {\n                getDeptData(columnsType);\n\n                _message.success('更新成功');\n\n                modalChange(0);\n              });\n            } else {\n              values.parentId = values.parentId === '总部门' ? 0 : values.parentId;\n              addNew(1, values).then(function (res) {\n                getDeptData(columnsType);\n\n                _message.success('添加成功');\n\n                modalChange(0);\n              });\n            }\n          } else {\n            if (isReview) {\n              _this.props.SystemStore.isReview = false;\n              modalChange(0);\n              return;\n            }\n\n            if (formData.id) {\n              addNewCustomer(0, _objectSpread({}, formData, {}, values)).then(function (res) {\n                getDeptData(columnsType);\n\n                _message.success('更新成功');\n\n                modalChange(0);\n              });\n            } else {\n              addNewCustomer(1, _objectSpread({}, values)).then(function (res) {\n                getDeptData(columnsType);\n\n                _message.success('添加成功');\n\n                modalChange(0);\n              });\n            }\n          }\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Department, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$SystemSto2 = this.props.SystemStore,\n          modalVisible = _this$props$SystemSto2.modalVisible,\n          formData = _this$props$SystemSto2.formData,\n          columnsType = _this$props$SystemSto2.columnsType,\n          arr = _this$props$SystemSto2.arr,\n          isReview = _this$props$SystemSto2.isReview;\n      var formLabelCol = {\n        span: 4\n      };\n      var formWrapperCol = {\n        span: 18\n      };\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var Option = _Select.Option;\n      console.log(arr);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 16\n        }\n      }, modalVisible && /*#__PURE__*/React.createElement(GlobalModal, {\n        title: JSON.stringify(formData) === '{}' ? '新增' : '编辑',\n        visible: modalVisible,\n        width: '50%',\n        onOk: this.handleSubmit,\n        onCancel: function onCancel(e) {\n          return _this2.props.SystemStore.modalChange(0);\n        },\n        children: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(_Form, {\n          onSubmit: this.handleSubmit,\n          layout: \"horizontal\",\n          labelCol: formLabelCol,\n          wrapperCol: formWrapperCol,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }\n        }, columnsType === '1' ? /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 56\n          }\n        }, /*#__PURE__*/React.createElement(_Form.Item, {\n          label: \"\\u4E0A\\u7EA7\\u90E8\\u95E8\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 37\n          }\n        }, getFieldDecorator('parentId', {\n          initialValue: formData.parentId || '总部门'\n        })( /*#__PURE__*/React.createElement(_Select, {\n          disabled: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 45\n          }\n        }, arr.map(function (item) {\n          return /*#__PURE__*/React.createElement(Option, {\n            value: item.id,\n            key: item.id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 67\n            }\n          }, item.name);\n        })))), /*#__PURE__*/React.createElement(_Form.Item, {\n          label: \"\\u90E8\\u95E8\\u540D\\u79F0\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 37\n          }\n        }, getFieldDecorator('name', {\n          rules: [{\n            required: true,\n            message: '请输入部门名称'\n          }],\n          initialValue: formData.name || ''\n        })( /*#__PURE__*/React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u90E8\\u95E8\\u540D\\u79F0\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 45\n          }\n        }))), /*#__PURE__*/React.createElement(_Form.Item, {\n          label: \"\\u72B6\\u6001\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 37\n          }\n        }, getFieldDecorator('delFlag', {\n          rules: [{\n            required: false,\n            message: '请选择状态'\n          }],\n          initialValue: formData.delFlag || 0\n        })( /*#__PURE__*/React.createElement(_Radio.Group, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(_Radio, {\n          value: 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 49\n          }\n        }, \"\\u542F\\u7528\"), /*#__PURE__*/React.createElement(_Radio, {\n          value: 0,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 49\n          }\n        }, \"\\u7981\\u7528\"))))) : /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 42\n          }\n        }, /*#__PURE__*/React.createElement(_Form.Item, {\n          label: \"\\u5408\\u4F5C\\u4F19\\u4F34\\u7F16\\u7801\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 42\n          }\n        }, getFieldDecorator('customerCode', {\n          rules: [{\n            required: true,\n            message: '请输入合作伙伴编码'\n          }],\n          initialValue: formData.customerCode || ''\n        })( /*#__PURE__*/React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u5408\\u4F5C\\u4F19\\u4F34\\u7F16\\u7801\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 49\n          }\n        }))), /*#__PURE__*/React.createElement(_Form.Item, {\n          label: \"\\u5408\\u4F5C\\u4F19\\u4F34\\u540D\\u79F0\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 41\n          }\n        }, getFieldDecorator('customerName', {\n          rules: [{\n            required: true,\n            message: '请输入合作伙伴名称'\n          }],\n          initialValue: formData.customerName || ''\n        })( /*#__PURE__*/React.createElement(_Input, {\n          readOnly: isReview,\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u5408\\u4F5C\\u4F19\\u4F34\\u540D\\u79F0\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 49\n          }\n        }))), /*#__PURE__*/React.createElement(_Form.Item, {\n          label: \"\\u8054\\u7CFB\\u4EBA\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 41\n          }\n        }, getFieldDecorator('customerContacts', {\n          rules: [{\n            required: true,\n            message: '请输入联系人'\n          }],\n          initialValue: formData.customerContacts || ''\n        })( /*#__PURE__*/React.createElement(_Input, {\n          readOnly: isReview,\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u8054\\u7CFB\\u4EBA\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 49\n          }\n        }))), /*#__PURE__*/React.createElement(_Form.Item, {\n          label: \"\\u8054\\u7CFB\\u4EBA\\u804C\\u52A1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 41\n          }\n        }, getFieldDecorator('contactPost', {\n          rules: [{\n            required: false,\n            message: '请输入联系人职务'\n          }],\n          initialValue: formData.contactPost || ''\n        })( /*#__PURE__*/React.createElement(_Input, {\n          readOnly: isReview,\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u8054\\u7CFB\\u4EBA\\u804C\\u52A1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 49\n          }\n        }))), /*#__PURE__*/React.createElement(_Form.Item, {\n          label: \"\\u8054\\u7CFB\\u65B9\\u5F0F\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 41\n          }\n        }, getFieldDecorator('customerPhone', {\n          rules: [{\n            required: false,\n            message: '请输入联系方式'\n          }],\n          initialValue: formData.customerPhone || ''\n        })( /*#__PURE__*/React.createElement(_Input, {\n          readOnly: isReview,\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u8054\\u7CFB\\u65B9\\u5F0F\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 49\n          }\n        }))), /*#__PURE__*/React.createElement(_Form.Item, {\n          label: \"\\u8054\\u7CFB\\u90AE\\u4EF6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 41\n          }\n        }, getFieldDecorator('customerEmails', {\n          rules: [{\n            required: false,\n            message: '请输入联系邮件'\n          }],\n          initialValue: formData.customerEmails || ''\n        })( /*#__PURE__*/React.createElement(_Input, {\n          readOnly: isReview,\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u8054\\u7CFB\\u90AE\\u4EF6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 49\n          }\n        }))), /*#__PURE__*/React.createElement(_Form.Item, {\n          label: \"\\u5730\\u5740\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 41\n          }\n        }, getFieldDecorator('customerAddress', {\n          rules: [{\n            required: false,\n            message: '请输入地址'\n          }],\n          initialValue: formData.customerAddress || ''\n        })( /*#__PURE__*/React.createElement(_Input, {\n          readOnly: isReview,\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u5730\\u5740\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 49\n          }\n        }))), /*#__PURE__*/React.createElement(_Form.Item, {\n          label: \"\\u5907\\u6CE8\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 41\n          }\n        }, getFieldDecorator('description', {\n          rules: [{\n            required: false,\n            message: '请输入备注'\n          }],\n          initialValue: formData.description || ''\n        })( /*#__PURE__*/React.createElement(_Input, {\n          readOnly: isReview,\n          placeholder: \"\\u5907\\u6CE8\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 49\n          }\n        }))), /*#__PURE__*/React.createElement(_Form.Item, {\n          label: \"\\u72B6\\u6001\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 41\n          }\n        }, getFieldDecorator('customerStatus', {\n          rules: [{\n            required: false,\n            message: '请选择状态'\n          }],\n          initialValue: formData.customerStatus || 0\n        })( /*#__PURE__*/React.createElement(_Radio.Group, {\n          disabled: isReview,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(_Radio, {\n          value: 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 53\n          }\n        }, \"\\u542F\\u7528\"), /*#__PURE__*/React.createElement(_Radio, {\n          value: 0,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 53\n          }\n        }, \"\\u7981\\u7528\"))))))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 33\n        }\n      }));\n    } //提交表单\n\n  }]);\n\n  return Department;\n}(Component), _temp)) || _class) || _class);\n\nvar DepartmentForm = _Form.create({\n  name: 'define'\n})(Department);\n\nexport default DepartmentForm;","map":{"version":3,"sources":["C:/Users/Misaki/Desktop/kda/设备运维前端/bl-device-manage/src/layouts/SystemManager/DepartmentManager/DepartmentDialog.js"],"names":["React","Component","inject","observer","toJS","GlobalModal","Department","handleSubmit","e","preventDefault","props","SystemStore","getDeptData","modalChange","addNew","formData","isReview","columnsType","addNewCustomer","form","validateFields","err","values","id","parentId","then","res","success","modalVisible","arr","formLabelCol","span","formWrapperCol","getFieldDecorator","Option","console","log","JSON","stringify","initialValue","map","item","name","rules","required","message","delFlag","customerCode","customerName","customerContacts","contactPost","customerPhone","customerEmails","customerAddress","description","customerStatus","DepartmentForm","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { toJS } from 'mobx';\nimport { message, Form, Input, Radio, Select } from 'antd';\nimport GlobalModal from 'Components/GlobalModal';\n@inject('SystemStore')\n@observer\nclass Department extends Component {\n    render() {\n        const { modalVisible, formData, columnsType, arr, isReview } = this.props.SystemStore\n        const formLabelCol = { span: 4 }\n        const formWrapperCol = { span: 18 }\n        const { getFieldDecorator } = this.props.form;\n        const { Option } = Select\n        console.log(arr)\n        return <div>\n            {\n                modalVisible && <GlobalModal\n                    title={JSON.stringify(formData) === '{}' ? '新增' : '编辑'}\n                    visible={modalVisible}\n                    width={'50%'}\n                    onOk={this.handleSubmit}\n                    onCancel={e => this.props.SystemStore.modalChange(0)}\n                    children={\n                        <div>\n                            <Form onSubmit={this.handleSubmit} layout='horizontal' labelCol={formLabelCol} wrapperCol={formWrapperCol}>\n                                {columnsType === '1' ? <div>\n                                    <Form.Item label=\"上级部门\">\n                                        {getFieldDecorator('parentId', {\n                                            initialValue: formData.parentId || '总部门'\n                                        })(\n                                            <Select disabled>\n                                                {arr.map(item => (<Option value={item.id} key={item.id}>{item.name}</Option>))}\n                                            </Select>\n                                        )}\n                                    </Form.Item>\n                                    <Form.Item label=\"部门名称\">\n                                        {getFieldDecorator('name', {\n                                            rules: [{ required: true, message: '请输入部门名称' }],\n                                            initialValue: formData.name || ''\n                                        })(\n                                            <Input placeholder=\"请输入部门名称\" />\n                                        )}\n                                    </Form.Item>\n                                    <Form.Item label=\"状态\">\n                                        {getFieldDecorator('delFlag', {\n                                            rules: [{ required: false, message: '请选择状态' }],\n                                            initialValue: formData.delFlag || 0\n                                        })(\n                                            <Radio.Group>\n                                                <Radio value={1}>启用</Radio>\n                                                <Radio value={0}>禁用</Radio>\n                                            </Radio.Group>\n                                        )}\n                                    </Form.Item>\n                                </div> : <div>\n                                        {<Form.Item label=\"合作伙伴编码\">\n                                            {getFieldDecorator('customerCode', {\n                                                rules: [{ required: true, message: '请输入合作伙伴编码' }],\n                                                initialValue: formData.customerCode || ''\n                                            })(\n                                                <Input placeholder=\"请输入合作伙伴编码\" />\n                                            )}\n                                        </Form.Item>}\n                                        <Form.Item label=\"合作伙伴名称\">\n                                            {getFieldDecorator('customerName', {\n                                                rules: [{ required: true, message: '请输入合作伙伴名称' }],\n                                                initialValue: formData.customerName || ''\n                                            })(\n                                                <Input readOnly={isReview} placeholder=\"请输入合作伙伴名称\" />\n                                            )}\n                                        </Form.Item>\n                                        <Form.Item label=\"联系人\">\n                                            {getFieldDecorator('customerContacts', {\n                                                rules: [{ required: true, message: '请输入联系人' }],\n                                                initialValue: formData.customerContacts || ''\n                                            })(\n                                                <Input readOnly={isReview} placeholder=\"请输入联系人\" />\n                                            )}\n                                        </Form.Item>\n                                        <Form.Item label=\"联系人职务\">\n                                            {getFieldDecorator('contactPost', {\n                                                rules: [{ required: false, message: '请输入联系人职务' }],\n                                                initialValue: formData.contactPost || ''\n                                            })(\n                                                <Input readOnly={isReview} placeholder=\"请输入联系人职务\" />\n                                            )}\n                                        </Form.Item>\n                                        <Form.Item label=\"联系方式\">\n                                            {getFieldDecorator('customerPhone', {\n                                                rules: [{ required: false, message: '请输入联系方式' }],\n                                                initialValue: formData.customerPhone || ''\n                                            })(\n                                                <Input readOnly={isReview} placeholder=\"请输入联系方式\" />\n                                            )}\n                                        </Form.Item>\n                                        <Form.Item label=\"联系邮件\">\n                                            {getFieldDecorator('customerEmails', {\n                                                rules: [{ required: false, message: '请输入联系邮件' }],\n                                                initialValue: formData.customerEmails || ''\n                                            })(\n                                                <Input readOnly={isReview} placeholder=\"请输入联系邮件\" />\n                                            )}\n                                        </Form.Item>\n                                        <Form.Item label=\"地址\">\n                                            {getFieldDecorator('customerAddress', {\n                                                rules: [{ required: false, message: '请输入地址' }],\n                                                initialValue: formData.customerAddress || ''\n                                            })(\n                                                <Input readOnly={isReview} placeholder=\"请输入地址\" />\n                                            )}\n                                        </Form.Item>\n                                        <Form.Item label=\"备注\">\n                                            {getFieldDecorator('description', {\n                                                rules: [{ required: false, message: '请输入备注' }],\n                                                initialValue: formData.description || ''\n                                            })(\n                                                <Input readOnly={isReview} placeholder=\"备注\" />\n                                            )}\n                                        </Form.Item>\n                                        <Form.Item label=\"状态\">\n                                            {getFieldDecorator('customerStatus', {\n                                                rules: [{ required: false, message: '请选择状态' }],\n                                                initialValue: formData.customerStatus || 0\n                                            })(\n                                                <Radio.Group disabled={isReview}>\n                                                    <Radio value={1}>启用</Radio>\n                                                    <Radio value={0}>禁用</Radio>\n                                                </Radio.Group>\n                                            )}\n                                        </Form.Item>\n                                    </div>\n                                }\n                            </Form>\n                        </div>\n                    }\n                />\n            }\n        </div>;\n    }\n    //提交表单\n    handleSubmit = e => {\n        e.preventDefault();\n        const { getDeptData, modalChange, addNew, formData, isReview, columnsType, addNewCustomer } = this.props.SystemStore\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                if (columnsType === '1') {\n                    if (formData.id) {\n                        values.parentId = values.parentId === '总部门' ? 0 : values.parentId\n                        addNew(0, { ...formData, ...values }).then(res => {\n                            getDeptData(columnsType)\n                            message.success('更新成功')\n                            modalChange(0)\n                        })\n                    } else {\n                        values.parentId = values.parentId === '总部门' ? 0 : values.parentId\n                        addNew(1, values).then(res => {\n                            getDeptData(columnsType)\n                            message.success('添加成功')\n                            modalChange(0)\n                        })\n                    }\n                } else {\n                    if (isReview) {\n                        this.props.SystemStore.isReview = false\n                        modalChange(0)\n                        return\n                    }\n                    if (formData.id) {\n                        addNewCustomer(0, { ...formData, ...values }).then(res => {\n                            getDeptData(columnsType)\n                            message.success('更新成功')\n                            modalChange(0)\n                        })\n                    } else {\n                        addNewCustomer(1, { ...values }).then(res => {\n                            getDeptData(columnsType)\n                            message.success('添加成功')\n                            modalChange(0)\n                        })\n                    }\n                }\n            }\n        });\n    };\n}\nconst DepartmentForm = Form.create({ name: 'define' })(Department);\nexport default DepartmentForm;"]},"metadata":{},"sourceType":"module"}