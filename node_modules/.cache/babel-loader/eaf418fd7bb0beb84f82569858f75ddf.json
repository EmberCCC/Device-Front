{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport _ArrowDownOutlined from \"@ant-design/icons/lib/icons/ArrowDownOutlined\";\nimport _ArrowUpOutlined from \"@ant-design/icons/lib/icons/ArrowUpOutlined\";\nimport _CopyOutlined from \"@ant-design/icons/lib/icons/CopyOutlined\";\nimport \"antd/es/popconfirm/style\";\nimport _Popconfirm from \"antd/es/popconfirm\";\nimport _DeleteOutlined from \"@ant-design/icons/lib/icons/DeleteOutlined\";\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nimport React from 'react';\nimport Core from '../../index';\n\nvar SimpleList = function SimpleList(_ref) {\n  var schema = _ref.schema,\n      _ref$displayList = _ref.displayList,\n      displayList = _ref$displayList === void 0 ? [] : _ref$displayList,\n      listData = _ref.listData,\n      changeList = _ref.changeList,\n      deleteItem = _ref.deleteItem,\n      addItem = _ref.addItem,\n      copyItem = _ref.copyItem,\n      moveItemUp = _ref.moveItemUp,\n      moveItemDown = _ref.moveItemDown,\n      getFieldsProps = _ref.getFieldsProps;\n  var _schema$props = schema.props,\n      props = _schema$props === void 0 ? {} : _schema$props,\n      itemProps = schema.itemProps;\n  var addBtnProps = {\n    type: 'dashed',\n    children: '新增一条'\n  };\n  var delConfirmProps = {\n    title: \"确定删除?\",\n    okText: \"确定\",\n    cancelText: \"取消\"\n  };\n\n  if (props.addBtnProps && _typeof(props.addBtnProps) === 'object') {\n    addBtnProps = _objectSpread(_objectSpread({}, addBtnProps), props.addBtnProps);\n  }\n\n  if (props.delConfirmProps && _typeof(props.delConfirmProps) === 'object') {\n    delConfirmProps = _objectSpread(_objectSpread({}, delConfirmProps), props.delConfirmProps);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fr-list-1\"\n  }, displayList.map(function (item, idx) {\n    var fieldsProps = getFieldsProps(idx);\n    fieldsProps.displayType = 'inline';\n\n    if (props.hideTitle) {\n      fieldsProps.hideTitle = true;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: idx,\n      style: {\n        display: 'flex'\n      }\n    }, /*#__PURE__*/React.createElement(Core, fieldsProps), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 6\n      }\n    }, !props.hideDelete && /*#__PURE__*/React.createElement(_Popconfirm, _extends({\n      onConfirm: function onConfirm() {\n        return deleteItem(idx);\n      }\n    }, delConfirmProps), /*#__PURE__*/React.createElement(_DeleteOutlined, {\n      style: {\n        fontSize: 17,\n        marginLeft: 8\n      }\n    })), !props.hideAdd && !props.hideCopy && /*#__PURE__*/React.createElement(_CopyOutlined, {\n      style: {\n        fontSize: 15,\n        marginLeft: 8\n      },\n      onClick: function onClick() {\n        return copyItem(idx);\n      }\n    }), !props.hideMove && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_ArrowUpOutlined, {\n      style: {\n        fontSize: 16,\n        marginLeft: 8\n      },\n      onClick: function onClick() {\n        return moveItemUp(idx);\n      }\n    }), /*#__PURE__*/React.createElement(_ArrowDownOutlined, {\n      style: {\n        fontSize: 16,\n        marginLeft: 8\n      },\n      onClick: function onClick() {\n        return moveItemDown(idx);\n      }\n    }))));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: displayList.length > 0 ? 0 : 8\n    }\n  }, !props.hideAdd && /*#__PURE__*/React.createElement(_Button, _extends({\n    onClick: addItem\n  }, addBtnProps)), Array.isArray(props.buttons) ? props.buttons.map(function (item, idx) {\n    var callback = item.callback,\n        text = item.text,\n        html = item.html;\n\n    var onClick = function onClick() {\n      console.log({\n        value: listData,\n        onChange: changeList,\n        schema: schema\n      });\n    };\n\n    if (typeof window[callback] === 'function') {\n      onClick = function onClick() {\n        window[callback]({\n          value: listData,\n          onChange: changeList,\n          schema: schema\n        });\n      };\n    }\n\n    return /*#__PURE__*/React.createElement(_Button, {\n      key: idx.toString(),\n      style: {\n        marginLeft: 8\n      },\n      type: \"dashed\",\n      onClick: onClick\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      dangerouslySetInnerHTML: {\n        __html: html || text\n      }\n    }));\n  }) : null));\n};\n\nexport default SimpleList;","map":null,"metadata":{},"sourceType":"module"}