{"ast":null,"code":"import \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _objectSpread from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _temp;\n\nimport { observable, action } from 'mobx';\nimport { isDataExist } from 'Utils/dataTools';\nimport * as services from '../services/work';\nvar Work = (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function Work() {\n    _classCallCheck(this, Work);\n\n    _initializerDefineProperty(this, \"workList\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"workPage\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"isLoading\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"status\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"currentMain\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"visible\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"searchCondition\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"current\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"isDaily\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"workLog\", _descriptor10, this);\n\n    _initializerDefineProperty(this, \"workDetailList\", _descriptor11, this);\n\n    _initializerDefineProperty(this, \"workerAuth\", _descriptor12, this);\n\n    _initializerDefineProperty(this, \"detailLogId\", _descriptor13, this);\n\n    _initializerDefineProperty(this, \"detailVisible\", _descriptor14, this);\n\n    _initializerDefineProperty(this, \"logDetailList\", _descriptor15, this);\n\n    _initializerDefineProperty(this, \"workerName\", _descriptor16, this);\n\n    _initializerDefineProperty(this, \"workCols\", _descriptor17, this);\n  }\n\n  _createClass(Work, [{\n    key: \"getWork\",\n    value: function () {\n      var _getWork = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(params) {\n        var data, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.isLoading = true;\n                _context.prev = 1;\n                data = _objectSpread({\n                  pageIndex: 1,\n                  pageSize: 10\n                }, this.searchCondition, params);\n\n                if (this.current === '1') {\n                  data.init = true;\n                } else if (this.current === '2') {\n                  data.progress = true;\n                } else {\n                  data.finish = true;\n                }\n\n                _context.next = 6;\n                return services.gets('getWork')(data);\n\n              case 6:\n                res = _context.sent;\n                this.isLoading = false;\n\n                if (isDataExist(res)) {\n                  this.workList = res.data.data.items;\n                  this.workPage = res.data.data.page;\n                  this.workCols = res.data.dataExt;\n                }\n\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 11]]);\n      }));\n\n      function getWork(_x) {\n        return _getWork.apply(this, arguments);\n      }\n\n      return getWork;\n    }()\n  }, {\n    key: \"saveWork\",\n    value: function () {\n      var _saveWork = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.isLoading = true;\n                _context2.prev = 1;\n                _context2.next = 4;\n                return services.posts('saveWork')(params);\n\n              case 4:\n                res = _context2.sent;\n                this.isLoading = false;\n\n                if (isDataExist(res)) {\n                  _message.success('保存成功');\n                }\n\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.log(_context2.t0);\n\n              case 12:\n                this.getWork();\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 9]]);\n      }));\n\n      function saveWork(_x2) {\n        return _saveWork.apply(this, arguments);\n      }\n\n      return saveWork;\n    }()\n  }, {\n    key: \"deleteWork\",\n    value: function () {\n      var _deleteWork = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return services.posts('deleteWork')(params);\n\n              case 3:\n                res = _context3.sent;\n\n                if (isDataExist(res)) {\n                  _message.success('删除成功');\n                }\n\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(_context3.t0);\n\n              case 10:\n                this.getWork();\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 7]]);\n      }));\n\n      function deleteWork(_x3) {\n        return _deleteWork.apply(this, arguments);\n      }\n\n      return deleteWork;\n    }()\n  }, {\n    key: \"getWorkLog\",\n    value: function () {\n      var _getWorkLog = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return services.gets('getWorkLog')(params);\n\n              case 3:\n                res = _context4.sent;\n\n                if (isDataExist(res)) {\n                  this.workLog = res.data.data;\n                }\n\n                _context4.next = 10;\n                break;\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4[\"catch\"](0);\n                console.log(_context4.t0);\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 7]]);\n      }));\n\n      function getWorkLog(_x4) {\n        return _getWorkLog.apply(this, arguments);\n      }\n\n      return getWorkLog;\n    }()\n    /* 判断权限 */\n\n  }, {\n    key: \"getWorkAuth\",\n    value: function () {\n      var _getWorkAuth = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return services.gets('getWorkAuth')();\n\n              case 3:\n                res = _context5.sent;\n\n                if (isDataExist(res)) {\n                  this.workerAuth = res.data.data;\n                }\n\n                _context5.next = 10;\n                break;\n\n              case 7:\n                _context5.prev = 7;\n                _context5.t0 = _context5[\"catch\"](0);\n                console.log(_context5.t0);\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 7]]);\n      }));\n\n      function getWorkAuth() {\n        return _getWorkAuth.apply(this, arguments);\n      }\n\n      return getWorkAuth;\n    }()\n    /* 获取保养工单详情 */\n\n  }, {\n    key: \"getDetailLog\",\n    value: function () {\n      var _getDetailLog = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                _context6.next = 3;\n                return services.gets('getDetailLog')(params);\n\n              case 3:\n                res = _context6.sent;\n\n                if (isDataExist(res)) {\n                  this.logDetailList = res.data.data;\n                }\n\n                _context6.next = 10;\n                break;\n\n              case 7:\n                _context6.prev = 7;\n                _context6.t0 = _context6[\"catch\"](0);\n                console.log(_context6.t0);\n\n              case 10:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[0, 7]]);\n      }));\n\n      function getDetailLog(_x5) {\n        return _getDetailLog.apply(this, arguments);\n      }\n\n      return getDetailLog;\n    }()\n    /* 获取工人工单信息 */\n\n  }, {\n    key: \"getCountByWorkerId\",\n    value: function () {\n      var _getCountByWorkerId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                _context7.next = 3;\n                return services.gets('getCountByWorkerId')(params);\n\n              case 3:\n                res = _context7.sent;\n\n                if (isDataExist(res)) {\n                  // res.data.data.workerName = this.workerName\n                  this.workDetailList = res.data.data;\n                }\n\n                _context7.next = 10;\n                break;\n\n              case 7:\n                _context7.prev = 7;\n                _context7.t0 = _context7[\"catch\"](0);\n                console.log(_context7.t0);\n\n              case 10:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[0, 7]]);\n      }));\n\n      function getCountByWorkerId(_x6) {\n        return _getCountByWorkerId.apply(this, arguments);\n      }\n\n      return getCountByWorkerId;\n    }()\n  }, {\n    key: \"changeValue\",\n    value: function changeValue(key, value) {\n      this[key] = value;\n    }\n  }]);\n\n  return Work;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"workList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"workPage\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"isLoading\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"status\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 'add';\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"currentMain\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"visible\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"searchCondition\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"current\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '1';\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"isDaily\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"workLog\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"workDetailList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"workerAuth\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, \"detailLogId\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor14 = _applyDecoratedDescriptor(_class.prototype, \"detailVisible\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor15 = _applyDecoratedDescriptor(_class.prototype, \"logDetailList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor16 = _applyDecoratedDescriptor(_class.prototype, \"workerName\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor17 = _applyDecoratedDescriptor(_class.prototype, \"workCols\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"getWork\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getWork\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"saveWork\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"saveWork\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"deleteWork\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"deleteWork\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getWorkLog\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getWorkLog\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getWorkAuth\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getWorkAuth\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getDetailLog\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getDetailLog\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getCountByWorkerId\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getCountByWorkerId\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"changeValue\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"changeValue\"), _class.prototype)), _class);\nvar WorkStore = new Work();\nexport default WorkStore;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage\\src\\stores\\WorkStore.js"],"names":["observable","action","isDataExist","services","Work","params","isLoading","data","pageIndex","pageSize","searchCondition","current","init","progress","finish","gets","res","workList","items","workPage","page","workCols","dataExt","console","log","posts","success","getWork","workLog","workerAuth","logDetailList","workDetailList","key","value","WorkStore"],"mappings":"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","sourcesContent":["import { observable, action, } from 'mobx';\nimport { isDataExist } from 'Utils/dataTools';\nimport * as services from '../services/work';\nimport { message } from 'antd';\n\nclass Work {\n  @observable workList = []\n  @observable workPage = {}\n  @observable isLoading = false\n  @observable status = 'add'\n  @observable currentMain = {}\n  @observable visible = false\n  @observable searchCondition = {}\n  @observable current = '1'\n  @observable isDaily = false\n  @observable workLog = []\n  @observable workDetailList = []\n  @observable workerAuth = {}\n  @observable detailLogId = ''\n  @observable detailVisible = false\n  @observable logDetailList = []\n  @observable workerName = ''\n  @observable workCols = []\n\n  @action async getWork(params) {\n    this.isLoading = true\n    try {\n      let data = {\n        pageIndex: 1,\n        pageSize: 10,\n        ...this.searchCondition,\n        ...params\n      }\n      if (this.current === '1') {\n        data.init = true;\n      } else if (this.current === '2') {\n        data.progress = true;\n      } else {\n        data.finish = true;\n      }\n      let res = await services.gets('getWork')(data)\n      this.isLoading = false\n      if (isDataExist(res)) {\n        this.workList = res.data.data.items;\n        this.workPage = res.data.data.page;\n        this.workCols = res.data.dataExt;\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  @action async saveWork(params) {\n    this.isLoading = true\n    try {\n      let res = await services.posts('saveWork')(params)\n      this.isLoading = false\n      if (isDataExist(res)) {\n        message.success('保存成功')\n      }\n    } catch (error) {\n      console.log(error)\n    }\n    this.getWork()\n  }\n  @action async deleteWork(params) {\n    try {\n      let res = await services.posts('deleteWork')(params)\n      if (isDataExist(res)) {\n        message.success('删除成功')\n      }\n    } catch (error) {\n      console.log(error)\n    }\n    this.getWork()\n  }\n\n  @action async getWorkLog(params) {\n    try {\n      let res = await services.gets('getWorkLog')(params)\n      if (isDataExist(res)) {\n        this.workLog = res.data.data;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  /* 判断权限 */\n  @action async getWorkAuth() {\n    try {\n      let res = await services.gets('getWorkAuth')();\n      if (isDataExist(res)) {\n        this.workerAuth = res.data.data;\n      }\n    } catch (error) {\n      console.log(error);\n\n    }\n  }\n  /* 获取保养工单详情 */\n  @action async getDetailLog(params) {\n    try {\n      let res = await services.gets('getDetailLog')(params)\n      if (isDataExist(res)) {\n        this.logDetailList = res.data.data;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  /* 获取工人工单信息 */\n  @action async getCountByWorkerId(params) {\n    try {\n      let res = await services.gets('getCountByWorkerId')(params)\n      if (isDataExist(res)) {\n        // res.data.data.workerName = this.workerName\n        this.workDetailList = res.data.data;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\n  @action changeValue(key, value) {\n    this[key] = value;\n  }\n}\nlet WorkStore = new Work();\nexport default WorkStore;"]},"metadata":{},"sourceType":"module"}