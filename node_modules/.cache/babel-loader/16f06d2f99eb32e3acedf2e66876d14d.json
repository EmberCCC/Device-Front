{"ast":null,"code":"import \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/tag/style\";\nimport _Tag from \"antd/lib/tag\";\nimport \"antd/lib/menu/style\";\nimport _Menu from \"antd/lib/menu\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport _objectSpread from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nvar _jsxFileName = \"F:\\\\documents\\\\bl-device-manage-test\\\\src\\\\layouts\\\\TableEdit\\\\index.js\";\n\n/*\r\n * @Author: your name\r\n * @Date: 2022-03-22 09:57:59\r\n * @LastEditTime: 2022-04-08 00:38:20\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n * @FilePath: \\bl-device-manage\\src\\layouts\\TableEdit\\index.js\r\n */\nimport React from 'react';\n// Default SortableJS\nimport Sortable from 'react-sortablejs';\nimport _ from 'lodash';\nimport uniqueId from 'lodash/uniqueId';\nimport update from 'immutability-helper';\nimport { indexToArray, getItem, setInfo, isPath, getCloneItem, itemRemove, itemAdd } from '../../utils/loashTools';\nimport { formItemData, GlobalComponent } from './config';\nimport EditableTable from './EditableTable/index';\nimport './index.css';\nimport { NavLink } from 'react-router-dom';\nvar Header = _Layout.Header,\n    Sider = _Layout.Sider,\n    Content = _Layout.Content;\nvar Option = _Select.Option;\nvar sortableOption = {\n  animation: 20,\n  fallbackOnBody: true,\n  swapThreshold: 0.65,\n  group: {\n    name: 'formItem',\n    pull: true,\n    put: true\n  }\n};\n\nvar EditPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditPage, _React$Component);\n\n  function EditPage() {\n    _classCallCheck(this, EditPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EditPage).apply(this, arguments));\n  }\n\n  _createClass(EditPage, [{\n    key: \"render\",\n    value: function render() {\n      var itemData = []; // 组件数据\n\n      var isShowModal = false; // 弹框是否显示\n\n      var curItemKey = ''; // 当前选中组件的Key\n\n      var curItemName = ''; // 当前选中组件的Name\n\n      var curItemType = ''; // 当前选中组件的Type\n\n      var isChoose = false; // 组件是否处于选中状态\n\n      var handleSubmit = function handleSubmit() {};\n\n      var handlePreview = function handlePreview() {\n        console.log('itemData:' + JSON.stringify(itemData));\n        setIsChoose(false);\n        setIsShowModal(true);\n      };\n\n      var handleLabelChange = function handleLabelChange(e) {\n        var val = e.target.value;\n        setCurItemName(val);\n        itemData[curItemKey].label = val;\n        setItemData.apply(void 0, [itemData]);\n      };\n\n      var handleDel = function handleDel() {\n        var newTreeData = itemRemove(curItemKey, itemData);\n        setCurItemKey('');\n        setCurItemName('');\n        setCurItemType('');\n        setItemData(_toConsumableArray(newTreeData));\n      };\n\n      var sortableChoose = function sortableChoose(e) {\n        console.log(e);\n        setIsChoose(true);\n        var curKey = e.item.getAttribute('data-id');\n        var curName = e.item.firstChild.innerText;\n        var curType = e.item.getAttribute('type');\n        setCurItemKey(curKey);\n        setCurItemName(curName);\n        setCurItemType(curType);\n      }; // 拖拽的添加方法\n\n\n      var sortableAdd = function sortableAdd(e) {\n        // 组件名或路径\n        var nameOrIndex = e.clone.getAttribute('data-id'); // 父节点路径\n\n        var parentPath = e.path[1].getAttribute('data-id'); // 拖拽元素的目标路径\n\n        var newIndex = e.newIndex; // 新路径 为根节点时直接使用index\n\n        var newPath = parentPath ? \"\".concat(parentPath, \"-\").concat(newIndex) : newIndex; // 判断是否为路径 路径执行移动，非路径为新增\n\n        if (isPath(nameOrIndex)) {\n          // 旧的路径index\n          var oldIndex = nameOrIndex; // 克隆要移动的元素\n\n          var dragItem = getCloneItem(oldIndex, itemData); // 比较路径的上下位置 先执行靠下的数据 再执行靠上数据\n\n          if (indexToArray(oldIndex) > indexToArray(newPath)) {\n            // 删除元素 获得新数据\n            var newTreeData = itemRemove(oldIndex, itemData); // 添加拖拽元素\n\n            newTreeData = itemAdd(newPath, newTreeData, dragItem); // 更新视图\n\n            setItemData(_toConsumableArray(newTreeData));\n            return;\n          } // 添加拖拽元素\n\n\n          var newData = itemAdd(newPath, itemData, dragItem); // 删除元素 获得新数据\n\n          newData = itemRemove(oldIndex, newData);\n          setItemData(_toConsumableArray(newData));\n          return;\n        } // 新增流程 创建元素 => 插入元素 => 更新视图\n\n\n        var id = nameOrIndex;\n\n        var newItem = _.cloneDeep(formItemData.find(function (item) {\n          return item.name === id;\n        })); // 为容器或者弹框时增加子元素\n\n\n        if (newItem.name === 'Containers') {\n          var ComponentsInfo = _.cloneDeep(GlobalComponent[newItem.name]); // 判断是否包含默认数据\n\n\n          newItem.children = [ComponentsInfo];\n        }\n\n        var Data = itemAdd(newPath, itemData, newItem);\n        setItemData(_toConsumableArray(Data));\n      }; // 拖拽的排序方法\n\n\n      var sortableUpdate = function sortableUpdate(e) {\n        // 交换数组\n        var newIndex = e.newIndex,\n            oldIndex = e.oldIndex; // 父节点路径\n\n        var parentPath = e.path[1].getAttribute('data-id'); // 父元素 根节点时直接调用data\n\n        var parent = parentPath ? getItem(parentPath, itemData) : itemData; // 当前拖拽元素\n\n        var dragItem = parent[oldIndex]; // 更新后的父节点\n\n        parent = update(parent, {\n          $splice: [[oldIndex, 1], [newIndex, 0, dragItem]]\n        }); // 最新的数据 根节点时直接调用data\n\n        var Data = parentPath ? setInfo(parentPath, itemData, parent) : parent; // 调用父组件更新方法\n\n        setItemData(_toConsumableArray(Data));\n      }; // 递归函数\n\n\n      var loop = function loop(arr, index) {\n        var newitem = {};\n        itemData.forEach(function (element) {\n          console.log(element);\n        });\n        return arr.map(function (item, i) {\n          var indexs = index === '' ? String(i) : \"\".concat(index, \"-\").concat(i);\n\n          if (item) {\n            if (item.children) {\n              return React.createElement(\"div\", Object.assign({}, item.attr, {\n                \"data-id\": indexs,\n                key: indexs,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 164\n                },\n                __self: this\n              }), React.createElement(Sortable, {\n                key: uniqueId(),\n                style: {\n                  minHeight: 100,\n                  margin: 10\n                },\n                ref: function ref(c) {\n                  return c && c.sortable;\n                },\n                options: _objectSpread({}, sortableOption, {\n                  onUpdate: function onUpdate(e) {\n                    return sortableUpdate(e);\n                  },\n                  onAdd: function onAdd(e) {\n                    return sortableAdd(e);\n                  },\n                  onChoose: function onChoose(e) {\n                    return sortableChoose(e);\n                  },\n                  onSort: function onSort(e) {\n                    return setIsChoose(false);\n                  }\n                }),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 165\n                },\n                __self: this\n              }, loop(item.children, indexs)));\n            }\n\n            var ComponentInfo = GlobalComponent[item.name];\n            return React.createElement(\"div\", {\n              \"data-id\": indexs,\n              key: indexs,\n              type: item.name,\n              className: \"formItemStyle\",\n              style: isChoose && indexs === curItemKey ? {\n                border: '1px solid #FF3333'\n              } : {},\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 184\n              },\n              __self: this\n            }, item.name !== 'Divider' && React.createElement(\"div\", {\n              className: \"formItemLabel\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 193\n              },\n              __self: this\n            }, isChoose ? indexs === curItemKey ? curItemName : item.label : item.label), renderDiffComponents(item, indexs, ComponentInfo));\n          } else {\n            return null;\n          }\n        });\n      };\n\n      var renderDiffComponents = function renderDiffComponents(item, indexs, ComponentInfo) {\n        switch (item.name) {\n          case 'Divider':\n            return React.createElement(ComponentInfo, Object.assign({\n              key: indexs\n            }, item.attr, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 210\n              },\n              __self: this\n            }));\n\n          case 'Select':\n            return React.createElement(ComponentInfo, {\n              key: indexs,\n              defaultValue: item.attr.value,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 213\n              },\n              __self: this\n            }, item.attr.options.map(function (subItem) {\n              return React.createElement(Option, {\n                key: subItem.key,\n                value: subItem.value + '',\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 215\n                },\n                __self: this\n              }, subItem.label);\n            }));\n\n          default:\n            return React.createElement(ComponentInfo, Object.assign({\n              key: indexs\n            }, item.attr, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 220\n              },\n              __self: this\n            }));\n        }\n      };\n\n      var getDataSource = function getDataSource(options) {\n        itemData[curItemKey].attr.options = _toConsumableArray(options);\n        setItemData([].concat(itemData));\n      };\n\n      return React.createElement(_Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Header, {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/basic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"dashed\",\n        class: \"backButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Back\")), React.createElement(_Menu, {\n        theme: \"light\",\n        mode: \"horizontal\",\n        defaultSelectedKeys: ['2'],\n        justify: \"center\",\n        class: \"headerMenu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(_Menu.Item, {\n        key: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"nav 1\"), React.createElement(_Menu.Item, {\n        key: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"nav 2\"), React.createElement(_Menu.Item, {\n        key: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"nav 3\"))), React.createElement(_Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(Sider, {\n        width: '15%',\n        className: \"site-layout-background\",\n        style: {\n          height: '100%',\n          borderRight: 0\n        },\n        theme: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"textHead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"\\u7EC4\\u4EF6\\u5217\\u8868\"), React.createElement(Sortable, {\n        options: {\n          group: {\n            name: 'formItem',\n            pull: 'clone',\n            put: false\n          },\n          sort: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, formItemData.map(function (item) {\n        return React.createElement(\"div\", {\n          \"data-id\": item.name,\n          key: item.name,\n          style: {\n            marginTop: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          },\n          __self: this\n        }, React.createElement(_Tag, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, item.label + '-' + item.name));\n      }))), React.createElement(_Layout, {\n        style: {\n          padding: '0 24px 24px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(Content, {\n        className: \"site-layout-background\",\n        style: {\n          padding: 24,\n          margin: 0,\n          minHeight: 280\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(Sortable, {\n        className: \"formContent\",\n        ref: function ref(c) {\n          return c && c.sortable;\n        },\n        options: _objectSpread({}, sortableOption, {\n          onUpdate: function onUpdate(e) {\n            return sortableUpdate(e);\n          },\n          onAdd: function onAdd(e) {\n            return sortableAdd(e);\n          },\n          onChoose: function onChoose(e) {\n            return sortableChoose(e);\n          },\n          onSort: function onSort(e) {\n            return setIsChoose(false);\n          }\n        }),\n        key: uniqueId(),\n        style: {\n          minHeight: 200\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, loop(itemData, ''))), React.createElement(Sider, {\n        theme: \"light\",\n        width: '20%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"textHead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"\\u5B57\\u6BB5\\u8BBE\\u7F6E\"), React.createElement(_Form, {\n        className: \"itemForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        label: \"\\u7EC4\\u4EF6Key\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(_Input, {\n        value: curItemKey,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      })), React.createElement(_Form.Item, {\n        label: \"\\u6807\\u7B7E\\u540D\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(_Input, {\n        value: curItemName,\n        disabled: !isChoose,\n        onChange: handleLabelChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      })), ['CheckboxGroup', 'RadioGroup', 'Select'].includes(curItemType) && React.createElement(EditableTable, {\n        getDataSource: getDataSource,\n        curItemKey: curItemKey,\n        options: itemData[curItemKey].attr.options,\n        disabled: !isChoose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      })), React.createElement(_Button, {\n        className: \"delBtn\",\n        onClick: handleDel,\n        disabled: !isChoose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, \"\\u5220\\u9664\")))));\n    }\n  }]);\n\n  return EditPage;\n}(React.Component);\n\nexport default EditPage;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage-test\\src\\layouts\\TableEdit\\index.js"],"names":["React","Sortable","_","uniqueId","update","indexToArray","getItem","setInfo","isPath","getCloneItem","itemRemove","itemAdd","formItemData","GlobalComponent","EditableTable","NavLink","Header","Sider","Content","Option","sortableOption","animation","fallbackOnBody","swapThreshold","group","name","pull","put","EditPage","itemData","isShowModal","curItemKey","curItemName","curItemType","isChoose","handleSubmit","handlePreview","console","log","JSON","stringify","setIsChoose","setIsShowModal","handleLabelChange","e","val","target","value","setCurItemName","label","setItemData","handleDel","newTreeData","setCurItemKey","setCurItemType","sortableChoose","curKey","item","getAttribute","curName","firstChild","innerText","curType","sortableAdd","nameOrIndex","clone","parentPath","path","newIndex","newPath","oldIndex","dragItem","newData","id","newItem","cloneDeep","find","ComponentsInfo","children","Data","sortableUpdate","parent","$splice","loop","arr","index","newitem","forEach","element","map","i","indexs","String","attr","minHeight","margin","c","sortable","onUpdate","onAdd","onChoose","onSort","ComponentInfo","border","renderDiffComponents","options","subItem","key","getDataSource","height","borderRight","sort","marginTop","padding","includes","Component"],"mappings":"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","sourcesContent":["/*\r\n * @Author: your name\r\n * @Date: 2022-03-22 09:57:59\r\n * @LastEditTime: 2022-04-08 00:38:20\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n * @FilePath: \\bl-device-manage\\src\\layouts\\TableEdit\\index.js\r\n */\r\n\r\nimport React from 'react';\r\nimport { Tag, Layout, Button, Modal, Divider, Form, Input, Select } from 'antd';\r\n// Default SortableJS\r\nimport Sortable from 'react-sortablejs';\r\nimport { Menu } from 'antd';\r\nimport _ from 'lodash';\r\nimport uniqueId from 'lodash/uniqueId';\r\nimport update from 'immutability-helper';\r\nimport { indexToArray, getItem, setInfo, isPath, getCloneItem, itemRemove, itemAdd } from '../../utils/loashTools';\r\nimport { formItemData, GlobalComponent } from './config';\r\nimport EditableTable from './EditableTable/index';\r\nimport './index.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst { Header, Sider, Content } = Layout;\r\nconst { Option } = Select;\r\nconst sortableOption = {\r\n  animation: 20,\r\n  fallbackOnBody: true,\r\n  swapThreshold: 0.65,\r\n  group: {\r\n    name: 'formItem',\r\n    pull: true,\r\n    put: true,\r\n  },\r\n};\r\n\r\n\r\nclass EditPage extends React.Component {\r\n\r\n  render(){\r\n    const itemData = [];                  // 组件数据\r\n    const isShowModal = false;            // 弹框是否显示\r\n    const curItemKey = '';             // 当前选中组件的Key\r\n    const curItemName = '';           // 当前选中组件的Name\r\n    const curItemType = '';           // 当前选中组件的Type\r\n    const isChoose = false;                  // 组件是否处于选中状态\r\n    \r\n  \r\n    const handleSubmit = () => {\r\n  \r\n    };\r\n  \r\n    const handlePreview = () => {\r\n      console.log('itemData:' + JSON.stringify(itemData))\r\n      setIsChoose(false)\r\n      setIsShowModal(true)\r\n    };\r\n  \r\n    const handleLabelChange = (e) => {\r\n      const val = e.target.value;\r\n      setCurItemName(val);\r\n      itemData[curItemKey].label = val;\r\n      setItemData(...[itemData]);\r\n    }\r\n  \r\n    const handleDel = () => {\r\n      let newTreeData = itemRemove(curItemKey, itemData);\r\n      setCurItemKey('');\r\n      setCurItemName('');\r\n      setCurItemType('');\r\n      setItemData([...newTreeData])\r\n    }\r\n  \r\n    const sortableChoose = (e) => {\r\n      console.log(e)\r\n      setIsChoose(true);\r\n      const curKey = e.item.getAttribute('data-id');\r\n      const curName = e.item.firstChild.innerText;\r\n      const curType = e.item.getAttribute('type');\r\n      setCurItemKey(curKey);\r\n      setCurItemName(curName);\r\n      setCurItemType(curType)\r\n    };\r\n  \r\n    // 拖拽的添加方法\r\n    const sortableAdd = e => {\r\n      // 组件名或路径\r\n      const nameOrIndex = e.clone.getAttribute('data-id');\r\n      // 父节点路径\r\n      const parentPath = e.path[1].getAttribute('data-id');\r\n      // 拖拽元素的目标路径\r\n      const { newIndex } = e;\r\n      // 新路径 为根节点时直接使用index\r\n      const newPath = parentPath ? `${parentPath}-${newIndex}` : newIndex;\r\n      // 判断是否为路径 路径执行移动，非路径为新增\r\n      if (isPath(nameOrIndex)) {\r\n        // 旧的路径index\r\n        const oldIndex = nameOrIndex;\r\n        // 克隆要移动的元素\r\n        const dragItem = getCloneItem(oldIndex, itemData)\r\n        // 比较路径的上下位置 先执行靠下的数据 再执行靠上数据\r\n        if (indexToArray(oldIndex) > indexToArray(newPath)) {\r\n          // 删除元素 获得新数据\r\n          let newTreeData = itemRemove(oldIndex, itemData);\r\n          // 添加拖拽元素\r\n          newTreeData = itemAdd(newPath, newTreeData, dragItem)\r\n          // 更新视图\r\n          setItemData([...newTreeData])\r\n          return\r\n        }\r\n        // 添加拖拽元素\r\n        let newData = itemAdd(newPath, itemData, dragItem)\r\n        // 删除元素 获得新数据\r\n        newData = itemRemove(oldIndex, newData);\r\n        setItemData([...newData])\r\n        return\r\n      }\r\n  \r\n      // 新增流程 创建元素 => 插入元素 => 更新视图\r\n      const id = nameOrIndex\r\n      const newItem = _.cloneDeep(formItemData.find(item => (item.name === id)))\r\n      // 为容器或者弹框时增加子元素\r\n      if (newItem.name === 'Containers') {\r\n        const ComponentsInfo = _.cloneDeep(GlobalComponent[newItem.name])\r\n        // 判断是否包含默认数据\r\n        newItem.children = [ComponentsInfo]\r\n      }\r\n      let Data = itemAdd(newPath, itemData, newItem)\r\n      setItemData([...Data])\r\n    };\r\n  \r\n    // 拖拽的排序方法\r\n    const sortableUpdate = e => {\r\n      // 交换数组\r\n      const { newIndex, oldIndex } = e;\r\n      // 父节点路径\r\n      const parentPath = e.path[1].getAttribute('data-id');\r\n      // 父元素 根节点时直接调用data\r\n      let parent = parentPath ? getItem(parentPath, itemData) : itemData;\r\n      // 当前拖拽元素\r\n      const dragItem = parent[oldIndex];\r\n      // 更新后的父节点\r\n      parent = update(parent, {\r\n        $splice: [[oldIndex, 1], [newIndex, 0, dragItem]],\r\n      });\r\n      // 最新的数据 根节点时直接调用data\r\n      const Data = parentPath ? setInfo(parentPath, itemData, parent) : parent\r\n      // 调用父组件更新方法\r\n      setItemData([...Data])\r\n    };\r\n  \r\n    // 递归函数\r\n    const loop = (arr, index) => {\r\n      const newitem = {}\r\n      itemData.forEach(element => {\r\n        console.log(element);\r\n      });\r\n      return (\r\n        arr.map((item, i) => {\r\n          const indexs = index === '' ? String(i) : `${index}-${i}`;\r\n          if (item) {\r\n            if (item.children) {\r\n              return (\r\n                <div {...item.attr} data-id={indexs} key={indexs}>\r\n                  <Sortable\r\n                    key={uniqueId()}\r\n                    style={{ minHeight: 100, margin: 10 }}\r\n                    ref={c => c && c.sortable}\r\n                    options={{\r\n                      ...sortableOption,\r\n                      onUpdate: e => sortableUpdate(e),\r\n                      onAdd: e => sortableAdd(e),\r\n                      onChoose: e => sortableChoose(e),\r\n                      onSort: e => setIsChoose(false),\r\n                    }}\r\n                  >\r\n                    {loop(item.children, indexs)}\r\n                  </Sortable>\r\n                </div>\r\n              )\r\n            }\r\n            const ComponentInfo = GlobalComponent[item.name]\r\n            return (\r\n              <div\r\n                data-id={indexs}\r\n                key={indexs}\r\n                type={item.name}\r\n                className='formItemStyle'\r\n                style={(isChoose && indexs === curItemKey) ? { border: '1px solid #FF3333' } : {}}\r\n              >\r\n                {\r\n                  item.name !== 'Divider' &&\r\n                  <div className='formItemLabel'>{isChoose ? (indexs === curItemKey ? curItemName : item.label) : item.label}</div>\r\n                }\r\n                {\r\n                  renderDiffComponents(item, indexs, ComponentInfo)\r\n                }\r\n              </div>\r\n            )\r\n          } else {\r\n            return null\r\n          }\r\n        })\r\n      )\r\n    };\r\n  \r\n    const renderDiffComponents = (item, indexs, ComponentInfo) => {\r\n      switch (item.name) {\r\n        case 'Divider':\r\n          return <ComponentInfo key={indexs} {...item.attr}></ComponentInfo>\r\n        case 'Select':\r\n          return (\r\n            <ComponentInfo key={indexs} defaultValue={item.attr.value}>\r\n              {\r\n                item.attr.options.map(subItem => <Option key={subItem.key} value={subItem.value + ''}>{subItem.label}</Option>)\r\n              }\r\n            </ComponentInfo>\r\n          )\r\n        default:\r\n          return <ComponentInfo key={indexs} {...item.attr} />\r\n      }\r\n    }\r\n  \r\n    const getDataSource = (options) => {\r\n      itemData[curItemKey].attr.options = [...options];\r\n      setItemData([...itemData])\r\n    }\r\n    return (\r\n      <Layout>\r\n        <Header className=\"header\">\r\n          <NavLink to='/basic'><Button type='dashed' class='backButton'>Back</Button></NavLink>\r\n          <Menu theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={['2']} justify='center' class='headerMenu'>\r\n            <Menu.Item key=\"1\">nav 1</Menu.Item>\r\n            <Menu.Item key=\"2\">nav 2</Menu.Item>\r\n            <Menu.Item key=\"3\">nav 3</Menu.Item>\r\n          </Menu>\r\n        </Header>\r\n        <Layout>\r\n          <Sider width={'15%'} className=\"site-layout-background\" style={{ height: '100%', borderRight: 0 }} theme='light'>\r\n            <h3 className='textHead'>组件列表</h3>\r\n            <Sortable\r\n              options={{\r\n                group: {\r\n                  name: 'formItem',\r\n                  pull: 'clone',\r\n                  put: false,\r\n                },\r\n                sort: false,\r\n              }}\r\n            >\r\n              {\r\n                formItemData.map(item => (\r\n                  <div\r\n                    data-id={item.name}\r\n                    key={item.name}\r\n                    style={{ marginTop: 10 }}\r\n                  >\r\n                    <Tag>{item.label + '-' + item.name}</Tag>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Sortable>\r\n          </Sider>\r\n          <Layout style={{ padding: '0 24px 24px' }}>\r\n            <Content\r\n              className=\"site-layout-background\"\r\n              style={{\r\n                padding: 24,\r\n                margin: 0,\r\n                minHeight: 280,\r\n              }}\r\n            >\r\n              <Sortable\r\n                className='formContent'\r\n                ref={c => c && c.sortable}\r\n                options={{\r\n                  ...sortableOption,\r\n                  onUpdate: e => sortableUpdate(e),\r\n                  onAdd: e => sortableAdd(e),\r\n                  onChoose: e => sortableChoose(e),\r\n                  onSort: e => setIsChoose(false),\r\n                }}\r\n                key={uniqueId()}\r\n                style={{ minHeight: 200 }}\r\n              >\r\n                {loop(itemData, '')}\r\n              </Sortable>\r\n            </Content>\r\n            <Sider theme='light' width={'20%'}>\r\n              <h3 className='textHead'>字段设置</h3>\r\n              <Form className='itemForm'>\r\n                <Form.Item label=\"组件Key\">\r\n                  <Input value={curItemKey} disabled />\r\n                </Form.Item>\r\n                <Form.Item label=\"标签名\">\r\n                  <Input value={curItemName} disabled={!isChoose} onChange={handleLabelChange} />\r\n                </Form.Item>\r\n                {\r\n                  ['CheckboxGroup', 'RadioGroup', 'Select'].includes(curItemType) &&\r\n                  <EditableTable\r\n                    getDataSource={getDataSource}\r\n                    curItemKey={curItemKey}\r\n                    options={itemData[curItemKey].attr.options}\r\n                    disabled={!isChoose}\r\n                  />\r\n                }\r\n              </Form>\r\n              <Button className='delBtn' onClick={handleDel} disabled={!isChoose}>删除</Button>\r\n            </Sider>\r\n          </Layout>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default EditPage;"]},"metadata":{},"sourceType":"module"}