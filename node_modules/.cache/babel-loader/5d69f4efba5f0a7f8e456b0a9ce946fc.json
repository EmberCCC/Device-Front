{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\documents\\\\bl-device-manage-test\\\\src\\\\layouts\\\\FlowManage\\\\index.js\";\n\n/*\r\n * @Author: your name\r\n * @Date: 2022-04-11 14:41:23\r\n * @LastEditTime: 2022-04-11 14:41:24\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n * @FilePath: \\bl-device-manage-test\\src\\layouts\\FlowManage\\index.js\r\n */\nimport React, { useState, useCallback } from 'react';\nimport ReactFlow, { ReactFlowProvider, useNodesState, useEdgesState, addEdge, useReactFlow } from 'react-flow-renderer';\nimport './index.css';\nvar flowKey = 'example-flow';\n\nvar getNodeId = function getNodeId() {\n  return \"randomnode_\".concat(+new Date());\n};\n\nvar initialNodes = [{\n  id: '1',\n  data: {\n    label: 'Node 1'\n  },\n  position: {\n    x: 100,\n    y: 100\n  }\n}, {\n  id: '2',\n  data: {\n    label: 'Node 2'\n  },\n  position: {\n    x: 100,\n    y: 200\n  }\n}];\nvar initialEdges = [{\n  id: 'e1-2',\n  source: '1',\n  target: '2'\n}];\n\nvar SaveRestore = function SaveRestore() {\n  var _useNodesState = useNodesState(initialNodes),\n      _useNodesState2 = _slicedToArray(_useNodesState, 3),\n      nodes = _useNodesState2[0],\n      setNodes = _useNodesState2[1],\n      onNodesChange = _useNodesState2[2];\n\n  var _useEdgesState = useEdgesState(initialEdges),\n      _useEdgesState2 = _slicedToArray(_useEdgesState, 3),\n      edges = _useEdgesState2[0],\n      setEdges = _useEdgesState2[1],\n      onEdgesChange = _useEdgesState2[2];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      rfInstance = _useState2[0],\n      setRfInstance = _useState2[1];\n\n  var _useReactFlow = useReactFlow(),\n      setViewport = _useReactFlow.setViewport;\n\n  var onConnect = useCallback(function (params) {\n    return setEdges(function (eds) {\n      return addEdge(params, eds);\n    });\n  }, [setEdges]);\n  var onSave = useCallback(function () {\n    if (rfInstance) {\n      var flow = rfInstance.toObject();\n      localStorage.setItem(flowKey, JSON.stringify(flow));\n    }\n  }, [rfInstance]);\n  var onRestore = useCallback(function () {\n    var restoreFlow =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var flow, _flow$viewport, _flow$viewport$x, x, _flow$viewport$y, y, _flow$viewport$zoom, zoom;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                flow = JSON.parse(localStorage.getItem(flowKey));\n\n                if (flow) {\n                  _flow$viewport = flow.viewport, _flow$viewport$x = _flow$viewport.x, x = _flow$viewport$x === void 0 ? 0 : _flow$viewport$x, _flow$viewport$y = _flow$viewport.y, y = _flow$viewport$y === void 0 ? 0 : _flow$viewport$y, _flow$viewport$zoom = _flow$viewport.zoom, zoom = _flow$viewport$zoom === void 0 ? 1 : _flow$viewport$zoom;\n                  setNodes(flow.nodes || []);\n                  setEdges(flow.edges || []);\n                  setViewport({\n                    x: x,\n                    y: y,\n                    zoom: zoom\n                  });\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function restoreFlow() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    restoreFlow();\n  }, [setNodes, setViewport]);\n  var onAdd = useCallback(function () {\n    var newNode = {\n      id: getNodeId(),\n      data: {\n        label: 'Added node'\n      },\n      position: {\n        x: Math.random() * window.innerWidth - 100,\n        y: Math.random() * window.innerHeight\n      }\n    };\n    setNodes(function (nds) {\n      return nds.concat(newNode);\n    });\n  }, [setNodes]);\n  return React.createElement(ReactFlow, {\n    nodes: nodes,\n    edges: edges,\n    onNodesChange: onNodesChange,\n    onEdgesChange: onEdgesChange,\n    onConnect: onConnect,\n    onInit: setRfInstance,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"save__controls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: onSave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"save\"), React.createElement(\"button\", {\n    onClick: onRestore,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"restore\"), React.createElement(\"button\", {\n    onClick: onAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"add node\")));\n};\n\nexport default (function () {\n  return React.createElement(ReactFlowProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(SaveRestore, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["F:\\documents\\bl-device-manage-test\\src\\layouts\\FlowManage\\index.js"],"names":["React","useState","useCallback","ReactFlow","ReactFlowProvider","useNodesState","useEdgesState","addEdge","useReactFlow","flowKey","getNodeId","Date","initialNodes","id","data","label","position","x","y","initialEdges","source","target","SaveRestore","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","rfInstance","setRfInstance","setViewport","onConnect","params","eds","onSave","flow","toObject","localStorage","setItem","JSON","stringify","onRestore","restoreFlow","parse","getItem","viewport","zoom","onAdd","newNode","Math","random","window","innerWidth","innerHeight","nds","concat"],"mappings":"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","sourcesContent":["/*\r\n * @Author: your name\r\n * @Date: 2022-04-11 14:41:23\r\n * @LastEditTime: 2022-04-11 14:41:24\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n * @FilePath: \\bl-device-manage-test\\src\\layouts\\FlowManage\\index.js\r\n */\r\nimport React, { useState, useCallback } from 'react';\r\nimport ReactFlow, {\r\n  ReactFlowProvider,\r\n  useNodesState,\r\n  useEdgesState,\r\n  addEdge,\r\n  useReactFlow,\r\n} from 'react-flow-renderer';\r\n\r\nimport './index.css';\r\n\r\nconst flowKey = 'example-flow';\r\n\r\nconst getNodeId = () => `randomnode_${+new Date()}`;\r\n\r\nconst initialNodes = [\r\n  { id: '1', data: { label: 'Node 1' }, position: { x: 100, y: 100 } },\r\n  { id: '2', data: { label: 'Node 2' }, position: { x: 100, y: 200 } },\r\n];\r\n\r\nconst initialEdges = [{ id: 'e1-2', source: '1', target: '2' }];\r\n\r\nconst SaveRestore = () => {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\r\n  const [rfInstance, setRfInstance] = useState(null);\r\n  const { setViewport } = useReactFlow();\r\n\r\n  const onConnect = useCallback((params) => setEdges((eds) => addEdge(params, eds)), [setEdges]);\r\n  const onSave = useCallback(() => {\r\n    if (rfInstance) {\r\n      const flow = rfInstance.toObject();\r\n      localStorage.setItem(flowKey, JSON.stringify(flow));\r\n    }\r\n  }, [rfInstance]);\r\n\r\n  const onRestore = useCallback(() => {\r\n    const restoreFlow = async () => {\r\n      const flow = JSON.parse(localStorage.getItem(flowKey));\r\n\r\n      if (flow) {\r\n        const { x = 0, y = 0, zoom = 1 } = flow.viewport;\r\n        setNodes(flow.nodes || []);\r\n        setEdges(flow.edges || []);\r\n        setViewport({ x, y, zoom });\r\n      }\r\n    };\r\n\r\n    restoreFlow();\r\n  }, [setNodes, setViewport]);\r\n\r\n  const onAdd = useCallback(() => {\r\n    const newNode = {\r\n      id: getNodeId(),\r\n      data: { label: 'Added node' },\r\n      position: {\r\n        x: Math.random() * window.innerWidth - 100,\r\n        y: Math.random() * window.innerHeight,\r\n      },\r\n    };\r\n    setNodes((nds) => nds.concat(newNode));\r\n  }, [setNodes]);\r\n\r\n  return (\r\n    <ReactFlow\r\n      nodes={nodes}\r\n      edges={edges}\r\n      onNodesChange={onNodesChange}\r\n      onEdgesChange={onEdgesChange}\r\n      onConnect={onConnect}\r\n      onInit={setRfInstance}\r\n    >\r\n      <div className=\"save__controls\">\r\n        <button onClick={onSave}>save</button>\r\n        <button onClick={onRestore}>restore</button>\r\n        <button onClick={onAdd}>add node</button>\r\n      </div>\r\n    </ReactFlow>\r\n  );\r\n};\r\n\r\nexport default () => (\r\n  <ReactFlowProvider>\r\n    <SaveRestore />\r\n  </ReactFlowProvider>\r\n);\r\n"]},"metadata":{},"sourceType":"module"}