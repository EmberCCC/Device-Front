{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport _classCallCheck from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"F:\\\\documents\\\\bl-device-manage\\\\src\\\\layouts\\\\WorkManage\\\\cell\\\\SearchBar.js\";\n\nimport React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { Form } from '@ant-design/compatible';\nimport '@ant-design/compatible/assets/index.css';\nimport { workStatus } from 'constants/status_constant';\nimport { withRouter } from 'react-router-dom';\nimport { initSearchQuery } from 'utils/dataTools';\nvar Option = _Select.Option;\nvar formItemLayout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 12\n  }\n};\nvar SearchBar = (_dec = inject('WorkStore', 'DeviceDefineStore'), withRouter(_class = _dec(_class = observer(_class = (_temp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchBar, _Component);\n\n  function SearchBar(props) {\n    var _this;\n\n    _classCallCheck(this, SearchBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchBar).call(this, props));\n\n    _this.handleSearch = function () {\n      var query = {},\n          workNo = '';\n\n      if (_this.props.location.search) {\n        query = initSearchQuery(_this.props.location.search);\n      }\n\n      if (_this.props.form.getFieldValue('workNo')) {\n        workNo = _this.props.form.getFieldValue('workNo');\n      }\n\n      _this.props.history.push({\n        search: query.tab ? '?tab=' + query.tab + '&workNo=' + workNo : ''\n      });\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          _this.store.searchCondition = values;\n\n          _this.store.getWork({});\n        }\n      });\n    };\n\n    _this.handleReset = function () {\n      _this.props.form.setFieldsValue({\n        workCode: undefined,\n        typeId: undefined,\n        customerId: undefined,\n        workStatus: undefined,\n        level: undefined,\n        workType: undefined\n      });\n    };\n\n    _this.onSelectType = function (value) {\n      _this.props.DeviceDefineStore.getSelectModel({\n        typeId: value\n      });\n    };\n\n    _this.store = _this.props.WorkStore;\n    _this.state = {\n      visible: false,\n      status: false,\n      tags: []\n    };\n    return _this;\n  }\n\n  _createClass(SearchBar, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var _this$props$DeviceDef = this.props.DeviceDefineStore,\n          selectType = _this$props$DeviceDef.selectType,\n          customerList = _this$props$DeviceDef.customerList;\n      var searchCondition = this.store.searchCondition;\n      return React.createElement(\"div\", {\n        className: \"list_search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(_Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(_Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Form.Item, Object.assign({\n        label: \"\\u5DE5\\u5355\\u7F16\\u53F7\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), getFieldDecorator('workNo', {\n        initialValue: searchCondition.workNo\n      })(React.createElement(_Input, {\n        style: {\n          width: 230\n        },\n        allowClear: true,\n        placeholder: \"\\u8F93\\u5165\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })))), React.createElement(_Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Form.Item, Object.assign({\n        label: \"\\u5DE5\\u5355\\u72B6\\u6001\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), getFieldDecorator('workStatus')(React.createElement(_Select, {\n        style: {\n          width: 230\n        },\n        allowClear: true,\n        placeholder: \"\\u8BF7\\u9009\\u62E9\\u5DE5\\u5355\\u72B6\\u6001\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, Object.keys(workStatus).map(function (item) {\n        return React.createElement(Option, {\n          key: item,\n          value: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, workStatus[item]);\n      })))))), React.createElement(_Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(_Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Form.Item, Object.assign({\n        label: \"\\u5DE5\\u5355\\u7C7B\\u578B\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), getFieldDecorator('workType')(React.createElement(_Select, {\n        style: {\n          width: 230\n        },\n        allowClear: true,\n        placeholder: \"\\u8BF7\\u9009\\u62E9\\u5DE5\\u5355\\u7C7B\\u578B\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"\\u4FDD\\u517B\"), React.createElement(Option, {\n        value: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"\\u6545\\u969C\"))))), React.createElement(_Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Form.Item, Object.assign({\n        label: \"\\u5DE5\\u5355\\u7B49\\u7EA7\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), getFieldDecorator('level')(React.createElement(_Select, {\n        style: {\n          width: 230\n        },\n        allowClear: true,\n        placeholder: \"\\u8BF7\\u9009\\u62E9\\u4EFB\\u52A1\\u7B49\\u7EA7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"\\u7D27\\u6025\"), React.createElement(Option, {\n        value: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"\\u9AD8\\u7EA7\"), React.createElement(Option, {\n        value: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"\\u4E00\\u822C\")))))), React.createElement(_Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(_Col, {\n        span: 24,\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        // size='small'\n        style: {\n          fontSize: '14px'\n        },\n        type: \"primary\",\n        onClick: this.handleSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"\\u67E5\\u8BE2\"), React.createElement(_Button, {\n        // size='small'\n        style: {\n          fontSize: '14px',\n          marginLeft: '20px'\n        },\n        onClick: this.handleReset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"\\u91CD\\u7F6E\")))));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.DeviceDefineStore.getSelectType({});\n      this.props.DeviceDefineStore.getCustomerList({\n        customerType: 1\n      });\n    }\n  }]);\n\n  return SearchBar;\n}(Component), _temp)) || _class) || _class) || _class);\nvar WrapperClass = Form.create({})(SearchBar);\nexport default WrapperClass;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage\\src\\layouts\\WorkManage\\cell\\SearchBar.js"],"names":["React","Component","inject","observer","Form","workStatus","withRouter","initSearchQuery","Option","formItemLayout","labelCol","span","wrapperCol","SearchBar","props","handleSearch","query","workNo","location","search","form","getFieldValue","history","push","tab","validateFieldsAndScroll","err","values","store","searchCondition","getWork","handleReset","setFieldsValue","workCode","undefined","typeId","customerId","level","workType","onSelectType","value","DeviceDefineStore","getSelectModel","WorkStore","state","visible","status","tags","getFieldDecorator","selectType","customerList","initialValue","width","Object","keys","map","item","textAlign","fontSize","marginLeft","getSelectType","getCustomerList","customerType","WrapperClass","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Form } from '@ant-design/compatible';\r\nimport '@ant-design/compatible/assets/index.css';\r\nimport { Input, Select, Row, Col, Button } from 'antd';\r\nimport { workStatus } from 'constants/status_constant'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { initSearchQuery } from 'utils/dataTools';\r\nconst { Option } = Select;\r\n\r\nconst formItemLayout = {\r\n\tlabelCol: { span: 6 },\r\n\twrapperCol: { span: 12 }\r\n};\r\n\r\n@withRouter\r\n@inject('WorkStore', 'DeviceDefineStore')\r\n@observer\r\nclass SearchBar extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.store = this.props.WorkStore;\r\n\t\tthis.state = {\r\n\t\t\tvisible: false,\r\n\t\t\tstatus: false,\r\n\t\t\ttags: []\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { getFieldDecorator } = this.props.form;\r\n\t\tconst { selectType, customerList, } = this.props.DeviceDefineStore;\r\n\t\tconst { searchCondition } = this.store;\r\n\t\treturn (\r\n\t\t\t<div className='list_search'>\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col span={12}>\r\n\t\t\t\t\t\t\t<Form.Item label='工单编号' {...formItemLayout}>\r\n\t\t\t\t\t\t\t\t{getFieldDecorator('workNo', {\r\n\t\t\t\t\t\t\t\t\tinitialValue: searchCondition.workNo\r\n\t\t\t\t\t\t\t\t})(\r\n\t\t\t\t\t\t\t\t\t<Input style={{ width: 230 }} allowClear placeholder='输入' />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t{/*<Col span={8}>\r\n\t\t\t\t\t\t\t<Form.Item label='设备类型' {...formItemLayout}>\r\n\t\t\t\t\t\t\t\t{getFieldDecorator('typeId')(\r\n\t\t\t\t\t\t\t\t\t<Select style={{ width: 230 }} allowClear onChange={this.onSelectType}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='请选择设备类型'\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp=\"children\"\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) =>\r\n\t\t\t\t\t\t\t\t\t\t\toption.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n\t\t\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t\t{selectType.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tselectType.map(item => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Option key={item.id} value={item.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.typeName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={8}>\r\n\t\t\t\t\t\t\t<Form.Item label='合作伙伴' {...formItemLayout}>\r\n\t\t\t\t\t\t\t\t{getFieldDecorator('customerId')(\r\n\t\t\t\t\t\t\t\t\t<Select style={{ width: 230 }} allowClear placeholder='请选择合作伙伴'\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp=\"children\"\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) =>\r\n\t\t\t\t\t\t\t\t\t\t\toption.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n\t\t\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t\t{customerList.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcustomerList.map(item => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Option key={item.id} value={item.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.customerName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t</Col>*/}\r\n\t\t\t\t\t\t<Col span={12}>\r\n\t\t\t\t\t\t\t<Form.Item label='工单状态' {...formItemLayout}>\r\n\t\t\t\t\t\t\t\t{getFieldDecorator('workStatus')(\r\n\t\t\t\t\t\t\t\t\t<Select style={{ width: 230 }} allowClear placeholder='请选择工单状态'>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tObject.keys(workStatus).map(item => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Option key={item} value={item}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{workStatus[item]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col span={12}>\r\n\t\t\t\t\t\t\t<Form.Item label='工单类型' {...formItemLayout}>\r\n\t\t\t\t\t\t\t\t{getFieldDecorator('workType')(\r\n\t\t\t\t\t\t\t\t\t<Select style={{ width: 230 }} allowClear placeholder='请选择工单类型'>\r\n\t\t\t\t\t\t\t\t\t\t<Option value={3}>保养</Option>\r\n\t\t\t\t\t\t\t\t\t\t<Option value={4}>故障</Option>\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={12}>\r\n\t\t\t\t\t\t\t<Form.Item label='工单等级' {...formItemLayout}>\r\n\t\t\t\t\t\t\t\t{getFieldDecorator('level')(\r\n\t\t\t\t\t\t\t\t\t<Select style={{ width: 230 }} allowClear placeholder='请选择任务等级'>\r\n\t\t\t\t\t\t\t\t\t\t<Option value={1}>紧急</Option>\r\n\t\t\t\t\t\t\t\t\t\t<Option value={2}>高级</Option>\r\n\t\t\t\t\t\t\t\t\t\t<Option value={3}>一般</Option>\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col span={24} style={{ textAlign: 'left' }}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t// size='small'\r\n\t\t\t\t\t\t\t\tstyle={{ fontSize: '14px' }}\r\n\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\tonClick={this.handleSearch}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t查询\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t// size='small'\r\n\t\t\t\t\t\t\t\tstyle={{ fontSize: '14px', marginLeft: '20px' }}\r\n\t\t\t\t\t\t\t\tonClick={this.handleReset}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t重置\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\thandleSearch = () => {\r\n\t\tlet query = {}, workNo = '';\r\n\t\tif (this.props.location.search) {\r\n\t\t\tquery = initSearchQuery(this.props.location.search)\r\n\t\t}\r\n\t\tif (this.props.form.getFieldValue('workNo')) {\r\n\t\t\tworkNo = this.props.form.getFieldValue('workNo')\r\n\t\t}\r\n\t\tthis.props.history.push({ search: query.tab ? '?tab=' + query.tab + '&workNo=' + workNo : '' });\r\n\t\tthis.props.form.validateFieldsAndScroll((err, values) => {\r\n\t\t\tif (!err) {\r\n\t\t\t\tthis.store.searchCondition = values;\r\n\t\t\t\tthis.store.getWork({});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\thandleReset = () => {\r\n\t\tthis.props.form.setFieldsValue({\r\n\t\t\tworkCode: undefined,\r\n\t\t\ttypeId: undefined,\r\n\t\t\tcustomerId: undefined,\r\n\t\t\tworkStatus: undefined,\r\n\t\t\tlevel: undefined,\r\n\t\t\tworkType: undefined\r\n\t\t});\r\n\t};\r\n\r\n\tonSelectType = value => {\r\n\t\tthis.props.DeviceDefineStore.getSelectModel({ typeId: value });\r\n\t};\r\n\tcomponentDidMount() {\r\n\t\tthis.props.DeviceDefineStore.getSelectType({});\r\n\t\tthis.props.DeviceDefineStore.getCustomerList({\r\n\t\t\tcustomerType: 1\r\n\t\t})\r\n\t}\r\n}\r\nconst WrapperClass = Form.create({})(SearchBar);\r\nexport default WrapperClass;\r\n"]},"metadata":{},"sourceType":"module"}