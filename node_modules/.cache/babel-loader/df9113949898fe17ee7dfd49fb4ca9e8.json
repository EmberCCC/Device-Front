{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/popconfirm/style\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _readOnlyError from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/readOnlyError\";\nimport _classCallCheck from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/input-number/style\";\nimport _InputNumber from \"antd/lib/input-number\";\nimport _objectWithoutProperties from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"F:\\\\documents\\\\bl-device-manage-test\\\\src\\\\components\\\\GlobalTabel\\\\index.js\";\n\n/*\r\n * @Author: your name\r\n * @Date: 2022-04-07 11:58:39\r\n * @LastEditTime: 2022-04-07 21:12:57\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n * @FilePath: \\bl-device-manage-test\\src\\components\\GlobalTabel\\index.js\r\n */\nimport React, { useState } from 'react';\nvar originData = [{\n  key: \"1\",\n  name: \"john\",\n  age: 32,\n  address: \"test\"\n}, {\n  key: \"2\",\n  name: \"ann\",\n  age: 32,\n  address: \"test2\"\n}];\n\nvar EditableCell = function EditableCell(_ref) {\n  var editing = _ref.editing,\n      dataIndex = _ref.dataIndex,\n      title = _ref.title,\n      inputType = _ref.inputType,\n      record = _ref.record,\n      index = _ref.index,\n      children = _ref.children,\n      restProps = _objectWithoutProperties(_ref, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n  var inputNode = inputType === 'number' ? React.createElement(_InputNumber, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }) : React.createElement(_Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  });\n  return React.createElement(\"td\", Object.assign({}, restProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), editing ? React.createElement(_Form.Item, {\n    name: dataIndex,\n    rules: [{\n      required: true,\n      message: \"Please Input \".concat(title, \"!\")\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, inputNode) : children);\n};\n\nvar GlobalTabel =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GlobalTabel, _React$Component);\n\n  function GlobalTabel() {\n    _classCallCheck(this, GlobalTabel);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GlobalTabel).apply(this, arguments));\n  }\n\n  _createClass(GlobalTabel, [{\n    key: \"render\",\n    value: function render() {\n      var _Form$useForm = _Form.useForm(),\n          _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n          form = _Form$useForm2[0];\n\n      var data = originData;\n      var editingKey = '';\n\n      var isEditing = function isEditing(record) {\n        return record.key === editingKey;\n      };\n\n      var edit = function edit(record) {\n        form.setFieldsValue(_objectSpread({\n          name: '',\n          age: '',\n          address: ''\n        }, record));\n        editingKey = (_readOnlyError(\"editingKey\"), record.key);\n      };\n\n      var cancel = function cancel() {\n        setEditingKey('');\n      };\n\n      var save =\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(key) {\n          var row, newData, index, item;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  _context.next = 3;\n                  return form.validateFields();\n\n                case 3:\n                  row = _context.sent;\n                  newData = [].concat(data);\n                  index = newData.findIndex(function (item) {\n                    return key === item.key;\n                  });\n\n                  if (index > -1) {\n                    item = newData[index];\n                    newData.splice(index, 1, _objectSpread({}, item, row));\n                    setData(newData);\n                    console.log(newData[index]); //修改的数据\n\n                    setEditingKey('');\n                  } else {\n                    newData.push(row);\n                    setData(newData);\n                    setEditingKey('');\n                  }\n\n                  _context.next = 12;\n                  break;\n\n                case 9:\n                  _context.prev = 9;\n                  _context.t0 = _context[\"catch\"](0);\n                  console.log('Validate Failed:', _context.t0);\n\n                case 12:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[0, 9]]);\n        }));\n\n        return function save(_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n\n      var columns = [{\n        title: 'name',\n        dataIndex: 'name',\n        editable: true\n      }, {\n        title: 'age',\n        dataIndex: 'age',\n        editable: true\n      }, {\n        title: 'address',\n        dataIndex: 'address',\n        editable: true\n      }, {\n        title: 'operation',\n        dataIndex: 'operation',\n        render: function render(_, record) {\n          var editable = isEditing(record);\n          return editable ? React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            onClick: function onClick() {\n              return save(record.key);\n            },\n            style: {\n              marginRight: 8\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, \"Save\"), React.createElement(_Popconfirm, {\n            title: \"Sure to cancel?\",\n            onConfirm: cancel,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }, \"Cancel\"))) : React.createElement(\"a\", {\n            disabled: editingKey !== '',\n            onClick: function onClick() {\n              return edit(record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }, \"Edit\");\n        }\n      }];\n      var mergedColumns = columns.map(function (col) {\n        if (!col.editable) {\n          return col;\n        }\n\n        return _objectSpread({}, col, {\n          onCell: function onCell(record) {\n            return {\n              record: record,\n              inputType: col.dataIndex === 'age' ? 'number' : 'text',\n              dataIndex: col.dataIndex,\n              title: col.title,\n              editing: isEditing(record)\n            };\n          }\n        });\n      });\n      return React.createElement(_Form, {\n        form: form,\n        component: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(_Table, {\n        components: {\n          body: {\n            cell: EditableCell\n          }\n        },\n        bordered: true,\n        dataSource: data,\n        columns: mergedColumns,\n        rowClassName: \"editable-row\",\n        pagination: {\n          onChange: cancel\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return GlobalTabel;\n}(React.Component);\n\n;\nexport default GlobalTabel;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage-test\\src\\components\\GlobalTabel\\index.js"],"names":["React","useState","originData","key","name","age","address","EditableCell","editing","dataIndex","title","inputType","record","index","children","restProps","inputNode","required","message","GlobalTabel","useForm","form","data","editingKey","isEditing","edit","setFieldsValue","cancel","setEditingKey","save","validateFields","row","newData","findIndex","item","splice","setData","console","log","push","columns","editable","render","_","marginRight","mergedColumns","map","col","onCell","body","cell","onChange","Component"],"mappings":"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","sourcesContent":["/*\r\n * @Author: your name\r\n * @Date: 2022-04-07 11:58:39\r\n * @LastEditTime: 2022-04-07 21:12:57\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n * @FilePath: \\bl-device-manage-test\\src\\components\\GlobalTabel\\index.js\r\n */\r\nimport React, { useState } from 'react';\r\nimport { Table, Input, InputNumber, Popconfirm, Form, Typography } from 'antd';\r\n\r\nconst originData = [{\r\n  key: \"1\",\r\n  name: \"john\",\r\n  age: 32,\r\n  address: \"test\"\r\n}, {\r\n  key: \"2\",\r\n  name: \"ann\",\r\n  age: 32,\r\n  address: \"test2\"\r\n}];\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\nclass  GlobalTabel extends React.Component {\r\n  \r\n  render(){\r\n    const [form] = Form.useForm();\r\n    const data = originData\r\n    const editingKey = '';\r\n  \r\n    const isEditing = (record) => record.key === editingKey;\r\n    const edit = (record) => {\r\n      form.setFieldsValue({\r\n        name: '',\r\n        age: '',\r\n        address: '',\r\n        ...record,\r\n      });\r\n      editingKey = record.key;\r\n    };\r\n  \r\n    const cancel = () => {\r\n      setEditingKey('');\r\n    };\r\n  \r\n    const save = async (key) => {\r\n      try {\r\n        const row = await form.validateFields();\r\n        const newData = [...data];\r\n        const index = newData.findIndex((item) => key === item.key);\r\n        if (index > -1) {\r\n          const item = newData[index];\r\n          newData.splice(index, 1, { ...item, ...row });\r\n          setData(newData);\r\n          console.log(newData[index]); //修改的数据\r\n          setEditingKey('');\r\n        } else {\r\n          newData.push(row);\r\n          setData(newData);\r\n          setEditingKey('');\r\n        }\r\n      } catch (errInfo) {\r\n        console.log('Validate Failed:', errInfo);\r\n      }\r\n    };\r\n  \r\n    const columns = [\r\n      {\r\n        title: 'name',\r\n        dataIndex: 'name',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: 'age',\r\n        dataIndex: 'age',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: 'address',\r\n        dataIndex: 'address',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: 'operation',\r\n        dataIndex: 'operation',\r\n        render: (_, record) => {\r\n          const editable = isEditing(record);\r\n          return editable ? (\r\n            <span>\r\n              <a\r\n                onClick={() => save(record.key)}\r\n                style={{\r\n                  marginRight: 8,\r\n                }}\r\n              >\r\n                Save\r\n              </a>\r\n              <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n                <a>Cancel</a>\r\n              </Popconfirm>\r\n            </span>\r\n          ) : (\r\n            <a disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n              Edit\r\n            </a>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n    const mergedColumns = columns.map((col) => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n  \r\n      return {\r\n        ...col,\r\n        onCell: (record) => ({\r\n          record,\r\n          inputType: col.dataIndex === 'age' ? 'number' : 'text',\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          editing: isEditing(record),\r\n        }),\r\n      };\r\n    });\r\n    return (\r\n      <Form form={form} component={false}>\r\n        <Table\r\n          components={{\r\n            body: {\r\n              cell: EditableCell,\r\n            },\r\n          }}\r\n          bordered\r\n          dataSource={data}\r\n          columns={mergedColumns}\r\n          rowClassName=\"editable-row\"\r\n          pagination={{\r\n            onChange: cancel,\r\n          }}\r\n        />\r\n      </Form>\r\n    );\r\n  }\r\n  \r\n\r\n\r\n};\r\n\r\nexport default GlobalTabel\r\n\r\n"]},"metadata":{},"sourceType":"module"}