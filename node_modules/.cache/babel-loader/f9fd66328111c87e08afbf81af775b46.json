{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/popconfirm/style\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nimport \"antd/lib/typography/style\";\nimport _Typography from \"antd/lib/typography\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _slicedToArray from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/input-number/style\";\nimport _InputNumber from \"antd/lib/input-number\";\nimport _objectWithoutProperties from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"F:\\\\documents\\\\bl-device-manage-test\\\\src\\\\components\\\\GlobalTabel\\\\index.js\";\n\n/*\r\n * @Author: your name\r\n * @Date: 2022-04-07 11:58:39\r\n * @LastEditTime: 2022-04-07 20:13:04\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n * @FilePath: \\bl-device-manage-test\\src\\components\\GlobalTabel\\index.js\r\n */\nimport React, { useState } from 'react';\nvar originData = [{\n  key: \"1\",\n  name: \"john\",\n  age: 32,\n  address: \"test\"\n}, {\n  key: \"2\",\n  name: \"ann\",\n  age: 32,\n  address: \"test2\"\n}];\n\nvar EditableCell = function EditableCell(_ref) {\n  var editing = _ref.editing,\n      dataIndex = _ref.dataIndex,\n      title = _ref.title,\n      inputType = _ref.inputType,\n      record = _ref.record,\n      index = _ref.index,\n      children = _ref.children,\n      restProps = _objectWithoutProperties(_ref, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n  var inputNode = inputType === 'number' ? React.createElement(_InputNumber, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }) : React.createElement(_Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  });\n  return React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  });\n};\n\nvar GlobalTabel = function GlobalTabel() {\n  var _Form$useForm = _Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _useState = useState(originData),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      editingKey = _useState4[0],\n      setEditingKey = _useState4[1];\n\n  var isEditing = function isEditing(record) {\n    return record.key === editingKey;\n  };\n\n  var edit = function edit(record) {\n    form.setFieldsValue(_objectSpread({\n      name: '',\n      age: '',\n      address: ''\n    }, record));\n    setEditingKey(record.key);\n  };\n\n  var cancel = function cancel() {\n    setEditingKey('');\n  };\n\n  var save =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(key) {\n      var row, newData, index, item;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return form.validateFields();\n\n            case 3:\n              row = _context.sent;\n              newData = _toConsumableArray(data);\n              index = newData.findIndex(function (item) {\n                return key === item.key;\n              });\n\n              if (index > -1) {\n                item = newData[index];\n                newData.splice(index, 1, _objectSpread({}, item, row));\n                setData(newData);\n                setEditingKey('');\n              } else {\n                newData.push(row);\n                setData(newData);\n                setEditingKey('');\n              }\n\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.log('Validate Failed:', _context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9]]);\n    }));\n\n    return function save(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var columns = [{\n    title: 'name',\n    dataIndex: 'name',\n    width: '25%',\n    editable: true\n  }, {\n    title: 'age',\n    dataIndex: 'age',\n    width: '15%',\n    editable: true\n  }, {\n    title: 'address',\n    dataIndex: 'address',\n    width: '40%',\n    editable: true\n  }, {\n    title: 'operation',\n    dataIndex: 'operation',\n    render: function render(_, record) {\n      var editable = isEditing(record);\n      return editable ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(_Typography.Link, {\n        onClick: function onClick() {\n          return save(record.key);\n        },\n        style: {\n          marginRight: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Save\"), React.createElement(_Popconfirm, {\n        title: \"Sure to cancel?\",\n        onConfirm: cancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Cancel\"))) : React.createElement(_Typography.Link, {\n        disabled: editingKey !== '',\n        onClick: function onClick() {\n          return edit(record);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Edit\");\n    }\n  }];\n  var mergedColumns = columns.map(function (col) {\n    if (!col.editable) {\n      return col;\n    }\n\n    return _objectSpread({}, col, {\n      onCell: function onCell(record) {\n        return {\n          record: record,\n          inputType: col.dataIndex === 'age' ? 'number' : 'text',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: isEditing(record)\n        };\n      }\n    });\n  });\n  return React.createElement(_Form, {\n    form: form,\n    component: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(_Table, {\n    components: {\n      body: {\n        cell: EditableCell\n      }\n    },\n    bordered: true,\n    dataSource: data,\n    columns: mergedColumns,\n    rowClassName: \"editable-row\",\n    pagination: {\n      onChange: cancel\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }));\n};\n\nexport default GlobalTabel;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage-test\\src\\components\\GlobalTabel\\index.js"],"names":["React","useState","originData","key","name","age","address","EditableCell","editing","dataIndex","title","inputType","record","index","children","restProps","inputNode","GlobalTabel","useForm","form","data","setData","editingKey","setEditingKey","isEditing","edit","setFieldsValue","cancel","save","validateFields","row","newData","findIndex","item","splice","push","console","log","columns","width","editable","render","_","marginRight","mergedColumns","map","col","onCell","body","cell","onChange"],"mappings":"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","sourcesContent":["/*\r\n * @Author: your name\r\n * @Date: 2022-04-07 11:58:39\r\n * @LastEditTime: 2022-04-07 20:13:04\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n * @FilePath: \\bl-device-manage-test\\src\\components\\GlobalTabel\\index.js\r\n */\r\nimport React, { useState } from 'react';\r\nimport { Table, Input, InputNumber, Popconfirm, Form, Typography } from 'antd';\r\n\r\nconst originData = [{\r\n  key: \"1\",\r\n  name: \"john\",\r\n  age: 32,\r\n  address: \"test\"\r\n}, {\r\n  key: \"2\",\r\n  name: \"ann\",\r\n  age: 32,\r\n  address: \"test2\"\r\n}];\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\r\n  return (\r\n    <td>\r\n      {/* {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )} */}\r\n    </td>\r\n  );\r\n};\r\nconst GlobalTabel = () => {\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = useState(originData);\r\n  const [editingKey, setEditingKey] = useState('');\r\n\r\n  const isEditing = (record) => record.key === editingKey;\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      name: '',\r\n      age: '',\r\n      address: '',\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey('');\r\n  };\r\n\r\n  const save = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setData(newData);\r\n        setEditingKey('');\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey('');\r\n      }\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'name',\r\n      dataIndex: 'name',\r\n      width: '25%',\r\n      editable: true,\r\n    },\r\n    {\r\n      title: 'age',\r\n      dataIndex: 'age',\r\n      width: '15%',\r\n      editable: true,\r\n    },\r\n    {\r\n      title: 'address',\r\n      dataIndex: 'address',\r\n      width: '40%',\r\n      editable: true,\r\n    },\r\n    {\r\n      title: 'operation',\r\n      dataIndex: 'operation',\r\n      render: (_, record) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n            <Typography.Link\r\n              onClick={() => save(record.key)}\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              Save\r\n            </Typography.Link>\r\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n              <a>Cancel</a>\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <Typography.Link disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n            Edit\r\n          </Typography.Link>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: col.dataIndex === 'age' ? 'number' : 'text',\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={data}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n\r\n};\r\n\r\nexport default GlobalTabel\r\n\r\n"]},"metadata":{},"sourceType":"module"}