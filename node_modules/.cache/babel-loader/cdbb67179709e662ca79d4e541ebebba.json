{"ast":null,"code":"\"use strict\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\"));\n\nvar classnames_1 = __importDefault(require(\"classnames\"));\n\nvar uiUtil_1 = require(\"../../utils/uiUtil\");\n\nvar PanelContext_1 = __importDefault(require(\"../../PanelContext\"));\n\nfunction TimeUnitColumn(props) {\n  var prefixCls = props.prefixCls,\n      units = props.units,\n      onSelect = props.onSelect,\n      value = props.value,\n      active = props.active,\n      hideDisabledOptions = props.hideDisabledOptions;\n  var cellPrefixCls = \"\".concat(prefixCls, \"-cell\");\n\n  var _React$useContext = React.useContext(PanelContext_1.default),\n      open = _React$useContext.open;\n\n  var ulRef = React.useRef(null);\n  var liRefs = React.useRef(new Map()); // `useLayoutEffect` here to avoid blink by duration is 0\n\n  React.useLayoutEffect(function () {\n    var li = liRefs.current.get(value);\n\n    if (li && open !== false) {\n      uiUtil_1.scrollTo(ulRef.current, li.offsetTop, 120);\n    }\n  }, [value]);\n  React.useLayoutEffect(function () {\n    if (open) {\n      var li = liRefs.current.get(value);\n\n      if (li) {\n        uiUtil_1.scrollTo(ulRef.current, li.offsetTop, 0);\n      }\n    }\n  }, [open]);\n  return React.createElement(\"ul\", {\n    className: classnames_1.default(\"\".concat(prefixCls, \"-column\"), _defineProperty({}, \"\".concat(prefixCls, \"-column-active\"), active)),\n    ref: ulRef,\n    style: {\n      position: 'relative'\n    }\n  }, units.map(function (unit) {\n    var _classnames_1$default2;\n\n    if (hideDisabledOptions && unit.disabled) {\n      return null;\n    }\n\n    return React.createElement(\"li\", {\n      key: unit.value,\n      ref: function ref(element) {\n        liRefs.current.set(unit.value, element);\n      },\n      className: classnames_1.default(cellPrefixCls, (_classnames_1$default2 = {}, _defineProperty(_classnames_1$default2, \"\".concat(cellPrefixCls, \"-disabled\"), unit.disabled), _defineProperty(_classnames_1$default2, \"\".concat(cellPrefixCls, \"-selected\"), value === unit.value), _classnames_1$default2)),\n      onClick: function onClick() {\n        if (unit.disabled) {\n          return;\n        }\n\n        onSelect(unit.value);\n      }\n    }, React.createElement(\"div\", {\n      className: \"\".concat(cellPrefixCls, \"-inner\")\n    }, unit.label));\n  }));\n}\n\nexports.default = TimeUnitColumn;","map":null,"metadata":{},"sourceType":"script"}