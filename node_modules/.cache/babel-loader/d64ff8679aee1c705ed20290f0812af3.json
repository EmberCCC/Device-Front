{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport _objectSpread from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/input-number/style\";\nimport _InputNumber from \"antd/lib/input-number\";\nimport _classCallCheck from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\documents\\\\bl-device-manage-test\\\\src\\\\layouts\\\\TableEdit\\\\EditableTable\\\\index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from '@ant-design/compatible';\nvar EditableContext = React.createContext();\n\nvar EditableCell =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditableCell, _React$Component);\n\n  function EditableCell() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditableCell);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditableCell)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getInput = function () {\n      if (_this.props.inputType === 'number') {\n        return React.createElement(_InputNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(_Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      });\n    };\n\n    _this.renderCell = function (_ref) {\n      var getFieldDecorator = _ref.getFieldDecorator;\n\n      var _this$props = _this.props,\n          editing = _this$props.editing,\n          dataIndex = _this$props.dataIndex,\n          title = _this$props.title,\n          inputType = _this$props.inputType,\n          record = _this$props.record,\n          index = _this$props.index,\n          children = _this$props.children,\n          restProps = _objectWithoutProperties(_this$props, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n      return React.createElement(\"td\", Object.assign({}, restProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), editing ? React.createElement(Form.Item, {\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, getFieldDecorator(dataIndex, {\n        rules: [{\n          required: true,\n          message: \"\\u8BF7\\u8F93\\u5165 \".concat(title, \"!\")\n        }],\n        initialValue: record[dataIndex]\n      })(_this.getInput())) : children);\n    };\n\n    return _this;\n  }\n\n  _createClass(EditableCell, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(EditableContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.renderCell);\n    }\n  }]);\n\n  return EditableCell;\n}(React.Component);\n\nvar EditableTable =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(EditableTable, _React$Component2);\n\n  function EditableTable(props) {\n    var _this2;\n\n    _classCallCheck(this, EditableTable);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(EditableTable).call(this, props));\n\n    _this2.isEditing = function (record) {\n      return record.key == _this2.state.editingKey;\n    };\n\n    _this2.cancel = function () {\n      var columns = _this2.state.columns;\n      columns.pop();\n      columns.push({\n        title: '操作',\n        dataIndex: 'operation',\n        render: function render(text, record) {\n          var editingKey = _this2.state.editingKey;\n\n          var editable = _this2.isEditing(record);\n\n          return editable ? React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165\n            },\n            __self: this\n          }, React.createElement(EditableContext.Consumer, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166\n            },\n            __self: this\n          }, function (form) {\n            return React.createElement(\"a\", {\n              onClick: function onClick() {\n                return _this2.save(form, record.key);\n              },\n              style: {\n                marginRight: 15\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 168\n              },\n              __self: this\n            }, \"\\u4FDD\\u5B58\");\n          }), React.createElement(\"a\", {\n            onClick: function onClick() {\n              return _this2.cancel(record.key);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 176\n            },\n            __self: this\n          }, \"\\u53D6\\u6D88\")) : React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            disabled: editingKey !== '',\n            onClick: function onClick() {\n              return _this2.edit(record.key);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180\n            },\n            __self: this\n          }, \"\\u7F16\\u8F91\"), React.createElement(\"a\", {\n            style: {\n              marginLeft: 15,\n              color: '#FF3333'\n            },\n            onClick: function onClick() {\n              return _this2.delete(record.key);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181\n            },\n            __self: this\n          }, \"\\u5220\\u9664\"));\n        }\n      });\n\n      _this2.setState({\n        editingKey: ''\n      });\n    };\n\n    _this2.delete = function (key) {\n      var data = _toConsumableArray(_this2.state.data);\n\n      _this2.props.getDataSource(data.filter(function (item) {\n        return item.key !== key;\n      }));\n\n      _this2.setState({\n        data: data.filter(function (item) {\n          return item.key !== key;\n        }),\n        editingKey: ''\n      });\n    };\n\n    _this2.add = function () {\n      var _this2$state = _this2.state,\n          count = _this2$state.count,\n          data = _this2$state.data;\n      var newData = {\n        key: count,\n        label: \"\\u9009\\u9879 \".concat(count),\n        value: count\n      };\n\n      _this2.props.getDataSource([].concat(_toConsumableArray(data), [newData]));\n\n      _this2.setState({\n        data: [].concat(_toConsumableArray(data), [newData]),\n        count: count + 1\n      });\n    };\n\n    var options = _this2.props.options;\n    _this2.state = {\n      data: options,\n      editingKey: '',\n      count: options.length,\n      columns: [{\n        title: '显示值',\n        dataIndex: 'label',\n        width: '30%',\n        editable: true\n      }, {\n        title: '传递值',\n        dataIndex: 'value',\n        width: '30%',\n        editable: true\n      }, {\n        title: '操作',\n        dataIndex: 'operation',\n        render: function render(text, record) {\n          var editingKey = _this2.state.editingKey;\n\n          var editable = _this2.isEditing(record);\n\n          return editable ? React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, React.createElement(EditableContext.Consumer, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, function (form) {\n            return React.createElement(\"a\", {\n              onClick: function onClick() {\n                return _this2.save(form, record.key);\n              },\n              style: {\n                marginRight: 15\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 81\n              },\n              __self: this\n            }, \"\\u4FDD\\u5B58\");\n          }), React.createElement(\"a\", {\n            onClick: function onClick() {\n              return _this2.cancel(record.key);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, \"\\u53D6\\u6D88\")) : React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            disabled: editingKey !== '',\n            onClick: function onClick() {\n              return _this2.edit(record.key);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, \"\\u7F16\\u8F91\"), React.createElement(\"a\", {\n            style: {\n              marginLeft: 15,\n              color: '#FF3333'\n            },\n            onClick: function onClick() {\n              return _this2.delete(record.key);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, \"\\u5220\\u9664\"));\n        }\n      }]\n    }; // this.columns = [\n    //   {\n    //     title: '显示值',\n    //     dataIndex: 'label',\n    //     width: '30%',\n    //     editable: true,\n    //   },\n    //   {\n    //     title: '传递值',\n    //     dataIndex: 'value',\n    //     width: '30%',\n    //     editable: true,\n    //   },\n    //   {\n    //     title: '操作',\n    //     dataIndex: 'operation',\n    //     render: (text, record) => {\n    //       const { editingKey } = this.state;\n    //       const editable = this.isEditing(record);\n    //       return editable ? (\n    //         <span>\n    //           <EditableContext.Consumer>\n    //             {form => (\n    //               <a\n    //                 onClick={() => this.save(form, record.key)}\n    //                 style={{ marginRight: 15 }}\n    //               >\n    //                 保存\n    //               </a>\n    //             )}\n    //           </EditableContext.Consumer>\n    //           <a onClick={() => this.cancel(record.key)}>取消</a>\n    //         </span>\n    //       ) : (\n    //         <span>\n    //           <a disabled={editingKey !== ''} onClick={() => this.edit(record.key)}>编辑</a>\n    //           <a style={{ marginLeft: 15, color: '#FF3333' }} onClick={() => this.delete(record.key)}>删除</a>\n    //         </span>\n    //       );\n    //     },\n    //   },\n    // ];\n\n    return _this2;\n  }\n\n  _createClass(EditableTable, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(_ref2) {\n      var curItemKey = _ref2.curItemKey;\n\n      if (curItemKey !== this.props.curItemKey) {\n        this.setState({\n          data: this.props.options\n        });\n      }\n    }\n  }, {\n    key: \"save\",\n    value: function save(form, key) {\n      var _this3 = this;\n\n      form.validateFields(function (error, row) {\n        if (error) {\n          return;\n        }\n\n        var newData = _toConsumableArray(_this3.state.data);\n\n        var index = newData.findIndex(function (item) {\n          return key === item.key;\n        });\n\n        if (index > -1) {\n          var item = newData[index];\n          newData.splice(index, 1, _objectSpread({}, item, row));\n        } else {\n          newData.push(row);\n        }\n\n        _this3.props.getDataSource(newData);\n\n        _this3.setState({\n          data: newData,\n          editingKey: ''\n        });\n      });\n    }\n  }, {\n    key: \"edit\",\n    value: function edit(key) {\n      var _this4 = this;\n\n      var columns = this.state.columns;\n      columns.push({\n        title: '操作',\n        dataIndex: 'operation',\n        render: function render(text, record) {\n          var editingKey = _this4.state.editingKey;\n\n          var editable = _this4.isEditing(record);\n\n          return editable ? React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 219\n            },\n            __self: this\n          }, React.createElement(EditableContext.Consumer, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220\n            },\n            __self: this\n          }, function (form) {\n            return React.createElement(\"a\", {\n              onClick: function onClick() {\n                return _this4.save(form, record.key);\n              },\n              style: {\n                marginRight: 15\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 222\n              },\n              __self: this\n            }, \"\\u4FDD\\u5B58\");\n          }), React.createElement(\"a\", {\n            onClick: function onClick() {\n              return _this4.cancel(record.key);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230\n            },\n            __self: this\n          }, \"\\u53D6\\u6D88\")) : React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 233\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            disabled: editingKey !== '',\n            onClick: function onClick() {\n              return _this4.edit(record.key);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 234\n            },\n            __self: this\n          }, \"\\u7F16\\u8F91\"), React.createElement(\"a\", {\n            style: {\n              marginLeft: 15,\n              color: '#FF3333'\n            },\n            onClick: function onClick() {\n              return _this4.delete(record.key);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 235\n            },\n            __self: this\n          }, \"\\u5220\\u9664\"));\n        }\n      });\n      this.setState({\n        editingKey: key,\n        columns: columns\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var components = {\n        body: {\n          cell: EditableCell\n        }\n      };\n      var columns = this.state.columns.map(function (col) {\n        if (!col.editable) {\n          return col;\n        }\n\n        return _objectSpread({}, col, {\n          onCell: function onCell(record) {\n            return {\n              record: record,\n              inputType: 'text',\n              dataIndex: col.dataIndex,\n              title: col.title,\n              editing: _this5.isEditing(record)\n            };\n          }\n        });\n      });\n      return React.createElement(EditableContext.Provider, {\n        value: this.props.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        disabled: this.props.disabled,\n        onClick: this.add,\n        type: \"primary\",\n        style: {\n          marginBottom: 16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \"\\u6DFB\\u52A0\\u9009\\u9879\"), React.createElement(_Table, {\n        components: components,\n        bordered: true,\n        dataSource: this.state.data,\n        columns: columns,\n        rowClassName: \"editable-row\",\n        pagination: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EditableTable;\n}(React.Component);\n\nvar EditableFormTable = Form.create()(EditableTable);\nEditableCell.propTypes = {\n  editing: PropTypes.bool,\n  dataIndex: PropTypes.string,\n  title: PropTypes.string,\n  inputType: PropTypes.string,\n  record: PropTypes.object,\n  index: PropTypes.string,\n  children: PropTypes.array.isRequired,\n  restProps: PropTypes.object\n};\nEditableTable.propTypes = {\n  form: PropTypes.object.isRequired,\n  getDataSource: PropTypes.func.isRequired,\n  curItemKey: PropTypes.string.isRequired,\n  options: PropTypes.array,\n  disabled: PropTypes.bool.isRequired\n};\nexport default EditableFormTable;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage-test\\src\\layouts\\TableEdit\\EditableTable\\index.js"],"names":["React","PropTypes","Form","EditableContext","createContext","EditableCell","getInput","props","inputType","renderCell","getFieldDecorator","editing","dataIndex","title","record","index","children","restProps","margin","rules","required","message","initialValue","Component","EditableTable","isEditing","key","state","editingKey","cancel","columns","pop","push","render","text","editable","form","save","marginRight","edit","marginLeft","color","delete","setState","data","getDataSource","filter","item","add","count","newData","label","value","options","length","width","curItemKey","validateFields","error","row","findIndex","splice","components","body","cell","map","col","onCell","disabled","marginBottom","EditableFormTable","create","propTypes","bool","string","object","array","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form } from '@ant-design/compatible';\r\nimport { Table, Input, InputNumber, Button } from 'antd';\r\n\r\nconst EditableContext = React.createContext();\r\n\r\nclass EditableCell extends React.Component {\r\n  getInput = () => {\r\n    if (this.props.inputType === 'number') {\r\n      return <InputNumber />;\r\n    }\r\n    return <Input />;\r\n  };\r\n\r\n  renderCell = ({ getFieldDecorator }) => {\r\n    const {\r\n      editing,\r\n      dataIndex,\r\n      title,\r\n      inputType,\r\n      record,\r\n      index,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <td {...restProps}>\r\n        {editing ? (\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(dataIndex, {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `请输入 ${title}!`,\r\n                },\r\n              ],\r\n              initialValue: record[dataIndex],\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        ) : (\r\n          children\r\n        )}\r\n      </td>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>;\r\n  }\r\n}\r\n\r\nclass EditableTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { options } = this.props;\r\n    this.state = {\r\n      data: options, editingKey: '', count: options.length, columns: [\r\n        {\r\n          title: '显示值',\r\n          dataIndex: 'label',\r\n          width: '30%',\r\n          editable: true,\r\n        },\r\n        {\r\n          title: '传递值',\r\n          dataIndex: 'value',\r\n          width: '30%',\r\n          editable: true,\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'operation',\r\n          render: (text, record) => {\r\n            const { editingKey } = this.state;\r\n            const editable = this.isEditing(record);\r\n            return editable ? (\r\n              <span>\r\n                <EditableContext.Consumer>\r\n                  {form => (\r\n                    <a\r\n                      onClick={() => this.save(form, record.key)}\r\n                      style={{ marginRight: 15 }}\r\n                    >\r\n                      保存\r\n                    </a>\r\n                  )}\r\n                </EditableContext.Consumer>\r\n                <a onClick={() => this.cancel(record.key)}>取消</a>\r\n              </span>\r\n            ) : (\r\n              <span>\r\n                <a disabled={editingKey !== ''} onClick={() => this.edit(record.key)}>编辑</a>\r\n                <a style={{ marginLeft: 15, color: '#FF3333' }} onClick={() => this.delete(record.key)}>删除</a>\r\n              </span>\r\n            );\r\n          },\r\n        },\r\n      ]\r\n    };\r\n    // this.columns = [\r\n    //   {\r\n    //     title: '显示值',\r\n    //     dataIndex: 'label',\r\n    //     width: '30%',\r\n    //     editable: true,\r\n    //   },\r\n    //   {\r\n    //     title: '传递值',\r\n    //     dataIndex: 'value',\r\n    //     width: '30%',\r\n    //     editable: true,\r\n    //   },\r\n    //   {\r\n    //     title: '操作',\r\n    //     dataIndex: 'operation',\r\n    //     render: (text, record) => {\r\n    //       const { editingKey } = this.state;\r\n    //       const editable = this.isEditing(record);\r\n    //       return editable ? (\r\n    //         <span>\r\n    //           <EditableContext.Consumer>\r\n    //             {form => (\r\n    //               <a\r\n    //                 onClick={() => this.save(form, record.key)}\r\n    //                 style={{ marginRight: 15 }}\r\n    //               >\r\n    //                 保存\r\n    //               </a>\r\n    //             )}\r\n    //           </EditableContext.Consumer>\r\n    //           <a onClick={() => this.cancel(record.key)}>取消</a>\r\n    //         </span>\r\n    //       ) : (\r\n    //         <span>\r\n    //           <a disabled={editingKey !== ''} onClick={() => this.edit(record.key)}>编辑</a>\r\n    //           <a style={{ marginLeft: 15, color: '#FF3333' }} onClick={() => this.delete(record.key)}>删除</a>\r\n    //         </span>\r\n    //       );\r\n    //     },\r\n    //   },\r\n    // ];\r\n  }\r\n\r\n  componentDidUpdate({ curItemKey }) {\r\n    if (curItemKey !== this.props.curItemKey) {\r\n      this.setState({ data: this.props.options })\r\n    }\r\n  }\r\n\r\n  isEditing = record => {\r\n    return record.key == this.state.editingKey\r\n  };\r\n\r\n  cancel = () => {\r\n    let columns = this.state.columns\r\n    columns.pop()\r\n    columns.push({\r\n      title: '操作',\r\n      dataIndex: 'operation',\r\n      render: (text, record) => {\r\n        const { editingKey } = this.state;\r\n        const editable = this.isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n            <EditableContext.Consumer>\r\n              {form => (\r\n                <a\r\n                  onClick={() => this.save(form, record.key)}\r\n                  style={{ marginRight: 15 }}\r\n                >\r\n                  保存\r\n                </a>\r\n              )}\r\n            </EditableContext.Consumer>\r\n            <a onClick={() => this.cancel(record.key)}>取消</a>\r\n          </span>\r\n        ) : (\r\n          <span>\r\n            <a disabled={editingKey !== ''} onClick={() => this.edit(record.key)}>编辑</a>\r\n            <a style={{ marginLeft: 15, color: '#FF3333' }} onClick={() => this.delete(record.key)}>删除</a>\r\n          </span>\r\n        );\r\n      },\r\n    })\r\n    this.setState({ editingKey: '' });\r\n  };\r\n\r\n  save(form, key) {\r\n    form.validateFields((error, row) => {\r\n      if (error) {\r\n        return;\r\n      }\r\n      const newData = [...this.state.data];\r\n      const index = newData.findIndex(item => key === item.key);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...row,\r\n        });\r\n      } else {\r\n        newData.push(row);\r\n      }\r\n      this.props.getDataSource(newData)\r\n      this.setState({ data: newData, editingKey: '' });\r\n    });\r\n  }\r\n\r\n  edit(key) {\r\n    let columns = this.state.columns\r\n    columns.push({\r\n      title: '操作',\r\n      dataIndex: 'operation',\r\n      render: (text, record) => {\r\n        const { editingKey } = this.state;\r\n        const editable = this.isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n            <EditableContext.Consumer>\r\n              {form => (\r\n                <a\r\n                  onClick={() => this.save(form, record.key)}\r\n                  style={{ marginRight: 15 }}\r\n                >\r\n                  保存\r\n                </a>\r\n              )}\r\n            </EditableContext.Consumer>\r\n            <a onClick={() => this.cancel(record.key)}>取消</a>\r\n          </span>\r\n        ) : (\r\n          <span>\r\n            <a disabled={editingKey !== ''} onClick={() => this.edit(record.key)}>编辑</a>\r\n            <a style={{ marginLeft: 15, color: '#FF3333' }} onClick={() => this.delete(record.key)}>删除</a>\r\n          </span>\r\n        );\r\n      },\r\n    })\r\n    this.setState({ editingKey: key, columns: columns });\r\n  }\r\n\r\n  delete = key => {\r\n    const data = [...this.state.data];\r\n    this.props.getDataSource(data.filter(item => item.key !== key))\r\n    this.setState({ data: data.filter(item => item.key !== key), editingKey: '' });\r\n  };\r\n\r\n  add = () => {\r\n    const { count, data } = this.state;\r\n    const newData = {\r\n      key: count,\r\n      label: `选项 ${count}`,\r\n      value: count\r\n    };\r\n    this.props.getDataSource([...data, newData])\r\n    this.setState({\r\n      data: [...data, newData],\r\n      count: count + 1,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const components = {\r\n      body: {\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n    const columns = this.state.columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: record => ({\r\n          record,\r\n          inputType: 'text',\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          editing: this.isEditing(record),\r\n        }),\r\n      };\r\n    });\r\n\r\n    return (\r\n      <EditableContext.Provider value={this.props.form}>\r\n        <Button disabled={this.props.disabled} onClick={this.add} type=\"primary\" style={{ marginBottom: 16 }}>添加选项</Button>\r\n        <Table\r\n          components={components}\r\n          bordered\r\n          dataSource={this.state.data}\r\n          columns={columns}\r\n          rowClassName=\"editable-row\"\r\n          pagination={false}\r\n        />\r\n      </EditableContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst EditableFormTable = Form.create()(EditableTable);\r\n\r\nEditableCell.propTypes = {\r\n  editing: PropTypes.bool,\r\n  dataIndex: PropTypes.string,\r\n  title: PropTypes.string,\r\n  inputType: PropTypes.string,\r\n  record: PropTypes.object,\r\n  index: PropTypes.string,\r\n  children: PropTypes.array.isRequired,\r\n  restProps: PropTypes.object,\r\n}\r\n\r\nEditableTable.propTypes = {\r\n  form: PropTypes.object.isRequired,\r\n  getDataSource: PropTypes.func.isRequired,\r\n  curItemKey: PropTypes.string.isRequired,\r\n  options: PropTypes.array,\r\n  disabled: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default EditableFormTable"]},"metadata":{},"sourceType":"module"}