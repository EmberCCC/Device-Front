{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\")[\"default\"];\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _configProvider = require(\"../config-provider\");\n\nvar _useFlexGapSupport = _interopRequireDefault(require(\"../_util/hooks/useFlexGapSupport\"));\n\nvar _responsiveObserve = _interopRequireWildcard(require(\"../_util/responsiveObserve\"));\n\nvar _type = require(\"../_util/type\");\n\nvar _RowContext = _interopRequireDefault(require(\"./RowContext\"));\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar RowAligns = (0, _type.tuple)('top', 'middle', 'bottom', 'stretch');\nvar RowJustify = (0, _type.tuple)('start', 'end', 'center', 'space-around', 'space-between', 'space-evenly');\nvar Row = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _classNames;\n\n  var customizePrefixCls = props.prefixCls,\n      justify = props.justify,\n      align = props.align,\n      className = props.className,\n      style = props.style,\n      children = props.children,\n      _props$gutter = props.gutter,\n      gutter = _props$gutter === void 0 ? 0 : _props$gutter,\n      wrap = props.wrap,\n      others = __rest(props, [\"prefixCls\", \"justify\", \"align\", \"className\", \"style\", \"children\", \"gutter\", \"wrap\"]);\n\n  var _React$useContext = React.useContext(_configProvider.ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var _React$useState = React.useState({\n    xs: true,\n    sm: true,\n    md: true,\n    lg: true,\n    xl: true,\n    xxl: true\n  }),\n      _React$useState2 = (0, _slicedToArray2[\"default\"])(_React$useState, 2),\n      screens = _React$useState2[0],\n      setScreens = _React$useState2[1];\n\n  var supportFlexGap = (0, _useFlexGapSupport[\"default\"])();\n  var gutterRef = React.useRef(gutter); // ================================== Effect ==================================\n\n  React.useEffect(function () {\n    var token = _responsiveObserve[\"default\"].subscribe(function (screen) {\n      var currentGutter = gutterRef.current || 0;\n\n      if (!Array.isArray(currentGutter) && (0, _typeof2[\"default\"])(currentGutter) === 'object' || Array.isArray(currentGutter) && ((0, _typeof2[\"default\"])(currentGutter[0]) === 'object' || (0, _typeof2[\"default\"])(currentGutter[1]) === 'object')) {\n        setScreens(screen);\n      }\n    });\n\n    return function () {\n      return _responsiveObserve[\"default\"].unsubscribe(token);\n    };\n  }, []); // ================================== Render ==================================\n\n  var getGutter = function getGutter() {\n    var results = [undefined, undefined];\n    var normalizedGutter = Array.isArray(gutter) ? gutter : [gutter, undefined];\n    normalizedGutter.forEach(function (g, index) {\n      if ((0, _typeof2[\"default\"])(g) === 'object') {\n        for (var i = 0; i < _responsiveObserve.responsiveArray.length; i++) {\n          var breakpoint = _responsiveObserve.responsiveArray[i];\n\n          if (screens[breakpoint] && g[breakpoint] !== undefined) {\n            results[index] = g[breakpoint];\n            break;\n          }\n        }\n      } else {\n        results[index] = g;\n      }\n    });\n    return results;\n  };\n\n  var prefixCls = getPrefixCls('row', customizePrefixCls);\n  var gutters = getGutter();\n  var classes = (0, _classnames[\"default\"])(prefixCls, (_classNames = {}, (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-no-wrap\"), wrap === false), (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-\").concat(justify), justify), (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-\").concat(align), align), (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className); // Add gutter related style\n\n  var rowStyle = {};\n  var horizontalGutter = gutters[0] != null && gutters[0] > 0 ? gutters[0] / -2 : undefined;\n  var verticalGutter = gutters[1] != null && gutters[1] > 0 ? gutters[1] / -2 : undefined;\n\n  if (horizontalGutter) {\n    rowStyle.marginLeft = horizontalGutter;\n    rowStyle.marginRight = horizontalGutter;\n  }\n\n  if (supportFlexGap) {\n    // Set gap direct if flex gap support\n    var _gutters = (0, _slicedToArray2[\"default\"])(gutters, 2);\n\n    rowStyle.rowGap = _gutters[1];\n  } else if (verticalGutter) {\n    rowStyle.marginTop = verticalGutter;\n    rowStyle.marginBottom = verticalGutter;\n  } // \"gutters\" is a new array in each rendering phase, it'll make 'React.useMemo' effectless.\n  // So we deconstruct \"gutters\" variable here.\n\n\n  var _gutters2 = (0, _slicedToArray2[\"default\"])(gutters, 2),\n      gutterH = _gutters2[0],\n      gutterV = _gutters2[1];\n\n  var rowContext = React.useMemo(function () {\n    return {\n      gutter: [gutterH, gutterV],\n      wrap: wrap,\n      supportFlexGap: supportFlexGap\n    };\n  }, [gutterH, gutterV, wrap, supportFlexGap]);\n  return /*#__PURE__*/React.createElement(_RowContext[\"default\"].Provider, {\n    value: rowContext\n  }, /*#__PURE__*/React.createElement(\"div\", (0, _extends2[\"default\"])({}, others, {\n    className: classes,\n    style: (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, rowStyle), style),\n    ref: ref\n  }), children));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Row.displayName = 'Row';\n}\n\nvar _default = Row;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}