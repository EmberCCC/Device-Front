{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _addEventListener = require('rc-util/lib/Dom/addEventListener');\n\nvar _addEventListener2 = _interopRequireDefault(_addEventListener);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n\nfunction rgbaColor(r, g, b, a) {\n  return 'rgba(' + [r, g, b, a / 100].join(',') + ')';\n}\n\nvar Alpha = function (_React$Component) {\n  _inherits(Alpha, _React$Component);\n\n  function Alpha(props) {\n    _classCallCheck(this, Alpha);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n    _this.onMouseDown = function (e) {\n      var x = e.clientX;\n      var y = e.clientY;\n\n      _this.pointMoveTo({\n        x: x,\n        y: y\n      });\n\n      _this.dragListener = (0, _addEventListener2[\"default\"])(window, 'mousemove', _this.onDrag);\n      _this.dragUpListener = (0, _addEventListener2[\"default\"])(window, 'mouseup', _this.onDragEnd);\n    };\n\n    _this.onDrag = function (e) {\n      var x = e.clientX;\n      var y = e.clientY;\n\n      _this.pointMoveTo({\n        x: x,\n        y: y\n      });\n    };\n\n    _this.onDragEnd = function (e) {\n      var x = e.clientX;\n      var y = e.clientY;\n\n      _this.pointMoveTo({\n        x: x,\n        y: y\n      });\n\n      _this.removeListeners();\n    };\n\n    _this.getBackground = function () {\n      var _this$props$color = _this.props.color,\n          red = _this$props$color.red,\n          green = _this$props$color.green,\n          blue = _this$props$color.blue;\n      var opacityGradient = 'linear-gradient(to right, ' + rgbaColor(red, green, blue, 0) + ' , ' + rgbaColor(red, green, blue, 100) + ')'; // eslint-disable-line max-len\n\n      return opacityGradient;\n    };\n\n    _this.getPrefixCls = function () {\n      return _this.props.rootPrefixCls + '-alpha';\n    };\n\n    _this.pointMoveTo = function (coords) {\n      var rect = (0, _reactDom.findDOMNode)(_this).getBoundingClientRect();\n      var width = rect.width;\n      var left = coords.x - rect.left;\n      left = Math.max(0, left);\n      left = Math.min(left, width);\n      var alpha = Math.round(left / width * 100);\n\n      _this.props.onChange(alpha);\n    };\n\n    _this.removeListeners = function () {\n      if (_this.dragListener) {\n        _this.dragListener.remove();\n\n        _this.dragListener = null;\n      }\n\n      if (_this.dragUpListener) {\n        _this.dragUpListener.remove();\n\n        _this.dragUpListener = null;\n      }\n    };\n\n    return _this;\n  }\n\n  Alpha.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.removeListeners();\n  };\n\n  Alpha.prototype.render = function render() {\n    var prefixCls = this.getPrefixCls();\n    return _react2[\"default\"].createElement('div', {\n      className: prefixCls\n    }, _react2[\"default\"].createElement('div', {\n      ref: 'bg',\n      className: prefixCls + '-bg',\n      style: {\n        background: this.getBackground()\n      }\n    }), _react2[\"default\"].createElement('span', {\n      style: {\n        left: this.props.alpha + '%'\n      }\n    }), _react2[\"default\"].createElement('div', {\n      className: prefixCls + '-handler',\n      onMouseDown: this.onMouseDown\n    }));\n  };\n\n  return Alpha;\n}(_react2[\"default\"].Component);\n\nexports[\"default\"] = Alpha;\nAlpha.propTypes = {\n  color: _propTypes2[\"default\"].object,\n  onChange: _propTypes2[\"default\"].func,\n  rootPrefixCls: _propTypes2[\"default\"].string,\n  alpha: _propTypes2[\"default\"].number\n};\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}