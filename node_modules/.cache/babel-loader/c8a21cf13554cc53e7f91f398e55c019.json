{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\")[\"default\"];\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = useFrameState;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _raf = _interopRequireDefault(require(\"rc-util/lib/raf\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction useFrameState(defaultValue) {\n  var _React$useState = React.useState(defaultValue),\n      _React$useState2 = (0, _slicedToArray2[\"default\"])(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var frameRef = (0, React.useRef)(null);\n  var batchRef = (0, React.useRef)([]);\n  var destroyRef = (0, React.useRef)(false);\n  React.useEffect(function () {\n    destroyRef.current = false;\n    return function () {\n      destroyRef.current = true;\n\n      _raf[\"default\"].cancel(frameRef.current);\n\n      frameRef.current = null;\n    };\n  }, []);\n\n  function setFrameValue(updater) {\n    if (destroyRef.current) {\n      return;\n    }\n\n    if (frameRef.current === null) {\n      batchRef.current = [];\n      frameRef.current = (0, _raf[\"default\"])(function () {\n        frameRef.current = null;\n        setValue(function (prevValue) {\n          var current = prevValue;\n          batchRef.current.forEach(function (func) {\n            current = func(current);\n          });\n          return current;\n        });\n      });\n    }\n\n    batchRef.current.push(updater);\n  }\n\n  return [value, setFrameValue];\n}","map":null,"metadata":{},"sourceType":"script"}