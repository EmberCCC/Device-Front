{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _rcTrigger = require('rc-trigger');\n\nvar _rcTrigger2 = _interopRequireDefault(_rcTrigger);\n\nvar _Panel = require('./Panel');\n\nvar _Panel2 = _interopRequireDefault(_Panel);\n\nvar _placements = require('./placements');\n\nvar _placements2 = _interopRequireDefault(_placements);\n\nvar _color = require('./helpers/color');\n\nvar _color2 = _interopRequireDefault(_color);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n\nfunction refFn(field, component) {\n  this[field] = component;\n}\n\nfunction prevent(e) {\n  e.preventDefault();\n}\n\nvar ColorPicker = function (_React$Component) {\n  _inherits(ColorPicker, _React$Component);\n\n  function ColorPicker(props) {\n    _classCallCheck(this, ColorPicker);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n    var alpha = typeof props.alpha === 'undefined' ? props.defaultAlpha : Math.min(props.alpha, props.defaultAlpha);\n    _this.state = {\n      color: props.color || props.defaultColor,\n      alpha: alpha,\n      open: false\n    };\n    var events = ['onTriggerClick', 'onChange', 'onBlur', 'getPickerElement', 'getRootDOMNode', 'getTriggerDOMNode', 'onVisibleChange', 'onPanelMount', 'setOpen', 'open', 'close', 'focus'];\n    events.forEach(function (e) {\n      _this[e] = _this[e].bind(_this);\n    });\n    _this.saveTriggerRef = refFn.bind(_this, 'triggerInstance');\n    return _this;\n  }\n\n  ColorPicker.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (nextProps.color) {\n      this.setState({\n        color: nextProps.color\n      });\n    }\n\n    if (nextProps.alpha !== null && nextProps.alpha !== undefined) {\n      this.setState({\n        alpha: nextProps.alpha\n      });\n    }\n  };\n\n  ColorPicker.prototype.onTriggerClick = function onTriggerClick() {\n    this.setState({\n      open: !this.state.open\n    });\n  };\n\n  ColorPicker.prototype.onChange = function onChange(colors) {\n    var _this2 = this;\n\n    this.setState(_extends({}, colors), function () {\n      _this2.props.onChange(_this2.state);\n    });\n  };\n\n  ColorPicker.prototype.onBlur = function onBlur() {\n    this.setOpen(false);\n  };\n\n  ColorPicker.prototype.onVisibleChange = function onVisibleChange(open) {\n    this.setOpen(open);\n  };\n\n  ColorPicker.prototype.onPanelMount = function onPanelMount(panelDOMRef) {\n    if (this.state.open) {\n      setTimeout(function () {\n        panelDOMRef.focus();\n      }, 1);\n    }\n  };\n\n  ColorPicker.prototype.setOpen = function setOpen(open, callback) {\n    var _this3 = this;\n\n    if (this.state.open !== open) {\n      this.setState({\n        open: open\n      }, function () {\n        if (typeof callback === 'function') callback();\n        var _props = _this3.props,\n            onOpen = _props.onOpen,\n            onClose = _props.onClose;\n\n        if (_this3.state.open) {\n          onOpen(_this3.state);\n        } else {\n          onClose(_this3.state);\n        }\n      });\n    }\n  };\n\n  ColorPicker.prototype.getRootDOMNode = function getRootDOMNode() {\n    return (0, _reactDom.findDOMNode)(this);\n  };\n\n  ColorPicker.prototype.getTriggerDOMNode = function getTriggerDOMNode() {\n    return (0, _reactDom.findDOMNode)(this.triggerInstance);\n  };\n\n  ColorPicker.prototype.getPickerElement = function getPickerElement() {\n    // const state = this.state;\n    return _react2[\"default\"].createElement(_Panel2[\"default\"], {\n      onMount: this.onPanelMount,\n      defaultColor: this.state.color,\n      alpha: this.state.alpha,\n      enableAlpha: this.props.enableAlpha,\n      prefixCls: this.props.prefixCls + '-panel',\n      onChange: this.onChange,\n      onBlur: this.onBlur,\n      mode: this.props.mode,\n      className: this.props.className\n    });\n  };\n\n  ColorPicker.prototype.open = function open(callback) {\n    this.setOpen(true, callback);\n  };\n\n  ColorPicker.prototype.close = function close(callback) {\n    this.setOpen(false, callback);\n  };\n\n  ColorPicker.prototype.focus = function focus() {\n    if (!this.state.open) {\n      (0, _reactDom.findDOMNode)(this).focus();\n    }\n  };\n\n  ColorPicker.prototype.render = function render() {\n    var props = this.props;\n    var state = this.state;\n    var classes = [props.prefixCls + '-wrap', props.className];\n\n    if (state.open) {\n      classes.push(props.prefixCls + '-open');\n    }\n\n    var children = props.children;\n\n    var _RGB = _slicedToArray(new _color2[\"default\"](this.state.color).RGB, 3),\n        r = _RGB[0],\n        g = _RGB[1],\n        b = _RGB[2];\n\n    var RGBA = [r, g, b];\n    RGBA.push(this.state.alpha / 100);\n\n    if (children) {\n      children = _react2[\"default\"].cloneElement(children, {\n        ref: this.saveTriggerRef,\n        unselectable: 'unselectable',\n        style: {\n          backgroundColor: 'rgba(' + RGBA.join(',') + ')'\n        },\n        onClick: this.onTriggerClick,\n        onMouseDown: prevent\n      });\n    }\n\n    var prefixCls = props.prefixCls,\n        placement = props.placement,\n        style = props.style,\n        getCalendarContainer = props.getCalendarContainer,\n        align = props.align,\n        animation = props.animation,\n        disabled = props.disabled,\n        transitionName = props.transitionName;\n    return _react2[\"default\"].createElement('div', {\n      className: classes.join(' ')\n    }, _react2[\"default\"].createElement(_rcTrigger2[\"default\"], {\n      popup: this.getPickerElement(),\n      popupAlign: align,\n      builtinPlacements: _placements2[\"default\"],\n      popupPlacement: placement,\n      action: disabled ? [] : ['click'],\n      destroyPopupOnHide: true,\n      getPopupContainer: getCalendarContainer,\n      popupStyle: style,\n      popupAnimation: animation,\n      popupTransitionName: transitionName,\n      popupVisible: state.open,\n      onPopupVisibleChange: this.onVisibleChange,\n      prefixCls: prefixCls\n    }, children));\n  };\n\n  return ColorPicker;\n}(_react2[\"default\"].Component);\n\nexports[\"default\"] = ColorPicker;\nColorPicker.propTypes = {\n  defaultColor: _propTypes2[\"default\"].string,\n  defaultAlpha: _propTypes2[\"default\"].number,\n  // can custom\n  alpha: _propTypes2[\"default\"].number,\n  children: _propTypes2[\"default\"].node.isRequired,\n  className: _propTypes2[\"default\"].string,\n  color: _propTypes2[\"default\"].string,\n  enableAlpha: _propTypes2[\"default\"].bool,\n  mode: _propTypes2[\"default\"].oneOf(['RGB', 'HSL', 'HSB']),\n  onChange: _propTypes2[\"default\"].func,\n  onClose: _propTypes2[\"default\"].func,\n  onOpen: _propTypes2[\"default\"].func,\n  placement: _propTypes2[\"default\"].oneOf(['topLeft', 'topRight', 'bottomLeft', 'bottomRight']),\n  prefixCls: _propTypes2[\"default\"].string.isRequired,\n  style: _propTypes2[\"default\"].object\n};\nColorPicker.defaultProps = {\n  defaultColor: '#F00',\n  defaultAlpha: 100,\n  onChange: function onChange() {},\n  onOpen: function onOpen() {},\n  onClose: function onClose() {},\n  children: _react2[\"default\"].createElement('span', {\n    className: 'rc-color-picker-trigger'\n  }),\n  className: '',\n  enableAlpha: true,\n  placement: 'topLeft',\n  prefixCls: 'rc-color-picker',\n  style: {}\n};\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}