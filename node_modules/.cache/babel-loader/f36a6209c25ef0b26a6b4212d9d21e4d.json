{"ast":null,"code":"import _slicedToArray from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\documents\\\\bl-device-manage-test\\\\src\\\\layouts\\\\FlowManage\\\\index.jsx\";\nimport { useState } from 'react';\nimport ReactFlow from 'react-flow-renderer';\nvar initialNodes = [{\n  id: '1',\n  type: 'input',\n  data: {\n    label: 'Input Node'\n  },\n  position: {\n    x: 250,\n    y: 25\n  }\n}, {\n  id: '2',\n  // you can also pass a React component as a label\n  data: {\n    label: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Default Node\")\n  },\n  position: {\n    x: 100,\n    y: 125\n  }\n}, {\n  id: '3',\n  type: 'output',\n  data: {\n    label: 'Output Node'\n  },\n  position: {\n    x: 250,\n    y: 250\n  }\n}];\nvar initialEdges = [{\n  id: 'e1-2',\n  source: '1',\n  target: '2'\n}, {\n  id: 'e2-3',\n  source: '2',\n  target: '3',\n  animated: true\n}];\n\nfunction Flow() {\n  var _useState = useState(initialNodes),\n      _useState2 = _slicedToArray(_useState, 2),\n      nodes = _useState2[0],\n      setNodes = _useState2[1];\n\n  var _useState3 = useState(initialEdges),\n      _useState4 = _slicedToArray(_useState3, 2),\n      edges = _useState4[0],\n      setEdges = _useState4[1];\n\n  return React.createElement(ReactFlow, {\n    nodes: nodes,\n    edges: edges,\n    fitView: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  });\n}\n\nexport default Flow;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage-test\\src\\layouts\\FlowManage\\index.jsx"],"names":["useState","ReactFlow","initialNodes","id","type","data","label","position","x","y","initialEdges","source","target","animated","Flow","nodes","setNodes","edges","setEdges"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,IAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAHR;AAIEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,CAAC,EAAE,GAAL;AAAUC,IAAAA,CAAC,EAAE;AAAb;AAJZ,CADmB,EAQnB;AACEN,EAAAA,EAAE,EAAE,GADN;AAEE;AACAE,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAT,GAHR;AAIEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,CAAC,EAAE,GAAL;AAAUC,IAAAA,CAAC,EAAE;AAAb;AAJZ,CARmB,EAcnB;AACEN,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAHR;AAIEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,CAAC,EAAE,GAAL;AAAUC,IAAAA,CAAC,EAAE;AAAb;AAJZ,CAdmB,CAArB;AAsBA,IAAMC,YAAY,GAAG,CACnB;AAAEP,EAAAA,EAAE,EAAE,MAAN;AAAcQ,EAAAA,MAAM,EAAE,GAAtB;AAA2BC,EAAAA,MAAM,EAAE;AAAnC,CADmB,EAEnB;AAAET,EAAAA,EAAE,EAAE,MAAN;AAAcQ,EAAAA,MAAM,EAAE,GAAtB;AAA2BC,EAAAA,MAAM,EAAE,GAAnC;AAAwCC,EAAAA,QAAQ,EAAE;AAAlD,CAFmB,CAArB;;AAKA,SAASC,IAAT,GAAgB;AAAA,kBACYd,QAAQ,CAACE,YAAD,CADpB;AAAA;AAAA,MACPa,KADO;AAAA,MACAC,QADA;;AAAA,mBAEYhB,QAAQ,CAACU,YAAD,CAFpB;AAAA;AAAA,MAEPO,KAFO;AAAA,MAEAC,QAFA;;AAId,SAAO,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEH,KAAlB;AAAyB,IAAA,KAAK,EAAEE,KAAhC;AAAuC,IAAA,OAAO,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;;AAED,eAAeH,IAAf","sourcesContent":["import { useState } from 'react';\r\nimport ReactFlow from 'react-flow-renderer';\r\n\r\nconst initialNodes = [\r\n  {\r\n    id: '1',\r\n    type: 'input',\r\n    data: { label: 'Input Node' },\r\n    position: { x: 250, y: 25 },\r\n  },\r\n\r\n  {\r\n    id: '2',\r\n    // you can also pass a React component as a label\r\n    data: { label: <div>Default Node</div> },\r\n    position: { x: 100, y: 125 },\r\n  },\r\n  {\r\n    id: '3',\r\n    type: 'output',\r\n    data: { label: 'Output Node' },\r\n    position: { x: 250, y: 250 },\r\n  },\r\n];\r\n\r\nconst initialEdges = [\r\n  { id: 'e1-2', source: '1', target: '2' },\r\n  { id: 'e2-3', source: '2', target: '3', animated: true },\r\n];\r\n\r\nfunction Flow() {\r\n  const [nodes, setNodes] = useState(initialNodes);\r\n  const [edges, setEdges] = useState(initialEdges);\r\n\r\n  return <ReactFlow nodes={nodes} edges={edges} fitView />;\r\n}\r\n\r\nexport default Flow;\r\n"]},"metadata":{},"sourceType":"module"}