{"ast":null,"code":"import \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _classCallCheck from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\src\\\\layouts\\\\SystemManager\\\\RoleManager\\\\index.js\";\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport RoleTable from './RoleTable';\nimport RoleDialog from './RoleDialog';\nvar RoleManager = (_dec = inject('SystemStore'), _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_Component) {\n  _inherits(RoleManager, _Component);\n\n  var _super = _createSuper(RoleManager);\n\n  function RoleManager() {\n    var _this;\n\n    _classCallCheck(this, RoleManager);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.batchRemove = function () {\n      var _this$props$SystemSto = _this.props.SystemStore,\n          deleteRole = _this$props$SystemSto.deleteRole,\n          getData = _this$props$SystemSto.getData,\n          PageInfo = _this$props$SystemSto.PageInfo,\n          selectedRows = _this$props$SystemSto.selectedRows;\n\n      if (selectedRows.length === 0) {\n        _message.warning('请至少选择一条数据');\n\n        return;\n      }\n\n      _Modal.confirm({\n        title: '提示',\n        content: \"\\u662F\\u5426\\u786E\\u8BA4\\u5220\\u9664\\u8BE5\".concat(selectedRows.length, \"\\u6761\\u6570\\u636E\\uFF1F\"),\n        okText: '确认',\n        cancelText: '取消',\n        onOk: function onOk() {\n          var arr = [];\n\n          var _iterator = _createForOfIteratorHelper(selectedRows),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var item = _step.value;\n              arr.push(item.id);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          deleteRole(0, {\n            ids: arr\n          }).then(function (res) {\n            _message.success('删除成功');\n\n            getData(2, {\n              pageIndex: PageInfo.pageIndex,\n              pageSize: PageInfo.pageSize\n            });\n          });\n        }\n      });\n    };\n\n    _this.setRoleName = function (e) {\n      _this.props.SystemStore.roleName = e.target.value;\n    };\n\n    _this.search = function () {\n      var _this$props$SystemSto2 = _this.props.SystemStore,\n          getData = _this$props$SystemSto2.getData,\n          PageInfo = _this$props$SystemSto2.PageInfo,\n          roleName = _this$props$SystemSto2.roleName;\n      getData(2, {\n        pageIndex: PageInfo.pageIndex,\n        pageSize: PageInfo.pageSize,\n        roleName: roleName\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(RoleManager, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$SystemSto3 = this.props.SystemStore,\n          modalVisible = _this$props$SystemSto3.modalVisible,\n          modalChange = _this$props$SystemSto3.modalChange;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tab-content-bg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(_Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(_Input, {\n        allowClear: true,\n        style: {\n          width: 250\n        },\n        onChange: this.setRoleName,\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u89D2\\u8272\\u540D\\u79F0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(_Button, {\n        type: \"primary\",\n        style: {\n          marginLeft: 10\n        },\n        onClick: this.search,\n        className: \"btn-border-purple\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }\n      }, \"\\u67E5\\u8BE2\"), /*#__PURE__*/React.createElement(_Button, {\n        style: {\n          marginLeft: 10\n        },\n        onClick: function onClick(e) {\n          return modalChange(0);\n        },\n        className: \"add-btn\",\n        type: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"iconfont icon-add icon-spacing\",\n        style: {\n          fontSize: '12px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }\n      }), \"\\u65B0\\u589E\"), /*#__PURE__*/React.createElement(_Button, {\n        style: {\n          marginLeft: 10\n        },\n        onClick: this.batchRemove,\n        className: \"btn-border-gray\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }, \"\\u6279\\u91CF\\u5220\\u9664\")), /*#__PURE__*/React.createElement(RoleTable, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }), modalVisible && /*#__PURE__*/React.createElement(RoleDialog, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 30\n        }\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var getTreeData = this.props.SystemStore.getTreeData;\n      getTreeData();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.SystemStore.clearData();\n    }\n  }]);\n\n  return RoleManager;\n}(Component), _temp)) || _class) || _class);\nexport default RoleManager;","map":{"version":3,"sources":["C:/Users/Misaki/Desktop/kda/设备运维前端/bl-device-manage/src/layouts/SystemManager/RoleManager/index.js"],"names":["React","Component","inject","observer","RoleTable","RoleDialog","RoleManager","batchRemove","props","SystemStore","deleteRole","getData","PageInfo","selectedRows","length","warning","confirm","title","content","okText","cancelText","onOk","arr","item","push","id","ids","then","res","success","pageIndex","pageSize","setRoleName","e","roleName","target","value","search","modalVisible","modalChange","width","marginLeft","fontSize","getTreeData","clearData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { Button, Row, Input, Modal, message } from 'antd';\nimport RoleTable from './RoleTable';\nimport RoleDialog from './RoleDialog';\n\n@inject('SystemStore')\n@observer\nclass RoleManager extends Component {\n    render() {\n        const { modalVisible, modalChange } = this.props.SystemStore\n        return <div className=\"tab-content-bg\">\n            <Row>\n                <Input allowClear style={{ width: 250 }} onChange={this.setRoleName} placeholder='请输入角色名称'></Input>\n                <Button type='primary' style={{ marginLeft: 10 }} onClick={this.search} className='btn-border-purple'>查询</Button>\n                <Button style={{ marginLeft: 10 }} onClick={e => modalChange(0)} className='add-btn' type='primary'>\n                    <i className=\"iconfont icon-add icon-spacing\" style={{fontSize:'12px'}}></i>\n                    新增\n                </Button>\n                <Button style={{ marginLeft: 10 }} onClick={this.batchRemove} className=\"btn-border-gray\">批量删除</Button>\n            </Row>\n            <RoleTable />\n            {modalVisible && <RoleDialog />}\n        </div>;\n    }\n    batchRemove = () => {\n        const { deleteRole, getData, PageInfo, selectedRows } = this.props.SystemStore\n        if (selectedRows.length === 0) {\n            message.warning('请至少选择一条数据')\n            return\n        }\n        Modal.confirm({\n            title: '提示',\n            content: `是否确认删除该${selectedRows.length}条数据？`,\n            okText: '确认',\n            cancelText: '取消',\n            onOk: () => {\n                let arr = []\n                for (let item of selectedRows) {\n                    arr.push(item.id)\n                }\n                deleteRole(0, { ids: arr }).then(res => {\n                    message.success('删除成功')\n                    getData(2, { pageIndex: PageInfo.pageIndex, pageSize: PageInfo.pageSize })\n                })\n            },\n        });\n    }\n    setRoleName = (e) => {\n        this.props.SystemStore.roleName = e.target.value\n    }\n    componentDidMount() {\n        const { getTreeData } = this.props.SystemStore\n        getTreeData()\n    }\n    search = () => {\n        const { getData, PageInfo, roleName } = this.props.SystemStore\n        getData(2, { pageIndex: PageInfo.pageIndex, pageSize: PageInfo.pageSize, roleName })\n    }\n    componentWillUnmount() {\n        this.props.SystemStore.clearData()\n    }\n}\nexport default RoleManager;"]},"metadata":{},"sourceType":"module"}