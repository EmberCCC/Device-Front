{"ast":null,"code":"import \"antd/es/date-picker/style\";\nimport _DatePicker from \"antd/es/date-picker\";\nvar _excluded = [\"onChange\", \"format\", \"value\", \"style\"];\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport moment from 'moment';\nimport React, { useMemo } from 'react';\nimport { getFormat } from '../../utils'; // TODO: 不要使用 moment，使用 dayjs\n\nexport default (function (_ref) {\n  var onChange = _ref.onChange,\n      format = _ref.format,\n      value = _ref.value,\n      style = _ref.style,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var dateFormat = getFormat(format);\n  var valueObj = useMemo(function () {\n    // week 的时候会返回 2020-31周 quarter 会返回 2020-Q2 需要处理之后才能被 moment\n    var _value = value || undefined;\n\n    if (typeof _value === 'string') {\n      if (format === 'week') {\n        _value = _value ? _value.substring(0, _value.length - 1) : _value;\n      }\n\n      if (format === 'quarter') {\n        _value = _value.replace('Q', '');\n      }\n    }\n\n    if (_value) {\n      _value = moment(_value, dateFormat);\n    }\n\n    return _value;\n  }, [value]);\n\n  var handleChange = function handleChange(value, string) {\n    onChange(string);\n  };\n\n  var dateParams = {\n    value: valueObj,\n    style: _objectSpread({\n      width: '100%'\n    }, style),\n    onChange: handleChange\n  }; // TODO: format 是在 options 里自定义的情况，是否要判断一下要不要 showTime\n\n  if (format === 'dateTime') {\n    dateParams.showTime = true;\n  }\n\n  if (['week', 'month', 'quarter', 'year'].indexOf(format) > -1) {\n    dateParams.picker = format;\n  }\n\n  if (dateFormat === format) {\n    dateParams.format = format;\n  }\n\n  return /*#__PURE__*/React.createElement(_DatePicker, _extends({}, dateParams, rest));\n});","map":null,"metadata":{},"sourceType":"module"}