{"ast":null,"code":"import \"antd/lib/checkbox/style\";\nimport _Checkbox from \"antd/lib/checkbox\";\nimport \"antd/lib/radio/style\";\nimport _Radio from \"antd/lib/radio\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport _defineProperty from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _classCallCheck from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\src\\\\layouts\\\\SystemManager\\\\UserManager\\\\UserDialog.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { toJS } from 'mobx';\nimport GlobalModal from 'Components/GlobalModal';\nvar UserDialog = (_dec = inject('SystemStore'), _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_Component) {\n  _inherits(UserDialog, _Component);\n\n  var _super = _createSuper(UserDialog);\n\n  function UserDialog(props) {\n    var _this;\n\n    _classCallCheck(this, UserDialog);\n\n    _this = _super.call(this, props);\n\n    _this.regularCheck = function (e) {\n      // let re = /^\\w+@[a-z0-9]+\\.[a-z]{2,4}$/\n      var emailRe = /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z0-9]{2,6}$/;\n      var phoneRe = /^1([38][0-9]|4[579]|5[0-3,5-9]|6[6]|7[0135678]|9[89])\\d{8}$/;\n\n      if (e.target.value) {\n        if (emailRe.test(e.target.value) || phoneRe.test(e.target.value)) {\n          _this.setState({\n            validateStatus: 'success',\n            help: ''\n          });\n        } else {\n          _this.setState({\n            validateStatus: 'error',\n            help: '用户名/工号须填写正确格式的可为邮箱或手机号'\n          });\n        }\n      } else {\n        _this.setState({\n          validateStatus: 'error',\n          help: '请输入用户名/工号'\n        });\n      }\n    };\n\n    _this.existUsername = function (e) {\n      if (_this.state.validateStatus === 'error' || _this.props.form.getFieldValue('username') === _this.props.SystemStore.formData.username) return;\n\n      if (e.target.value) {\n        _this.props.SystemStore.existUsername({\n          userName: e.target.value\n        }).then(function (res) {\n          if (res) {\n            _this.setState({\n              validateStatus: 'error',\n              help: '当前用户名/工号已存在'\n            });\n          } else {\n            _this.setState({\n              validateStatus: 'success',\n              help: ''\n            });\n          }\n        });\n      } else {\n        _this.setState({\n          validateStatus: 'error',\n          help: '请输入用户名/工号'\n        });\n      }\n    };\n\n    _this.changeSelf = function (e) {\n      _this.props.SystemStore.formData.deptId = '';\n      _this.props.SystemStore.formData.isSelf = e;\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var _this$props$SystemSto = _this.props.SystemStore,\n          getData = _this$props$SystemSto.getData,\n          modalChange = _this$props$SystemSto.modalChange,\n          addNewUser = _this$props$SystemSto.addNewUser,\n          formData = _this$props$SystemSto.formData,\n          PageInfo = _this$props$SystemSto.PageInfo,\n          name = _this$props$SystemSto.name,\n          deptId = _this$props$SystemSto.deptId,\n          columnsType = _this$props$SystemSto.columnsType;\n\n      _this.props.form.validateFields(function (err, values) {\n        if (_this.state.validateStatus == 'init') {\n          _message.error('请输入用户名/工号');\n\n          return;\n        }\n\n        if (!err) {\n          if (_this.state.validateStatus === 'error') {\n            _message.error('当前用户名/工号的格式错误或已存在，请修改后再试试吧');\n\n            return;\n          }\n\n          if (values.roleIds) {\n            values.roleIds = values.roleIds.join(',');\n          }\n\n          if (formData.id) {\n            addNewUser(0, _objectSpread({}, formData, {}, values)).then(function (res) {\n              _message.success('更新成功');\n\n              modalChange(0);\n              getData(3, {\n                pageIndex: PageInfo.pageIndex,\n                pageSize: PageInfo.pageSize,\n                name: name,\n                deptId: deptId,\n                isSelf: columnsType\n              });\n            });\n          } else {\n            // values.deptId = values.deptId ? values.deptId : 0\n            addNewUser(1, values).then(function (res) {\n              _message.success('添加成功');\n\n              modalChange(0);\n              getData(3, {\n                pageIndex: PageInfo.pageIndex,\n                pageSize: PageInfo.pageSize,\n                name: name,\n                deptId: deptId,\n                isSelf: columnsType\n              });\n            });\n          }\n        }\n      });\n    };\n\n    _this.state = {\n      validateStatus: 'init',\n      help: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(UserDialog, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _toJS = toJS(this.props.SystemStore),\n          modalVisible = _toJS.modalVisible,\n          formData = _toJS.formData,\n          CumList = _toJS.CumList,\n          roleList = _toJS.roleList,\n          allDept = _toJS.allDept;\n\n      var formLabelCol = {\n        span: 4\n      };\n      var formWrapperCol = {\n        span: 18\n      };\n      var Option = _Select.Option;\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 16\n        }\n      }, modalVisible && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(GlobalModal, {\n        title: formData.userId ? '编辑' : '新增',\n        visible: modalVisible,\n        onOk: this.handleSubmit,\n        width: '50%',\n        onCancel: function onCancel(e) {\n          return _this2.props.SystemStore.modalChange(0);\n        },\n        children: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(_Form, {\n          onSubmit: this.handleSubmit,\n          layout: \"horizontal\",\n          labelCol: formLabelCol,\n          wrapperCol: formWrapperCol,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(_Form.Item, {\n          label: \"\\u59D3\\u540D\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 37\n          }\n        }, getFieldDecorator('name', {\n          rules: [{\n            required: true,\n            message: '请输入姓名'\n          }],\n          initialValue: formData.name || ''\n        })( /*#__PURE__*/React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u59D3\\u540D\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 45\n          }\n        }))), /*#__PURE__*/React.createElement(_Form.Item, {\n          label: \"\\u7528\\u6237\\u540D/\\u5DE5\\u53F7\",\n          help: this.state.help,\n          hasFeedback: true,\n          validateStatus: this.state.validateStatus,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 37\n          }\n        }, getFieldDecorator('username', {\n          rules: [{\n            required: true,\n            message: '请输入用户名/工号，只可为邮箱'\n          }],\n          initialValue: formData.username || ''\n        })( /*#__PURE__*/React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u7528\\u6237\\u540D\",\n          onInput: this.regularCheck,\n          onBlur: this.existUsername,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 45\n          }\n        }))), /*#__PURE__*/React.createElement(_Form.Item, {\n          label: \"\\u7EC4\\u7EC7\\u67B6\\u6784\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 37\n          }\n        }, getFieldDecorator('isSelf', {\n          rules: [{\n            required: true,\n            message: '请选择组织架构'\n          }],\n          initialValue: formData.isSelf || ''\n        })( /*#__PURE__*/React.createElement(_Select, {\n          disabled: formData.id,\n          placeholder: \"\\u8BF7\\u9009\\u62E9\\u7EC4\\u7EC7\\u67B6\\u6784\",\n          onChange: this.changeSelf,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(Option, {\n          value: 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 49\n          }\n        }, \"\\u516C\\u53F8\"), /*#__PURE__*/React.createElement(Option, {\n          value: 2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 49\n          }\n        }, \"\\u5408\\u4F5C\\u4F19\\u4F34\")))), formData.isSelf === 1 && /*#__PURE__*/React.createElement(_Form.Item, {\n          label: \"\\u90E8\\u95E8\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 63\n          }\n        }, getFieldDecorator('deptId', {\n          rules: [{\n            required: true,\n            message: '请选择部门'\n          }],\n          initialValue: formData.deptId || ''\n        })( /*#__PURE__*/React.createElement(_Select, {\n          placeholder: \"\\u8BF7\\u9009\\u62E9\\u90E8\\u95E8\",\n          defaultValue: formData.deptId,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 45\n          }\n        }, allDept.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(Option, {\n            key: index,\n            value: item.id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 57\n            }\n          }, item.name);\n        })))), formData.isSelf === 2 && /*#__PURE__*/React.createElement(_Form.Item, {\n          label: \"\\u5BA2\\u6237\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 63\n          }\n        }, getFieldDecorator('deptId', {\n          rules: [{\n            required: true,\n            message: '请选择客户'\n          }],\n          initialValue: formData.deptId || ''\n        })( /*#__PURE__*/React.createElement(_Select, {\n          placeholder: \"\\u8BF7\\u9009\\u62E9\\u5BA2\\u6237\",\n          defaultValue: formData.deptId,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 45\n          }\n        }, CumList.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(Option, {\n            key: index,\n            value: item.id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 57\n            }\n          }, item.customerName);\n        })))), formData.isSelf === 3 && /*#__PURE__*/React.createElement(_Form.Item, {\n          label: \"\\u4F9B\\u5E94\\u5546\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 63\n          }\n        }, getFieldDecorator('deptId', {\n          rules: [{\n            required: true,\n            message: '请选择供应商'\n          }],\n          initialValue: formData.deptId || ''\n        })( /*#__PURE__*/React.createElement(_Select, {\n          placeholder: \"\\u8BF7\\u9009\\u62E9\\u4F9B\\u5E94\\u5546\",\n          defaultValue: formData.deptId,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 45\n          }\n        }, CumList.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(Option, {\n            key: index,\n            value: item.id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 57\n            }\n          }, item.customerName);\n        })))), /*#__PURE__*/React.createElement(_Form.Item, {\n          label: \"\\u624B\\u673A\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 37\n          }\n        }, getFieldDecorator('mobile', {\n          rules: [{\n            required: true,\n            message: '请输入手机'\n          }],\n          initialValue: formData.mobile || ''\n        })( /*#__PURE__*/React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u624B\\u673A\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 45\n          }\n        }))), /*#__PURE__*/React.createElement(_Form.Item, {\n          label: \"E-mail\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 37\n          }\n        }, getFieldDecorator('email', {\n          rules: [{\n            required: false,\n            message: '请输入E-mail'\n          }],\n          initialValue: formData.email || ''\n        })( /*#__PURE__*/React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165E-mail\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 45\n          }\n        }))), /*#__PURE__*/React.createElement(_Form.Item, {\n          label: \"\\u72B6\\u6001\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 37\n          }\n        }, getFieldDecorator('status', {\n          rules: [{\n            required: false,\n            message: '请选择状态'\n          }],\n          initialValue: formData.status || 0\n        })( /*#__PURE__*/React.createElement(_Radio.Group, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(_Radio, {\n          value: 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 49\n          }\n        }, \"\\u6B63\\u5E38\"), /*#__PURE__*/React.createElement(_Radio, {\n          value: 0,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 49\n          }\n        }, \"\\u7981\\u7528\")))), /*#__PURE__*/React.createElement(_Form.Item, {\n          label: \"\\u89D2\\u8272\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 37\n          }\n        }, getFieldDecorator('roleIds', {\n          rules: [{\n            required: false,\n            message: '请选择角色'\n          }],\n          initialValue: formData.roleIds || ''\n        })( /*#__PURE__*/React.createElement(_Checkbox.Group, {\n          options: roleList,\n          defaultValue: formData.roleIds,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 45\n          }\n        }))))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }\n      })));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var formData = this.props.SystemStore.formData;\n\n      if (formData.username) {\n        this.setState({\n          validateStatus: 'success'\n        });\n      }\n    }\n  }]);\n\n  return UserDialog;\n}(Component), _temp)) || _class) || _class);\n\nvar UserDialogForm = _Form.create({\n  name: 'user'\n})(UserDialog);\n\nexport default UserDialogForm;","map":{"version":3,"sources":["C:/Users/Misaki/Desktop/kda/设备运维前端/bl-device-manage/src/layouts/SystemManager/UserManager/UserDialog.js"],"names":["React","Component","inject","observer","toJS","GlobalModal","UserDialog","props","regularCheck","e","emailRe","phoneRe","target","value","test","setState","validateStatus","help","existUsername","state","form","getFieldValue","SystemStore","formData","username","userName","then","res","changeSelf","deptId","isSelf","handleSubmit","preventDefault","getData","modalChange","addNewUser","PageInfo","name","columnsType","validateFields","err","values","error","roleIds","join","id","success","pageIndex","pageSize","modalVisible","CumList","roleList","allDept","formLabelCol","span","formWrapperCol","Option","getFieldDecorator","userId","rules","required","message","initialValue","map","item","index","customerName","mobile","email","status","UserDialogForm","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { toJS } from 'mobx';\nimport { message, Form, Input, Radio, Select, Checkbox } from 'antd';\nimport GlobalModal from 'Components/GlobalModal';\n@inject('SystemStore')\n@observer\nclass UserDialog extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            validateStatus: 'init',\n            help: \"\"\n        }\n    }\n    render() {\n        const { modalVisible, formData, CumList, roleList, allDept } = toJS(this.props.SystemStore)\n        const formLabelCol = { span: 4 }\n        const formWrapperCol = { span: 18 }\n        const { Option } = Select;\n        const { getFieldDecorator } = this.props.form;\n        return <div>\n            {\n                modalVisible && <div>\n                    <GlobalModal\n                        title={formData.userId ? '编辑' : '新增'}\n                        visible={modalVisible}\n                        onOk={this.handleSubmit}\n                        width={'50%'}\n                        onCancel={e => this.props.SystemStore.modalChange(0)}\n                        children={\n                            <div>\n                                <Form onSubmit={this.handleSubmit} layout='horizontal' labelCol={formLabelCol} wrapperCol={formWrapperCol}>\n\n                                    <Form.Item label=\"姓名\">\n                                        {getFieldDecorator('name', {\n                                            rules: [{ required: true, message: '请输入姓名' }],\n                                            initialValue: formData.name || ''\n                                        })(\n                                            <Input placeholder=\"请输入姓名\" />\n                                        )}\n                                    </Form.Item>\n                                    <Form.Item label=\"用户名/工号\" help={this.state.help} hasFeedback validateStatus={this.state.validateStatus}> \n                                        {getFieldDecorator('username', {\n                                            rules: [{ \n                                                required: true, message: '请输入用户名/工号，只可为邮箱',\n                                             }],\n                                            initialValue: formData.username || ''\n                                        })(\n                                            <Input placeholder=\"请输入用户名\" onInput={this.regularCheck} onBlur={this.existUsername} />\n                                        )}\n                                    </Form.Item>\n                                    {/*formData.id && <Form.Item label=\"密码\">\n                                        {getFieldDecorator('password', {\n                                            rules: [{ required: true, message: '请输入密码' }],\n                                            initialValue: formData.password || ''\n                                        })(\n                                            <Input placeholder=\"请输入密码\" />\n                                        )}\n                                        </Form.Item>*/}\n                                    <Form.Item label=\"组织架构\">\n                                        {getFieldDecorator('isSelf', {\n                                            rules: [{ required: true, message: '请选择组织架构' }],\n                                            initialValue: formData.isSelf || ''\n                                        })(\n                                            <Select disabled={formData.id} placeholder='请选择组织架构' onChange={this.changeSelf}>\n                                                <Option value={1}>公司</Option>\n                                                <Option value={2}>合作伙伴</Option>\n                                                {/* <Option value={3}>供应商</Option>*/}\n                                            </Select>\n                                        )}\n                                    </Form.Item>\n                                    {formData.isSelf === 1 && <Form.Item label=\"部门\">\n                                        {getFieldDecorator('deptId', {\n                                            rules: [{ required: true, message: '请选择部门' }],\n                                            initialValue: formData.deptId || ''\n                                        })(\n                                            <Select placeholder='请选择部门' defaultValue={formData.deptId}>\n                                                {\n                                                    allDept.map((item, index) => (\n                                                        <Option key={index} value={item.id}>{item.name}</Option>\n                                                    ))\n                                                }\n                                            </Select>\n                                        )}\n                                    </Form.Item>}\n                                    {formData.isSelf === 2 && <Form.Item label=\"客户\">\n                                        {getFieldDecorator('deptId', {\n                                            rules: [{ required: true, message: '请选择客户' }],\n                                            initialValue: formData.deptId || ''\n                                        })(\n                                            <Select placeholder='请选择客户' defaultValue={formData.deptId}>\n                                                {\n                                                    CumList.map((item, index) => (\n                                                        <Option key={index} value={item.id}>{item.customerName}</Option>\n                                                    ))\n                                                }\n                                            </Select>\n                                        )}\n                                    </Form.Item>}\n                                    {formData.isSelf === 3 && <Form.Item label=\"供应商\">\n                                        {getFieldDecorator('deptId', {\n                                            rules: [{ required: true, message: '请选择供应商' }],\n                                            initialValue: formData.deptId || ''\n                                        })(\n                                            <Select placeholder='请选择供应商' defaultValue={formData.deptId}>\n                                                {\n                                                    CumList.map((item, index) => (\n                                                        <Option key={index} value={item.id}>{item.customerName}</Option>\n                                                    ))\n                                                }\n                                            </Select>\n                                        )}\n                                    </Form.Item>}\n                                    <Form.Item label=\"手机\">\n                                        {getFieldDecorator('mobile', {\n                                            rules: [{ required: true, message: '请输入手机' }],\n                                            initialValue: formData.mobile || ''\n                                        })(\n                                            <Input placeholder=\"请输入手机\" />\n                                        )}\n                                    </Form.Item>\n                                    <Form.Item label=\"E-mail\">\n                                        {getFieldDecorator('email', {\n                                            rules: [{ required: false, message: '请输入E-mail' }],\n                                            initialValue: formData.email || ''\n                                        })(\n                                            <Input placeholder=\"请输入E-mail\" />\n                                        )}\n                                    </Form.Item>\n                                    <Form.Item label=\"状态\">\n                                        {getFieldDecorator('status', {\n                                            rules: [{ required: false, message: '请选择状态' }],\n                                            initialValue: formData.status || 0\n                                        })(\n                                            <Radio.Group>\n                                                <Radio value={1}>正常</Radio>\n                                                <Radio value={0}>禁用</Radio>\n                                            </Radio.Group>\n                                        )}\n                                    </Form.Item>\n                                    <Form.Item label=\"角色\">\n                                        {getFieldDecorator('roleIds', {\n                                            rules: [{ required: false, message: '请选择角色' }],\n                                            initialValue: formData.roleIds || ''\n                                        })(\n                                            <Checkbox.Group options={roleList} defaultValue={formData.roleIds} />\n                                        )}\n                                    </Form.Item>\n                                </Form>\n                            </div>\n                        }\n                    />\n\n                    {/*innerModalVisible && <GlobalModal\n                        title='选择图标'\n                        visible={innerModalVisible}\n                        onOk={this.handleSubmit}\n                        width={'50%'}\n                        onCancel={e => this.props.SystemStore.modalChange(0)}\n                        children={\n                            <div></div>\n                        } />*/}\n                </div>\n            }\n        </div>;\n    }\n    regularCheck = (e) => {\n        // let re = /^\\w+@[a-z0-9]+\\.[a-z]{2,4}$/\n        let emailRe = /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z0-9]{2,6}$/;\n        let phoneRe = /^1([38][0-9]|4[579]|5[0-3,5-9]|6[6]|7[0135678]|9[89])\\d{8}$/;\n\n        if(e.target.value){\n            if (emailRe.test(e.target.value) || phoneRe.test(e.target.value)) {\n                this.setState({ validateStatus: 'success', help: '' })\n            } else {\n                this.setState({ validateStatus: 'error', help: '用户名/工号须填写正确格式的可为邮箱或手机号' })\n            }\n        }else{\n            this.setState({ validateStatus: 'error', help: '请输入用户名/工号' })\n        }\n    }\n    existUsername = (e) => {\n        if (this.state.validateStatus === 'error'||this.props.form.getFieldValue('username') === this.props.SystemStore.formData.username) return\n        if(e.target.value){\n            this.props.SystemStore.existUsername({ userName: e.target.value }).then(res => {\n                if (res) {\n                    this.setState({ validateStatus: 'error', help: '当前用户名/工号已存在' })\n                } else {\n                    this.setState({ validateStatus: 'success', help: '' })\n                }\n            })\n        }else{\n            this.setState({ validateStatus: 'error', help: '请输入用户名/工号' })\n        }\n    }\n    changeSelf = (e) => {\n        this.props.SystemStore.formData.deptId = ''\n        this.props.SystemStore.formData.isSelf = e\n    }\n    //提交表单\n    handleSubmit = e => {\n        e.preventDefault();\n        const { getData, modalChange, addNewUser, formData, PageInfo, name, deptId, columnsType } = this.props.SystemStore\n        this.props.form.validateFields((err, values) => {\n            if(this.state.validateStatus == 'init'){\n                message.error('请输入用户名/工号')\n                return\n            }\n            if (!err) {\n                if (this.state.validateStatus === 'error') {\n                    message.error('当前用户名/工号的格式错误或已存在，请修改后再试试吧')\n                    return\n                }\n                if(values.roleIds){\n                    values.roleIds = values.roleIds.join(',')\n                }\n                if (formData.id) {\n                    addNewUser(0, { ...formData, ...values }).then(res => {\n                        message.success('更新成功')\n                        modalChange(0)\n                        getData(3, { pageIndex: PageInfo.pageIndex, pageSize: PageInfo.pageSize, name, deptId, isSelf: columnsType })\n                    })\n                } else {\n                    // values.deptId = values.deptId ? values.deptId : 0\n                    addNewUser(1, values).then(res => {\n                        message.success('添加成功')\n                        modalChange(0)\n                        getData(3, { pageIndex: PageInfo.pageIndex, pageSize: PageInfo.pageSize, name, deptId, isSelf: columnsType })\n                    })\n                }\n            }\n        });\n    };\n    componentDidMount(){\n        const { formData } = this.props.SystemStore;\n        if(formData.username){\n            this.setState({\n                validateStatus:'success'\n            })\n        }\n    }\n}\nconst UserDialogForm = Form.create({ name: 'user' })(UserDialog);\nexport default UserDialogForm;"]},"metadata":{},"sourceType":"module"}