{"ast":null,"code":"import _objectSpread from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _temp;\n\nimport { observable, action } from 'mobx';\nimport { isDataExist } from 'Utils/dataTools';\nimport * as services from '../services/statistics';\nvar Statistics = (_dec = action.bound, _dec2 = action.bound, _dec3 = action.bound, _dec4 = action.bound, _dec5 = action.bound, _dec6 = action.bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function Statistics() {\n    _classCallCheck(this, Statistics);\n\n    _initializerDefineProperty(this, \"isLoading\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"columnsType\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"tableData\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"searchDate\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"pageInfo\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"modalVisible\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"detailInfo\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"breakenInfo\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"breakenPage\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"logInfo\", _descriptor10, this);\n\n    _initializerDefineProperty(this, \"workInfo\", _descriptor11, this);\n\n    _initializerDefineProperty(this, \"deviceId\", _descriptor12, this);\n\n    _initializerDefineProperty(this, \"modalChange\", _descriptor13, this);\n  }\n\n  _createClass(Statistics, [{\n    key: \"getData\",\n    value: function () {\n      var _getData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(type, params) {\n        var url, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.isLoading = true; //1故障分析，2备件分析，3点检分析，4人员绩效分析\n\n                url = type === 1 ? services.requestUrl.deviceList : type === 2 ? services.requestUrl.spareList : type === 3 ? services.requestUrl.breakenList : services.requestUrl.staffList;\n                _context.prev = 2;\n                _context.next = 5;\n                return services.getRequest(url, params);\n\n              case 5:\n                res = _context.sent;\n                this.isLoading = false;\n\n                if (isDataExist(res)) {\n                  this.tableData = res.data.data.items;\n                  this.pageInfo = res.data.data.page;\n                }\n\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 10]]);\n      }));\n\n      function getData(_x, _x2) {\n        return _getData.apply(this, arguments);\n      }\n\n      return getData;\n    }()\n  }, {\n    key: \"getBreakenInfo\",\n    value: function () {\n      var _getBreakenInfo = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.isLoading = true;\n                _context2.prev = 1;\n                _context2.next = 4;\n                return services.getRequest(services.requestUrl.getBreakenInfo, params);\n\n              case 4:\n                res = _context2.sent;\n                this.isLoading = false;\n\n                if (isDataExist(res)) {\n                  this.breakenInfo = this.breakenInfo.concat(res.data.data.items);\n                  this.breakenPage = res.data.data.page;\n                }\n\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.log(_context2.t0);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 9]]);\n      }));\n\n      function getBreakenInfo(_x3) {\n        return _getBreakenInfo.apply(this, arguments);\n      }\n\n      return getBreakenInfo;\n    }()\n  }, {\n    key: \"getAllWorkInfo\",\n    value: function () {\n      var _getAllWorkInfo = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.isLoading = true;\n                _context3.prev = 1;\n                _context3.next = 4;\n                return services.getRequest(services.requestUrl.getAllWorkInfo, _objectSpread({\n                  isSelf: true\n                }, params));\n\n              case 4:\n                res = _context3.sent;\n                this.isLoading = false;\n\n                if (isDataExist(res)) {\n                  this.workInfo = res.data.data;\n                }\n\n                _context3.next = 12;\n                break;\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](1);\n                console.log(_context3.t0);\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[1, 9]]);\n      }));\n\n      function getAllWorkInfo(_x4) {\n        return _getAllWorkInfo.apply(this, arguments);\n      }\n\n      return getAllWorkInfo;\n    }()\n  }, {\n    key: \"getByLogId\",\n    value: function () {\n      var _getByLogId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.isLoading = true;\n                _context4.prev = 1;\n                _context4.next = 4;\n                return services.getRequest(services.requestUrl.getByLogId, params);\n\n              case 4:\n                res = _context4.sent;\n                this.isLoading = false;\n\n                if (isDataExist(res)) {\n                  this.logInfo = res.data.data;\n                }\n\n                _context4.next = 12;\n                break;\n\n              case 9:\n                _context4.prev = 9;\n                _context4.t0 = _context4[\"catch\"](1);\n                console.log(_context4.t0);\n\n              case 12:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[1, 9]]);\n      }));\n\n      function getByLogId(_x5) {\n        return _getByLogId.apply(this, arguments);\n      }\n\n      return getByLogId;\n    }()\n  }, {\n    key: \"exportDate\",\n    value: function () {\n      var _exportDate = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(type, params) {\n        var url;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                //1导出设备，2导出备件，3导出点检，4导出人员绩效\n                url = type === 1 ? services.requestUrl.exportDevice : type === 2 ? services.requestUrl.exportSpare : type === 3 ? services.requestUrl.exportBreaken : services.requestUrl.exportStaff;\n                url = \"\".concat(url, \"?pageIndex=\").concat(this.pageInfo.pageIndex, \"&pageSize=\").concat(this.pageInfo.pageSize, \"&startDate=\").concat(this.searchDate[0] ? this.searchDate[0] : '', \"&endDate=\").concat(this.searchDate[1] ? this.searchDate[1] : '', \" \"); // console.log(url)\n\n                window.open(url); // try {\n                //     let res = await services.getRequest(url, params)\n                //     this.isLoading = false\n                //     if (isDataExist(res)) {\n                //         return res\n                //     }\n                // } catch (error) {\n                //     console.log(error)\n                // }\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function exportDate(_x6, _x7) {\n        return _exportDate.apply(this, arguments);\n      }\n\n      return exportDate;\n    }()\n  }, {\n    key: \"clearData\",\n    value: function () {\n      var _clearData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6() {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                this.columnsType = 1;\n                this.tableData = [];\n\n              case 2:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function clearData() {\n        return _clearData.apply(this, arguments);\n      }\n\n      return clearData;\n    }()\n  }]);\n\n  return Statistics;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"isLoading\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"columnsType\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 1;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"tableData\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"searchDate\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"pageInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {\n      pageIndex: 1,\n      pageSize: 10\n    };\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"modalVisible\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"detailInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"breakenInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"breakenPage\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"logInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"workInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"deviceId\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"getData\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"getData\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getBreakenInfo\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"getBreakenInfo\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getAllWorkInfo\", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, \"getAllWorkInfo\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getByLogId\", [_dec4], Object.getOwnPropertyDescriptor(_class.prototype, \"getByLogId\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"exportDate\", [_dec5], Object.getOwnPropertyDescriptor(_class.prototype, \"exportDate\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"clearData\", [_dec6], Object.getOwnPropertyDescriptor(_class.prototype, \"clearData\"), _class.prototype), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, \"modalChange\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this = this;\n\n    return function () {\n      // console.log(this.modalVisible)\n      _this.modalVisible = !_this.modalVisible;\n    };\n  }\n})), _class));\nvar StatisticsStore = new Statistics();\nexport default StatisticsStore;","map":{"version":3,"sources":["D:\\GGdownload\\设备运维前端\\bl-device-manage\\src\\stores\\StatisticsStore.js"],"names":["observable","action","isDataExist","services","Statistics","bound","type","params","isLoading","url","requestUrl","deviceList","spareList","breakenList","staffList","getRequest","res","tableData","data","items","pageInfo","page","console","log","getBreakenInfo","breakenInfo","concat","breakenPage","getAllWorkInfo","isSelf","workInfo","getByLogId","logInfo","exportDevice","exportSpare","exportBreaken","exportStaff","pageIndex","pageSize","searchDate","window","open","columnsType","modalVisible","StatisticsStore"],"mappings":";;;;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,QAAoC,MAApC;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAO,KAAKC,QAAZ,MAA0B,wBAA1B;IAEMC,U,WAcDH,MAAM,CAACI,K,UAePJ,MAAM,CAACI,K,UAaPJ,MAAM,CAACI,K,UAYPJ,MAAM,CAACI,K,UAYPJ,MAAM,CAACI,K,UAgBPJ,MAAM,CAACI,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gDApEoBC,I,EAAMC,M;;;;;;AAC9B,qBAAKC,SAAL,GAAiB,IAAjB,C,CACA;;AACMC,gBAAAA,G,GAAMH,IAAI,KAAK,CAAT,GAAaH,QAAQ,CAACO,UAAT,CAAoBC,UAAjC,GAA8CL,IAAI,KAAK,CAAT,GAAaH,QAAQ,CAACO,UAAT,CAAoBE,SAAjC,GAA6CN,IAAI,KAAK,CAAT,GAAaH,QAAQ,CAACO,UAAT,CAAoBG,WAAjC,GAA+CV,QAAQ,CAACO,UAAT,CAAoBI,S;;;uBAEtJX,QAAQ,CAACY,UAAT,CAAoBN,GAApB,EAAyBF,MAAzB,C;;;AAAZS,gBAAAA,G;AACJ,qBAAKR,SAAL,GAAiB,KAAjB;;AACA,oBAAIN,WAAW,CAACc,GAAD,CAAf,EAAsB;AAClB,uBAAKC,SAAL,GAAiBD,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcC,KAA/B;AACA,uBAAKC,QAAL,GAAgBJ,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcG,IAA9B;AACH;;;;;;;;AAEDC,gBAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;;;;;;;;;;;iDAG2BhB,M;;;;;;AAC/B,qBAAKC,SAAL,GAAiB,IAAjB;;;uBAEoBL,QAAQ,CAACY,UAAT,CAAoBZ,QAAQ,CAACO,UAAT,CAAoBc,cAAxC,EAAwDjB,MAAxD,C;;;AAAZS,gBAAAA,G;AACJ,qBAAKR,SAAL,GAAiB,KAAjB;;AACA,oBAAIN,WAAW,CAACc,GAAD,CAAf,EAAsB;AAClB,uBAAKS,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,MAAjB,CAAwBV,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcC,KAAtC,CAAnB;AACA,uBAAKQ,WAAL,GAAmBX,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcG,IAAjC;AACH;;;;;;;;AAEDC,gBAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;;;;;;;;;;;iDAG2BhB,M;;;;;;AAC/B,qBAAKC,SAAL,GAAiB,IAAjB;;;uBAEoBL,QAAQ,CAACY,UAAT,CAAoBZ,QAAQ,CAACO,UAAT,CAAoBkB,cAAxC;AAA0DC,kBAAAA,MAAM,EAAE;AAAlE,mBAA2EtB,MAA3E,E;;;AAAZS,gBAAAA,G;AACJ,qBAAKR,SAAL,GAAiB,KAAjB;;AACA,oBAAIN,WAAW,CAACc,GAAD,CAAf,EAAsB;AAClB,uBAAKc,QAAL,GAAgBd,GAAG,CAACE,IAAJ,CAASA,IAAzB;AACH;;;;;;;;AAEDI,gBAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;;;;;;;;;;;iDAGuBhB,M;;;;;;AAC3B,qBAAKC,SAAL,GAAiB,IAAjB;;;uBAEoBL,QAAQ,CAACY,UAAT,CAAoBZ,QAAQ,CAACO,UAAT,CAAoBqB,UAAxC,EAAoDxB,MAApD,C;;;AAAZS,gBAAAA,G;AACJ,qBAAKR,SAAL,GAAiB,KAAjB;;AACA,oBAAIN,WAAW,CAACc,GAAD,CAAf,EAAsB;AAClB,uBAAKgB,OAAL,GAAehB,GAAG,CAACE,IAAJ,CAASA,IAAxB;AACH;;;;;;;;AAEDI,gBAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;;;;;;;;;;;iDAGuBjB,I,EAAMC,M;;;;;;AACjC;AACIE,gBAAAA,G,GAAMH,IAAI,KAAK,CAAT,GAAaH,QAAQ,CAACO,UAAT,CAAoBuB,YAAjC,GAAgD3B,IAAI,KAAK,CAAT,GAAaH,QAAQ,CAACO,UAAT,CAAoBwB,WAAjC,GAA+C5B,IAAI,KAAK,CAAT,GAAaH,QAAQ,CAACO,UAAT,CAAoByB,aAAjC,GAAiDhC,QAAQ,CAACO,UAAT,CAAoB0B,W;AAC9K3B,gBAAAA,GAAG,aAAMA,GAAN,wBAAuB,KAAKW,QAAL,CAAciB,SAArC,uBAA2D,KAAKjB,QAAL,CAAckB,QAAzE,wBAA+F,KAAKC,UAAL,CAAgB,CAAhB,IAAqB,KAAKA,UAAL,CAAgB,CAAhB,CAArB,GAA0C,EAAzI,sBAAuJ,KAAKA,UAAL,CAAgB,CAAhB,IAAqB,KAAKA,UAAL,CAAgB,CAAhB,CAArB,GAA0C,EAAjM,MAAH,C,CACA;;AACAC,gBAAAA,MAAM,CAACC,IAAP,CAAYhC,GAAZ,E,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,qBAAKiC,WAAL,GAAmB,CAAnB;AACA,qBAAKzB,SAAL,GAAiB,EAAjB;;;;;;;;;;;;;;;;;;;sFAnFHjB,U;;;;;WAAuB,K;;+EACvBA,U;;;;;WAAyB,C;;6EACzBA,U;;;;;WAAuB,E;;8EACvBA,U;;;;;WAAwB,E;;4EACxBA,U;;;;;WAAsB;AAAEqC,MAAAA,SAAS,EAAE,CAAb;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B,K;;gFACtBtC,U;;;;;WAA0B,K;;8EAC1BA,U;;;;;WAAwB,E;;+EACxBA,U;;;;;WAAyB,E;;+EACzBA,U;;;;;WAAyB,E;;4EACzBA,U;;;;;WAAqB,E;;6EACrBA,U;;;;;WAAsB,E;;6EACtBA,U;;;;;WAAsB,E;;i+BA0EtBC,M;;;;;;;WAAqB,YAAM;AACxB;AACA,MAAA,KAAI,CAAC0C,YAAL,GAAoB,CAAC,KAAI,CAACA,YAA1B;AACH,K;;;AAEL,IAAIC,eAAe,GAAG,IAAIxC,UAAJ,EAAtB;AACA,eAAewC,eAAf","sourcesContent":["import { observable, action, } from 'mobx';\nimport { isDataExist } from 'Utils/dataTools';\nimport * as services from '../services/statistics';\n\nclass Statistics {\n    @observable isLoading = false;\n    @observable columnsType = 1;\n    @observable tableData = [];//表格数据\n    @observable searchDate = [];\n    @observable pageInfo = { pageIndex: 1, pageSize: 10 };//分页数据\n    @observable modalVisible = false;\n    @observable detailInfo = {};\n    @observable breakenInfo = [];\n    @observable breakenPage = {};\n    @observable logInfo = {};\n    @observable workInfo = [];\n    @observable deviceId = '';\n\n    @action.bound async getData(type, params) {\n        this.isLoading = true\n        //1故障分析，2备件分析，3点检分析，4人员绩效分析\n        const url = type === 1 ? services.requestUrl.deviceList : type === 2 ? services.requestUrl.spareList : type === 3 ? services.requestUrl.breakenList : services.requestUrl.staffList\n        try {\n            let res = await services.getRequest(url, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.tableData = res.data.data.items\n                this.pageInfo = res.data.data.page\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    @action.bound async getBreakenInfo(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.getBreakenInfo, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.breakenInfo = this.breakenInfo.concat(res.data.data.items)\n                this.breakenPage = res.data.data.page\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    @action.bound async getAllWorkInfo(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.getAllWorkInfo, { isSelf: true, ...params })\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.workInfo = res.data.data\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    @action.bound async getByLogId(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.getByLogId, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.logInfo = res.data.data\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    @action.bound async exportDate(type, params) {\n        //1导出设备，2导出备件，3导出点检，4导出人员绩效\n        let url = type === 1 ? services.requestUrl.exportDevice : type === 2 ? services.requestUrl.exportSpare : type === 3 ? services.requestUrl.exportBreaken : services.requestUrl.exportStaff\n        url = `${url}?pageIndex=${this.pageInfo.pageIndex}&pageSize=${this.pageInfo.pageSize}&startDate=${this.searchDate[0] ? this.searchDate[0] : ''}&endDate=${this.searchDate[1] ? this.searchDate[1] : ''} `\n        // console.log(url)\n        window.open(url)\n        // try {\n        //     let res = await services.getRequest(url, params)\n        //     this.isLoading = false\n        //     if (isDataExist(res)) {\n        //         return res\n        //     }\n        // } catch (error) {\n        //     console.log(error)\n        // }\n    }\n    @action.bound async clearData() {\n        this.columnsType = 1;\n        this.tableData = [];\n    }\n    @action modalChange = () => {\n        // console.log(this.modalVisible)\n        this.modalVisible = !this.modalVisible\n    }\n}\nlet StatisticsStore = new Statistics();\nexport default StatisticsStore;\n"]},"metadata":{},"sourceType":"module"}