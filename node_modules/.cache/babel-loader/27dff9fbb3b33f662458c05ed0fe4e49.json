{"ast":null,"code":"import \"antd/lib/divider/style\";\nimport _Divider from \"antd/lib/divider\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport _classCallCheck from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\src\\\\layouts\\\\SystemManager\\\\RoleManager\\\\RoleTable.js\";\n\nimport React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport TableLayout from 'Components/TableLayout';\nimport { toJS } from 'mobx';\nvar DepartmentTable = (_dec = inject('SystemStore'), _dec(_class = observer(_class = (_temp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DepartmentTable, _Component);\n\n  function DepartmentTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DepartmentTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DepartmentTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.pageChange = function (e) {\n      _this.props.SystemStore.PageInfo = e;\n      _this.props.SystemStore.PageInfo.pageIndex = e.current;\n      var _this$props$SystemSto = _this.props.SystemStore,\n          getData = _this$props$SystemSto.getData,\n          PageInfo = _this$props$SystemSto.PageInfo,\n          roleName = _this$props$SystemSto.roleName;\n      getData(2, {\n        pageIndex: PageInfo.pageIndex,\n        pageSize: PageInfo.pageSize,\n        roleName: roleName\n      });\n    };\n\n    _this.editRole = function (record) {\n      _this.props.SystemStore.formData = record;\n      _this.props.SystemStore.modalVisible = !_this.props.SystemStore.modalVisible;\n\n      _this.props.SystemStore.getMenuIdsByRole({\n        id: record.id\n      });\n    };\n\n    _this.delete = function (record) {\n      var _this$props$SystemSto2 = _this.props.SystemStore,\n          deleteRole = _this$props$SystemSto2.deleteRole,\n          getData = _this$props$SystemSto2.getData,\n          PageInfo = _this$props$SystemSto2.PageInfo,\n          roleName = _this$props$SystemSto2.roleName;\n\n      _Modal.confirm({\n        title: '提示',\n        content: '是否确认删除该条数据？',\n        okText: '确认',\n        cancelText: '取消',\n        onOk: function onOk() {\n          deleteRole(1, {\n            id: record.id\n          }).then(function (res) {\n            _message.success('删除成功');\n\n            getData(2, {\n              pageIndex: PageInfo.pageIndex,\n              pageSize: PageInfo.pageSize,\n              roleName: roleName\n            });\n          });\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(DepartmentTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _toJS = toJS(this.props.SystemStore),\n          tableData = _toJS.tableData,\n          PageInfo = _toJS.PageInfo,\n          isLoading = _toJS.isLoading; //定义表头\n\n\n      var columns = [{\n        title: '角色名',\n        dataIndex: 'roleName',\n        key: 'roleName'\n      }, {\n        title: '备注',\n        dataIndex: 'remark',\n        key: 'remark',\n        render: function render(text) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }, text ? text : '-');\n        }\n      }, {\n        title: '操作',\n        key: 'x',\n        align: 'right',\n        render: function render(text, record) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            onClick: function onClick(e) {\n              return _this2.editRole(record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, \"\\u7F16\\u8F91\"), React.createElement(_Divider, {\n            type: \"vertical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }), React.createElement(\"a\", {\n            onClick: function onClick(e) {\n              return _this2.delete(record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, \"\\u5220\\u9664\"));\n        }\n      }]; // 选中表格选项\n\n      var rowSelection = {\n        onSelect: function onSelect(record, selected, selectedRows) {\n          console.log(record, selected, selectedRows);\n          _this2.props.SystemStore.selectedRows = selectedRows;\n        },\n        onSelectAll: function onSelectAll(selected, selectedRows, changeRows) {\n          _this2.props.SystemStore.selectedRows = selectedRows;\n        }\n      };\n      return React.createElement(\"div\", {\n        style: {\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(TableLayout, {\n        rowKey: \"id\",\n        loading: isLoading,\n        onChange: this.pageChange,\n        rowSelection: rowSelection,\n        columns: columns,\n        dataSource: tableData,\n        pagination: PageInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props$SystemSto3 = this.props.SystemStore,\n          getData = _this$props$SystemSto3.getData,\n          PageInfo = _this$props$SystemSto3.PageInfo,\n          roleName = _this$props$SystemSto3.roleName;\n      getData(2, {\n        pageIndex: PageInfo.pageIndex,\n        pageSize: PageInfo.pageSize,\n        roleName: roleName\n      });\n    }\n  }]);\n\n  return DepartmentTable;\n}(Component), _temp)) || _class) || _class);\nexport default DepartmentTable;","map":{"version":3,"sources":["D:\\GGdownload\\设备运维前端\\bl-device-manage\\src\\layouts\\SystemManager\\RoleManager\\RoleTable.js"],"names":["React","Component","inject","observer","TableLayout","toJS","DepartmentTable","pageChange","e","props","SystemStore","PageInfo","pageIndex","current","getData","roleName","pageSize","editRole","record","formData","modalVisible","getMenuIdsByRole","id","delete","deleteRole","confirm","title","content","okText","cancelText","onOk","then","res","success","tableData","isLoading","columns","dataIndex","key","render","text","align","rowSelection","onSelect","selected","selectedRows","console","log","onSelectAll","changeRows","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { Divider, Modal, message, } from 'antd';\nimport TableLayout from 'Components/TableLayout'\nimport { toJS } from 'mobx';\n\n\n@inject('SystemStore')\n@observer\nclass DepartmentTable extends Component {\n    render() {\n        const { tableData, PageInfo, isLoading } = toJS(this.props.SystemStore)\n        //定义表头\n        const columns = [\n            {\n                title: '角色名',\n                dataIndex: 'roleName',\n                key: 'roleName',\n            },\n            {\n                title: '备注',\n                dataIndex: 'remark',\n                key: 'remark',\n                render: (text) => (\n                    <div>{text ? text : '-'}</div>\n                )\n            },\n            {\n                title: '操作',\n                key: 'x',\n                align: 'right',\n                render: (text, record) => (\n                    <span>\n                        <a onClick={e => this.editRole(record)}>编辑</a>\n                        <Divider type=\"vertical\" />\n                        <a onClick={e => this.delete(record)}>删除</a>\n                    </span>\n                )\n\n            }\n        ];\n        // 选中表格选项\n        const rowSelection = {\n            onSelect: (record, selected, selectedRows) => {\n                console.log(record, selected, selectedRows);\n                this.props.SystemStore.selectedRows = selectedRows\n            },\n            onSelectAll: (selected, selectedRows, changeRows) => {\n                this.props.SystemStore.selectedRows = selectedRows\n            }\n        };\n        return <div style={{ marginTop: 20 }}>\n            <TableLayout rowKey=\"id\" loading={isLoading} onChange={this.pageChange} rowSelection={rowSelection} columns={columns} dataSource={tableData} pagination={PageInfo} />\n        </div>\n    }\n    pageChange = (e) => {\n        this.props.SystemStore.PageInfo = e\n        this.props.SystemStore.PageInfo.pageIndex = e.current\n        const { getData, PageInfo, roleName } = this.props.SystemStore\n        getData(2, { pageIndex: PageInfo.pageIndex, pageSize: PageInfo.pageSize, roleName })\n\n    }\n    editRole = (record) => {\n        this.props.SystemStore.formData = record\n        this.props.SystemStore.modalVisible = !this.props.SystemStore.modalVisible\n        this.props.SystemStore.getMenuIdsByRole({ id: record.id })\n\n    }\n    delete = (record, ) => {\n        const { deleteRole, getData, PageInfo, roleName } = this.props.SystemStore\n        Modal.confirm({\n            title: '提示',\n            content: '是否确认删除该条数据？',\n            okText: '确认',\n            cancelText: '取消',\n            onOk: () => {\n                deleteRole(1, { id: record.id }).then(res => {\n                    message.success('删除成功')\n                    getData(2, { pageIndex: PageInfo.pageIndex, pageSize: PageInfo.pageSize, roleName })\n                })\n            },\n        });\n    }\n    componentDidMount() {\n        const { getData, PageInfo, roleName } = this.props.SystemStore\n        getData(2, { pageIndex: PageInfo.pageIndex, pageSize: PageInfo.pageSize, roleName })\n    }\n}\nexport default DepartmentTable;"]},"metadata":{},"sourceType":"module"}