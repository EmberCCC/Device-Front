{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { get, put } from '../utils/request';\nexport var requestUrl = {\n  deviceList: '/manage/statistics/device/list',\n  exportDevice: '/manage/statistics/device/export',\n  spareList: '/manage/statistics/spare/list',\n  exportSpare: '/manage/statistics/spare/export',\n  breakenList: '/manage/statistics/breaken/list',\n  exportBreaken: '/manage/statistics/breaken/export',\n  staffList: '/manage/statistics/staff/list',\n  exportStaff: '/manage/statistics/staff/export',\n  getBreakenInfo: '/manage/statistics/breaken/getBreakenInfo',\n  getAllWorkInfo: '/manage/statistics/staff/getAllWorkInfo',\n  getByLogId: '/manage/result/getByLogId'\n  /* 测试接口的数据 */\n\n};\nexport function getRequest(_x, _x2, _x3) {\n  return _getRequest.apply(this, arguments);\n}\n/* 测试接口的数据 */\n\nfunction _getRequest() {\n  _getRequest = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(url, data, options) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return get(url, data, options);\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getRequest.apply(this, arguments);\n}\n\nexport function putRequest(_x4, _x5, _x6) {\n  return _putRequest.apply(this, arguments);\n}\n\nfunction _putRequest() {\n  _putRequest = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(url, data, options) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return put(url, data, options);\n\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _putRequest.apply(this, arguments);\n}","map":{"version":3,"sources":["F:\\documents\\bl-device-manage\\src\\services\\statistics.js"],"names":["get","put","requestUrl","deviceList","exportDevice","spareList","exportSpare","breakenList","exportBreaken","staffList","exportStaff","getBreakenInfo","getAllWorkInfo","getByLogId","getRequest","url","data","options","putRequest"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,GAAd,QAAyB,kBAAzB;AAEA,OAAO,IAAMC,UAAU,GAAG;AACtBC,EAAAA,UAAU,EAAE,gCADU;AAEtBC,EAAAA,YAAY,EAAE,kCAFQ;AAGtBC,EAAAA,SAAS,EAAE,+BAHW;AAItBC,EAAAA,WAAW,EAAE,iCAJS;AAKtBC,EAAAA,WAAW,EAAE,iCALS;AAMtBC,EAAAA,aAAa,EAAE,mCANO;AAOtBC,EAAAA,SAAS,EAAE,+BAPW;AAQtBC,EAAAA,WAAW,EAAE,iCARS;AAStBC,EAAAA,cAAc,EAAE,2CATM;AAUtBC,EAAAA,cAAc,EAAE,yCAVM;AAWtBC,EAAAA,UAAU,EAAE;AAGhB;;AAd0B,CAAnB;AAeP,gBAAsBC,UAAtB;AAAA;AAAA;AAIA;;;;;2BAJO,iBAA0BC,GAA1B,EAA+BC,IAA/B,EAAqCC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACUjB,GAAG,CAACe,GAAD,EAAMC,IAAN,EAAYC,OAAZ,CADb;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAKP,gBAAsBC,UAAtB;AAAA;AAAA;;;;;2BAAO,kBAA0BH,GAA1B,EAA+BC,IAA/B,EAAqCC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACUhB,GAAG,CAACc,GAAD,EAAMC,IAAN,EAAYC,OAAZ,CADb;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { get, put } from '../utils/request';\n\nexport const requestUrl = {\n    deviceList: '/manage/statistics/device/list',\n    exportDevice: '/manage/statistics/device/export',\n    spareList: '/manage/statistics/spare/list',\n    exportSpare: '/manage/statistics/spare/export',\n    breakenList: '/manage/statistics/breaken/list',\n    exportBreaken: '/manage/statistics/breaken/export',\n    staffList: '/manage/statistics/staff/list',\n    exportStaff: '/manage/statistics/staff/export',\n    getBreakenInfo: '/manage/statistics/breaken/getBreakenInfo',\n    getAllWorkInfo: '/manage/statistics/staff/getAllWorkInfo',\n    getByLogId: '/manage/result/getByLogId',\n}\n\n/* 测试接口的数据 */\nexport async function getRequest(url, data, options) {\n    return await get(url, data, options);\n}\n\n/* 测试接口的数据 */\nexport async function putRequest(url, data, options) {\n    return await put(url, data, options);\n}"]},"metadata":{},"sourceType":"module"}