{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _objectSpread from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport \"antd/lib/badge/style\";\nimport _Badge from \"antd/lib/badge\";\nimport \"antd/lib/divider/style\";\nimport _Divider from \"antd/lib/divider\";\nimport _classCallCheck from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\src\\\\layouts\\\\SparepartsManage\\\\SpareDefinePage\\\\SparepartsTable.js\";\n\nimport React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { toJS } from 'mobx';\nvar SparepartsTable = (_dec = inject('SparepartsStore'), _dec(_class = observer(_class = (_temp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SparepartsTable, _Component);\n\n  function SparepartsTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SparepartsTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SparepartsTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.pageChange = function (e) {\n      _this.props.SparepartsStore.PageInfo = e;\n      _this.props.SparepartsStore.PageInfo.pageIndex = e.current;\n      var _this$props$Sparepart = _this.props.SparepartsStore,\n          getData = _this$props$Sparepart.getData,\n          PageInfo = _this$props$Sparepart.PageInfo,\n          columnsType = _this$props$Sparepart.columnsType,\n          typeName = _this$props$Sparepart.typeName,\n          spareName = _this$props$Sparepart.spareName;\n      columnsType === '1' ? getData(1, {\n        typeName: typeName,\n        pageIndex: PageInfo.pageIndex,\n        pageSize: PageInfo.pageSize\n      }) : getData(2, {\n        spareName: spareName,\n        pageIndex: PageInfo.pageIndex,\n        pageSize: PageInfo.pageSize\n      });\n    };\n\n    _this.getColumns = function () {\n      var columnsType = _this.props.SparepartsStore.columnsType;\n\n      if (columnsType === '2') {\n        return [{\n          title: '备件名称',\n          dataIndex: 'name',\n          key: 'name'\n        }, {\n          title: '备件编号',\n          dataIndex: 'model',\n          key: 'model'\n        }, {\n          title: '类型',\n          dataIndex: 'spareTypeName',\n          key: 'spareTypeName'\n        }, // {\n        //     title: '关联设备',\n        //     dataIndex: 'deviceModelId',\n        //     key: 'deviceModelId',\n        // },\n        // {\n        //     title: '库存预警值',\n        //     dataIndex: 'warnMax',\n        //     key: 'warnMax',\n        //     render: (text, record) => (\n        //         <div>{record.warnMin ? record.warnMin : 0} - {record.warnMax ? record.warnMax : \"∞\"}</div>\n        //     )\n        // },\n        {\n          title: '仓储位置',\n          dataIndex: 'address',\n          key: 'address'\n        }, {\n          title: '供应商',\n          dataIndex: 'supplier',\n          key: 'supplier'\n        }, {\n          title: '供货周期(月)',\n          dataIndex: 'period',\n          key: 'period'\n        }, // {\n        //     title: '联系电话',\n        //     dataIndex: 'phone',\n        //     key: 'phone',\n        // },\n        {\n          title: '操作',\n          key: 'x',\n          align: 'right',\n          render: function render(text, record) {\n            return React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 82\n              },\n              __self: this\n            }, React.createElement(\"a\", {\n              onClick: function onClick(e) {\n                return _this.edit(2, record);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 83\n              },\n              __self: this\n            }, \"\\u8BE6\\u60C5\"), React.createElement(_Divider, {\n              type: \"vertical\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84\n              },\n              __self: this\n            }), React.createElement(\"a\", {\n              onClick: function onClick(e) {\n                return _this.edit(1, record);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 85\n              },\n              __self: this\n            }, \"\\u7F16\\u8F91\"));\n          }\n        }];\n      } else {\n        return [{\n          title: '备件类型名称',\n          dataIndex: 'name',\n          key: 'name'\n        }, {\n          title: '状态',\n          dataIndex: 'status',\n          key: 'status',\n          render: function render(text) {\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 104\n              },\n              __self: this\n            }, text ? React.createElement(_Badge, {\n              status: \"success\",\n              text: \"\\u542F\\u7528\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 105\n              },\n              __self: this\n            }) : React.createElement(_Badge, {\n              status: \"error\",\n              text: \"\\u7981\\u7528\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 105\n              },\n              __self: this\n            }));\n          }\n        }, {\n          title: '操作',\n          key: 'x',\n          align: 'right',\n          render: function render(text, record, index) {\n            return React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 112\n              },\n              __self: this\n            }, React.createElement(\"a\", {\n              onClick: function onClick(e) {\n                return _this.props.SparepartsStore.modalChange(1, record);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 113\n              },\n              __self: this\n            }, \"\\u7F16\\u8F91\"), React.createElement(_Divider, {\n              type: \"vertical\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 114\n              },\n              __self: this\n            }), React.createElement(\"a\", {\n              onClick: function onClick(e) {\n                return _this.changeStatus(index, record);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 115\n              },\n              __self: this\n            }, record.typeStatus ? '禁用' : '启用'));\n          }\n        }];\n      }\n    };\n\n    _this.edit = function (type, record) {\n      _this.props.SparepartsStore.getAllType();\n\n      _this.props.SparepartsStore.modalChange(type, record);\n    };\n\n    _this.changeStatus = function (index, record) {\n      _this.props.SparepartsStore.addNewType(_objectSpread({}, record, {\n        typeStatus: record.typeStatus ? 0 : 1\n      })).then(function () {\n        _message.success(record.typeStatus ? '禁用成功' : '启用成功');\n\n        _this.props.SparepartsStore.tableData[index].typeStatus = !record.typeStatus;\n      });\n    };\n\n    _this.delete = function (record) {\n      var _this$props$Sparepart2 = _this.props.SparepartsStore,\n          deleteType = _this$props$Sparepart2.deleteType,\n          deleteSpa = _this$props$Sparepart2.deleteSpa,\n          getData = _this$props$Sparepart2.getData,\n          PageInfo = _this$props$Sparepart2.PageInfo,\n          columnsType = _this$props$Sparepart2.columnsType,\n          typeName = _this$props$Sparepart2.typeName,\n          spareName = _this$props$Sparepart2.spareName;\n\n      _Modal.confirm({\n        title: '提示',\n        content: '是否确认删除该条数据',\n        okText: '确认',\n        cancelText: '取消',\n        onOk: function onOk() {\n          if (columnsType === '1') {\n            deleteType({\n              id: record.id\n            }).then(function (res) {\n              if (res) {\n                _message.success('删除成功');\n\n                getData(1, {\n                  typeName: typeName,\n                  pageIndex: PageInfo.pageIndex,\n                  pageSize: PageInfo.pageSize\n                });\n              }\n            });\n          } else {\n            deleteSpa({\n              id: record.id\n            }).then(function (res) {\n              if (res) {\n                _message.success('删除成功');\n\n                getData(2, {\n                  spareName: spareName,\n                  pageIndex: PageInfo.pageIndex,\n                  pageSize: PageInfo.pageSize\n                });\n              }\n            });\n          }\n        },\n        onCancel: function onCancel() {\n          console.log('Cancel');\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SparepartsTable, [{\n    key: \"render\",\n    value: function render() {\n      var _toJS = toJS(this.props.SparepartsStore),\n          tableData = _toJS.tableData,\n          PageInfo = _toJS.PageInfo,\n          isLoading = _toJS.isLoading;\n\n      return React.createElement(\"div\", {\n        style: {\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(_Table, {\n        rowSelection: this.props.rowSelection,\n        size: \"middle\",\n        rowKey: \"id\",\n        loading: isLoading,\n        columns: this.getColumns(),\n        dataSource: tableData,\n        pagination: PageInfo,\n        onChange: this.pageChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props$Sparepart3 = this.props.SparepartsStore,\n          getData = _this$props$Sparepart3.getData,\n          PageInfo = _this$props$Sparepart3.PageInfo,\n          columnsType = _this$props$Sparepart3.columnsType,\n          typeName = _this$props$Sparepart3.typeName,\n          spareName = _this$props$Sparepart3.spareName;\n      columnsType === '1' ? getData(1, {\n        typeName: typeName,\n        pageIndex: PageInfo.pageIndex,\n        pageSize: PageInfo.pageSize\n      }) : getData(2, {\n        spareName: spareName,\n        pageIndex: PageInfo.pageIndex,\n        pageSize: PageInfo.pageSize\n      });\n    }\n  }]);\n\n  return SparepartsTable;\n}(Component), _temp)) || _class) || _class);\nexport default SparepartsTable;","map":{"version":3,"sources":["D:\\GGdownload\\设备运维前端\\bl-device-manage\\src\\layouts\\SparepartsManage\\SpareDefinePage\\SparepartsTable.js"],"names":["React","Component","inject","observer","toJS","SparepartsTable","pageChange","e","props","SparepartsStore","PageInfo","pageIndex","current","getData","columnsType","typeName","spareName","pageSize","getColumns","title","dataIndex","key","align","render","text","record","edit","index","modalChange","changeStatus","typeStatus","type","getAllType","addNewType","then","success","tableData","delete","deleteType","deleteSpa","confirm","content","okText","cancelText","onOk","id","res","onCancel","console","log","isLoading","marginTop","rowSelection"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { Table, Divider, message, Modal, Badge } from 'antd';\nimport { toJS } from 'mobx';\n\n\n@inject('SparepartsStore')\n@observer\nclass SparepartsTable extends Component {\n    render() {\n        const { tableData, PageInfo, isLoading } = toJS(this.props.SparepartsStore)\n        return <div style={{ marginTop: 20 }}>\n            <Table  \n                rowSelection={this.props.rowSelection}\n                size='middle' rowKey=\"id\" loading={isLoading} columns={this.getColumns()} dataSource={tableData} pagination={PageInfo} onChange={this.pageChange} />\n        </div>;\n    }\n    pageChange = (e) => {\n        this.props.SparepartsStore.PageInfo = e\n        this.props.SparepartsStore.PageInfo.pageIndex = e.current\n        const { getData, PageInfo, columnsType, typeName, spareName } = this.props.SparepartsStore\n        columnsType === '1' ? getData(1, { typeName, pageIndex: PageInfo.pageIndex, pageSize: PageInfo.pageSize }) : getData(2, { spareName, pageIndex: PageInfo.pageIndex, pageSize: PageInfo.pageSize })\n    }\n    getColumns = () => {\n        const { columnsType } = this.props.SparepartsStore\n        if (columnsType === '2') {\n            return [\n\n                {\n                    title: '备件名称',\n                    dataIndex: 'name',\n                    key: 'name',\n                },\n                {\n                    title: '备件编号',\n                    dataIndex: 'model',\n                    key: 'model',\n                },\n                {\n                    title: '类型',\n                    dataIndex: 'spareTypeName',\n                    key: 'spareTypeName',\n                },\n                // {\n                //     title: '关联设备',\n                //     dataIndex: 'deviceModelId',\n                //     key: 'deviceModelId',\n                // },\n                // {\n                //     title: '库存预警值',\n                //     dataIndex: 'warnMax',\n                //     key: 'warnMax',\n                //     render: (text, record) => (\n                //         <div>{record.warnMin ? record.warnMin : 0} - {record.warnMax ? record.warnMax : \"∞\"}</div>\n                //     )\n                // },\n                {\n                    title: '仓储位置',\n                    dataIndex: 'address',\n                    key: 'address',\n                },\n                {\n                    title: '供应商',\n                    dataIndex: 'supplier',\n                    key: 'supplier',\n                },\n                {\n                    title: '供货周期(月)',\n                    dataIndex: 'period',\n                    key: 'period',\n                },\n                // {\n                //     title: '联系电话',\n                //     dataIndex: 'phone',\n                //     key: 'phone',\n                // },\n                {\n                    title: '操作',\n                    key: 'x',\n                    align: 'right',\n                    render: (text, record) => (\n                        <span>\n                            <a onClick={e => this.edit(2, record)}>详情</a>\n                            <Divider type=\"vertical\" />\n                            <a onClick={e => this.edit(1, record)}>编辑</a>\n                            {/* <Divider type=\"vertical\" />\n                           <a onClick={e => this.delete(record)}>删除</a>*/}\n                        </span>\n                    )\n\n                }\n            ]\n        } else {\n            return [\n                {\n                    title: '备件类型名称',\n                    dataIndex: 'name',\n                    key: 'name',\n                },\n                {\n                    title: '状态',\n                    dataIndex: 'status',\n                    key: 'status',\n                    render: (text) => (<div>\n                        {text ? <Badge status=\"success\" text=\"启用\" /> : <Badge status=\"error\" text=\"禁用\" />}</div>)\n                },\n                {\n                    title: '操作',\n                    key: 'x',\n                    align: 'right',\n                    render: (text, record, index) => (\n                        <span>\n                            <a onClick={e => this.props.SparepartsStore.modalChange(1, record)}>编辑</a>\n                            <Divider type=\"vertical\" />\n                            <a onClick={e => this.changeStatus(index, record)}>{record.typeStatus ? '禁用' : '启用'}</a>\n                            {/*<Divider type=\"vertical\" />\n                          <a onClick={e => this.delete(record)}>删除</a>*/}\n                        </span>\n                    )\n\n                }\n            ]\n        }\n    }\n    edit = (type, record) => {\n        this.props.SparepartsStore.getAllType()\n        this.props.SparepartsStore.modalChange(type, record)\n    }\n    changeStatus = (index, record) => {\n        this.props.SparepartsStore.addNewType({ ...record, typeStatus: record.typeStatus ? 0 : 1 }).then(() => {\n            message.success(record.typeStatus ? '禁用成功' : '启用成功')\n            this.props.SparepartsStore.tableData[index].typeStatus = !record.typeStatus\n        })\n    }\n    delete = (record) => {\n        const { deleteType, deleteSpa, getData, PageInfo, columnsType, typeName, spareName } = this.props.SparepartsStore\n        Modal.confirm({\n            title: '提示',\n            content: '是否确认删除该条数据',\n            okText: '确认',\n            cancelText: '取消',\n            onOk() {\n                if (columnsType === '1') {\n                    deleteType({ id: record.id }).then(res => {\n                        if (res) {\n                            message.success('删除成功')\n                            getData(1, { typeName, pageIndex: PageInfo.pageIndex, pageSize: PageInfo.pageSize })\n                        }\n                    })\n                } else {\n                    deleteSpa({ id: record.id }).then(res => {\n                        if (res) {\n                            message.success('删除成功')\n                            getData(2, { spareName, pageIndex: PageInfo.pageIndex, pageSize: PageInfo.pageSize })\n                        }\n                    })\n                }\n            },\n            onCancel() {\n                console.log('Cancel');\n            },\n        });\n\n    }\n    componentDidMount() {\n        const { getData, PageInfo, columnsType, typeName, spareName } = this.props.SparepartsStore\n        columnsType === '1' ? getData(1, { typeName, pageIndex: PageInfo.pageIndex, pageSize: PageInfo.pageSize }) : getData(2, { spareName, pageIndex: PageInfo.pageIndex, pageSize: PageInfo.pageSize })\n    }\n}\nexport default SparepartsTable;"]},"metadata":{},"sourceType":"module"}