{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _omit = _interopRequireDefault(require(\"omit.js\"));\n\nvar _debounce = _interopRequireDefault(require(\"lodash/debounce\"));\n\nvar _util = require(\"rc-tree/lib/util\");\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _configProvider = require(\"../config-provider\");\n\nvar _Tree = _interopRequireDefault(require(\"./Tree\"));\n\nvar _util2 = require(\"./util\");\n\nvar _icon = _interopRequireDefault(require(\"../icon\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nfunction getIcon(props) {\n  var isLeaf = props.isLeaf,\n      expanded = props.expanded;\n\n  if (isLeaf) {\n    return /*#__PURE__*/React.createElement(_icon[\"default\"], {\n      type: \"file\"\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(_icon[\"default\"], {\n    type: expanded ? 'folder-open' : 'folder'\n  });\n}\n\nvar DirectoryTree = /*#__PURE__*/function (_React$Component) {\n  _inherits(DirectoryTree, _React$Component);\n\n  var _super = _createSuper(DirectoryTree);\n\n  function DirectoryTree(props) {\n    var _this;\n\n    _classCallCheck(this, DirectoryTree);\n\n    _this = _super.call(this, props);\n\n    _this.onExpand = function (expandedKeys, info) {\n      var onExpand = _this.props.onExpand;\n\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys\n      }); // Call origin function\n\n\n      if (onExpand) {\n        return onExpand(expandedKeys, info);\n      }\n\n      return undefined;\n    };\n\n    _this.onClick = function (event, node) {\n      var _this$props = _this.props,\n          onClick = _this$props.onClick,\n          expandAction = _this$props.expandAction; // Expand the tree\n\n      if (expandAction === 'click') {\n        _this.onDebounceExpand(event, node);\n      }\n\n      if (onClick) {\n        onClick(event, node);\n      }\n    };\n\n    _this.onDoubleClick = function (event, node) {\n      var _this$props2 = _this.props,\n          onDoubleClick = _this$props2.onDoubleClick,\n          expandAction = _this$props2.expandAction; // Expand the tree\n\n      if (expandAction === 'doubleClick') {\n        _this.onDebounceExpand(event, node);\n      }\n\n      if (onDoubleClick) {\n        onDoubleClick(event, node);\n      }\n    };\n\n    _this.onSelect = function (keys, event) {\n      var _this$props3 = _this.props,\n          onSelect = _this$props3.onSelect,\n          multiple = _this$props3.multiple,\n          children = _this$props3.children;\n      var _this$state$expandedK = _this.state.expandedKeys,\n          expandedKeys = _this$state$expandedK === void 0 ? [] : _this$state$expandedK;\n      var node = event.node,\n          nativeEvent = event.nativeEvent;\n      var _node$props$eventKey = node.props.eventKey,\n          eventKey = _node$props$eventKey === void 0 ? '' : _node$props$eventKey;\n      var newState = {}; // We need wrap this event since some value is not same\n\n      var newEvent = _extends(_extends({}, event), {\n        selected: true\n      }); // Windows / Mac single pick\n\n\n      var ctrlPick = nativeEvent.ctrlKey || nativeEvent.metaKey;\n      var shiftPick = nativeEvent.shiftKey; // Generate new selected keys\n\n      var newSelectedKeys;\n\n      if (multiple && ctrlPick) {\n        // Control click\n        newSelectedKeys = keys;\n        _this.lastSelectedKey = eventKey;\n        _this.cachedSelectedKeys = newSelectedKeys;\n        newEvent.selectedNodes = (0, _util2.convertDirectoryKeysToNodes)(children, newSelectedKeys);\n      } else if (multiple && shiftPick) {\n        // Shift click\n        newSelectedKeys = Array.from(new Set([].concat(_toConsumableArray(_this.cachedSelectedKeys || []), _toConsumableArray((0, _util2.calcRangeKeys)(children, expandedKeys, eventKey, _this.lastSelectedKey)))));\n        newEvent.selectedNodes = (0, _util2.convertDirectoryKeysToNodes)(children, newSelectedKeys);\n      } else {\n        // Single click\n        newSelectedKeys = [eventKey];\n        _this.lastSelectedKey = eventKey;\n        _this.cachedSelectedKeys = newSelectedKeys;\n        newEvent.selectedNodes = [event.node];\n      }\n\n      newState.selectedKeys = newSelectedKeys;\n\n      if (onSelect) {\n        onSelect(newSelectedKeys, newEvent);\n      }\n\n      _this.setUncontrolledState(newState);\n    };\n\n    _this.setTreeRef = function (node) {\n      _this.tree = node;\n    };\n\n    _this.expandFolderNode = function (event, node) {\n      var isLeaf = node.props.isLeaf;\n\n      if (isLeaf || event.shiftKey || event.metaKey || event.ctrlKey) {\n        return;\n      } // Get internal rc-tree\n\n\n      var internalTree = _this.tree.tree; // Call internal rc-tree expand function\n      // https://github.com/ant-design/ant-design/issues/12567\n\n      internalTree.onNodeExpand(event, node);\n    };\n\n    _this.setUncontrolledState = function (state) {\n      var newState = (0, _omit[\"default\"])(state, Object.keys(_this.props));\n\n      if (Object.keys(newState).length) {\n        _this.setState(newState);\n      }\n    };\n\n    _this.renderDirectoryTree = function (_ref) {\n      var getPrefixCls = _ref.getPrefixCls;\n\n      var _a = _this.props,\n          customizePrefixCls = _a.prefixCls,\n          className = _a.className,\n          props = __rest(_a, [\"prefixCls\", \"className\"]);\n\n      var _this$state = _this.state,\n          expandedKeys = _this$state.expandedKeys,\n          selectedKeys = _this$state.selectedKeys;\n      var prefixCls = getPrefixCls('tree', customizePrefixCls);\n      var connectClassName = (0, _classnames[\"default\"])(\"\".concat(prefixCls, \"-directory\"), className);\n      return /*#__PURE__*/React.createElement(_Tree[\"default\"], _extends({\n        icon: getIcon,\n        ref: _this.setTreeRef\n      }, props, {\n        prefixCls: prefixCls,\n        className: connectClassName,\n        expandedKeys: expandedKeys,\n        selectedKeys: selectedKeys,\n        onSelect: _this.onSelect,\n        onClick: _this.onClick,\n        onDoubleClick: _this.onDoubleClick,\n        onExpand: _this.onExpand\n      }));\n    };\n\n    var defaultExpandAll = props.defaultExpandAll,\n        defaultExpandParent = props.defaultExpandParent,\n        expandedKeys = props.expandedKeys,\n        defaultExpandedKeys = props.defaultExpandedKeys,\n        children = props.children;\n\n    var _convertTreeToEntitie = (0, _util.convertTreeToEntities)(children),\n        keyEntities = _convertTreeToEntitie.keyEntities; // Selected keys\n\n\n    _this.state = {\n      selectedKeys: props.selectedKeys || props.defaultSelectedKeys || []\n    }; // Expanded keys\n\n    if (defaultExpandAll) {\n      if (props.treeData) {\n        _this.state.expandedKeys = (0, _util2.getFullKeyListByTreeData)(props.treeData);\n      } else {\n        _this.state.expandedKeys = (0, _util2.getFullKeyList)(props.children);\n      }\n    } else if (defaultExpandParent) {\n      _this.state.expandedKeys = (0, _util.conductExpandParent)(expandedKeys || defaultExpandedKeys, keyEntities);\n    } else {\n      _this.state.expandedKeys = expandedKeys || defaultExpandedKeys;\n    }\n\n    _this.onDebounceExpand = (0, _debounce[\"default\"])(_this.expandFolderNode, 200, {\n      leading: true\n    });\n    return _this;\n  }\n\n  _createClass(DirectoryTree, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(_configProvider.ConfigConsumer, null, this.renderDirectoryTree);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      var newState = {};\n\n      if ('expandedKeys' in nextProps) {\n        newState.expandedKeys = nextProps.expandedKeys;\n      }\n\n      if ('selectedKeys' in nextProps) {\n        newState.selectedKeys = nextProps.selectedKeys;\n      }\n\n      return newState;\n    }\n  }]);\n\n  return DirectoryTree;\n}(React.Component);\n\nDirectoryTree.defaultProps = {\n  showIcon: true,\n  expandAction: 'click'\n};\n(0, _reactLifecyclesCompat.polyfill)(DirectoryTree);\nvar _default = DirectoryTree;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}