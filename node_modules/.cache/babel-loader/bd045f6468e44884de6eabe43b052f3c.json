{"ast":null,"code":"import \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport _defineProperty from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\src\\\\layouts\\\\BasicManage\\\\MaintainPage\\\\Check\\\\SchemaMenu.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { toJS } from 'mobx';\nimport GlobalList from 'components/GlobalList';\nimport { omit } from 'lodash';\nimport { setSchemaColumns, setSchemaFormColumns, setSchemaModalColumns } from '../cell/methods';\nimport { DraggableArea } from 'react-draggable-tags';\nvar SchemaMenu = (_dec = inject('DeviceMaintainStore'), _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_Component) {\n  _inherits(SchemaMenu, _Component);\n\n  var _super = _createSuper(SchemaMenu);\n\n  function SchemaMenu(props) {\n    var _this;\n\n    _classCallCheck(this, SchemaMenu);\n\n    _this = _super.call(this, props);\n\n    _this.handleDetail = function (id) {\n      _this.store.status = 'query';\n\n      _this.store.getInfo({\n        id: id\n      }, 'server').then(function () {\n        _this.store.editVisible = !_this.store.editVisible;\n      });\n    };\n\n    _this.handleStatus = function (record) {\n      _this.store.save({\n        id: record.id,\n        planStatus: record.planStatus === 1 ? 0 : 1,\n        maintainType: 1\n      }, 'schema');\n    };\n\n    _this.handleVisible = function () {\n      /* 每次打开弹窗 获取所有的点检列表 */\n      if (!_this.state.visible) {\n        _this.store.getMaintainServer({}).then(function () {\n          if (_this.store.status == 'edit') {\n            _this.state.tags = [];\n            _this.store.currentMainSchame.contentIds && _this.store.currentMainSchame.contentIds.split(',').map(function (item) {\n              var tag = toJS(_this.store.serverList).filter(function (tag) {\n                return tag.id === parseInt(item);\n              })[0];\n\n              if (tag !== undefined) {\n                _this.state.tags.push(tag);\n              }\n            });\n          } else {\n            _this.state.tags = [];\n            _this.state.modalSelectedRowKeys = [];\n          }\n\n          _this.setState({});\n        });\n      }\n\n      if (_this.state.visible) {\n        _this.state = _objectSpread({}, _this.state, {\n          selectedRowKeys: [],\n          modalSelectedRowKeys: [],\n          //弹窗内部的选项\n          tags: []\n        });\n      }\n\n      _this.setState({\n        visible: !_this.state.visible\n      });\n    };\n\n    _this.onModalItemSelect = function (selectedRowKeys) {\n      _this.state.tags = [];\n      selectedRowKeys.map(function (item) {\n        var tag = toJS(_this.store.serverList).filter(function (tag) {\n          return tag.id === item;\n        })[0];\n\n        if (tag !== undefined) {\n          _this.state.tags.push(tag);\n        }\n      });\n\n      _this.setState({\n        modalSelectedRowKeys: selectedRowKeys\n      });\n    };\n\n    _this.changeTag = function (tags) {\n      _this.setState({\n        tags: tags\n      });\n    };\n\n    _this.handleClickDelete = function (tag) {\n      var tags = _this.state.tags.filter(function (t) {\n        return tag.id !== t.id;\n      });\n\n      var selectedRowKeys = [];\n      tags.map(function (item) {\n        selectedRowKeys.push(item.id);\n      });\n\n      _this.setState({\n        tags: tags,\n        modalSelectedRowKeys: selectedRowKeys\n      });\n    };\n\n    _this.onTimeChange = function (time, timeString) {\n      _this.setState({\n        checkTime: timeString\n      });\n    };\n\n    _this.handleSubmit = function (values) {\n      var _this$store = _this.store,\n          deviceType = _this$store.deviceType,\n          status = _this$store.status,\n          currentMainSchame = _this$store.currentMainSchame,\n          maintainType = _this$store.maintainType;\n      var tags = _this.state.tags;\n      _this.state.modalSelectedRowKeys = [];\n      tags.map(function (item) {\n        _this.state.modalSelectedRowKeys.push(item.id);\n      });\n\n      var params = _objectSpread({\n        deviceType: deviceType,\n        contentIds: _this.state.modalSelectedRowKeys.join(','),\n        maintainType: maintainType\n      }, omit(values, 'checkTime'), {\n        outlineHour: _this.state.checkTime.split(':')[0],\n        outlineMinute: _this.state.checkTime.split(':')[1]\n      });\n\n      if (status !== 'add') {\n        params.id = currentMainSchame.id;\n      }\n\n      _this.store.save(params, 'schema');\n\n      _this.handleVisible();\n    };\n\n    _this.handleEdit = function (value) {\n      _this.store.status = 'edit';\n\n      _this.store.getInfo({\n        id: value\n      }, 'schema').then(function () {\n        var data = _this.store.currentMainSchame.contentIds.split(','),\n            newDs = [];\n\n        var _toJS = toJS(_this.store.currentMainSchame),\n            outlineHour = _toJS.outlineHour,\n            outlineMinute = _toJS.outlineMinute;\n\n        _this.setState({\n          checkTime: outlineHour + ':' + outlineMinute + ':' + '00'\n        });\n\n        data.map(function (item) {\n          newDs.push(parseFloat(item));\n        });\n        console.log(newDs);\n\n        _this.setState({\n          modalSelectedRowKeys: newDs\n        }, function () {\n          _this.handleVisible();\n        });\n      });\n    };\n\n    _this.handleDelete = function (_ref) {\n      var type = _ref.type,\n          value = _ref.value;\n\n      if (type === 'batch') {\n        if (_this.state.selectedRowKeys.length < 1) {\n          _Modal.warn({\n            title: '提示',\n            content: '请选择需要删除的内容'\n          });\n        } else {\n          _Modal.confirm({\n            title: '提示',\n            content: '确定删除选中的' + _this.state.selectedRowKeys.length + '条点检内容？',\n            okText: '确定',\n            cancelText: '取消',\n            onOk: function onOk() {\n              _this.store.delete({\n                ids: _this.state.selectedRowKeys\n              }, 'schema');\n            }\n          });\n        }\n      } else {\n        _Modal.confirm({\n          title: '提示',\n          content: '确定删除当前点检内容？',\n          okText: '确定',\n          cancelText: '取消',\n          onOk: function onOk() {\n            _this.store.delete({\n              id: value\n            }, 'schema');\n          }\n        });\n      }\n    };\n\n    _this.handleSelect = function (selectedRowKeys) {\n      _this.setState({\n        selectedRowKeys: selectedRowKeys\n      });\n    };\n\n    _this.handleCheckTag = function (tag) {\n      _this.store.deviceType = tag.id;\n\n      _this.store.getMaintainSchema({\n        typeId: tag.id\n      });\n    };\n\n    _this.store = _this.props.DeviceMaintainStore;\n    _this.state = {\n      selectedRowKeys: [],\n      modalSelectedRowKeys: [],\n      //弹窗内部的选项\n      visible: false,\n      tags: [],\n      checkTime: ''\n    };\n    return _this;\n  }\n\n  _createClass(SchemaMenu, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$store2 = this.store,\n          schemaList = _this$store2.schemaList,\n          schemaPage = _this$store2.schemaPage,\n          serverList = _this$store2.serverList,\n          deviceList = _this$store2.deviceList,\n          isLoading = _this$store2.isLoading,\n          status = _this$store2.status,\n          currentMainSchame = _this$store2.currentMainSchame;\n\n      var _toJS2 = toJS(this.store.currentMainSchame),\n          outlineHour = _toJS2.outlineHour,\n          outlineMinute = _toJS2.outlineMinute;\n\n      var rowSelection = {\n        selectedRowKeys: this.state.selectedRowKeys,\n        onChange: this.handleSelect\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginTop: '10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(GlobalList, {\n        checkedTag: {\n          dataSource: deviceList,\n          title: '设备类型',\n          PopoVisible: false,\n          keyName: 'typeName',\n          defaultActiveKey: deviceList[0],\n          content: deviceList,\n          onClick: this.handleCheckTag\n        },\n        table: {\n          rowKey: 'id',\n          columns: setSchemaColumns({\n            handleDelete: this.handleDelete,\n            handleEdit: this.handleEdit,\n            handleStatus: this.handleStatus\n          }),\n          dataSource: schemaList,\n          pagination: _objectSpread({}, schemaPage, {\n            onChange: function onChange(pageIndex, pageSize) {\n              _this2.store.getScheme({\n                pageIndex: pageIndex,\n                pageSize: pageSize\n              });\n            }\n          }),\n          loading: isLoading,\n          rowSelection: rowSelection,\n          btns: [{\n            name: /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(\"i\", {\n              className: \"iconfont icon-add icon-spacing\",\n              style: {\n                fontSize: '12px'\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 20\n              }\n            }), \"\\u65B0\\u589E\"),\n            onClick: function onClick() {\n              _this2.store.status = 'add';\n\n              _this2.handleVisible();\n            },\n            type: 'primary',\n            className: 'add-btn'\n          } // {\n          // \tname: '删除',\n          // \tonClick: () => this.handleDelete({type:'batch'})\n          // }\n          ]\n        },\n        modal: {\n          visible: this.state.visible,\n          title: status === 'add' ? '新增' : '编辑',\n          onCancel: this.handleVisible,\n          onOk: this.handleSubmit,\n          isForm: true,\n          formColumns: setSchemaFormColumns({\n            status: status,\n            currentMain: currentMainSchame,\n            maintainType: 1,\n            onTimeChange: this.onTimeChange,\n            checkTime: outlineHour + ':' + outlineMinute + ':' + '00'\n          }),\n          width: 700,\n          otherContent: /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(_Table, {\n            scroll: {\n              y: 300\n            },\n            rowKey: \"id\",\n            columns: setSchemaModalColumns({\n              handleDetail: this.handleDetail,\n              contentLabel: '点检内容',\n              contentTypeLabel: '点检类型'\n            }),\n            dataSource: serverList,\n            rowSelection: {\n              selectedRowKeys: this.state.modalSelectedRowKeys,\n              onChange: this.onModalItemSelect,\n              selection: {\n                key: 'id',\n                text: 'name'\n              }\n            },\n            pagination: false,\n            size: \"small\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 8\n            }\n          }), this.state.tags.length > 0 && [/*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              fontSize: '14px',\n              fontWeight: '600',\n              padding: '10px'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 10\n            }\n          }, /*#__PURE__*/React.createElement(_Icon, {\n            style: {\n              marginRight: '5px',\n              color: '#6236FF'\n            },\n            type: \"info-circle\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 11\n            }\n          }), \"\\u663E\\u793A\\u987A\\u5E8F\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"Simple-2\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 10\n            }\n          }, /*#__PURE__*/React.createElement(DraggableArea, {\n            tags: this.state.tags,\n            render: function render(_ref2) {\n              var tag = _ref2.tag,\n                  index = _ref2.index;\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: \"tag\",\n                key: index,\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 13\n                }\n              }, /*#__PURE__*/React.createElement(\"img\", {\n                src: require('../../../../assets/delete.png'),\n                alt: \"delete\",\n                className: \"delete\",\n                onClick: function onClick() {\n                  return _this2.handleClickDelete(tag);\n                },\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 14\n                }\n              }), tag.content);\n            },\n            onChange: this.changeTag,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 11\n            }\n          }))])\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 5\n        }\n      }));\n    }\n    /* 点击查看库中每项内容的详情 */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.store.getMaintainSchema({\n        typeId: this.store.deviceType\n      });\n    }\n  }]);\n\n  return SchemaMenu;\n}(Component), _temp)) || _class) || _class);\nexport default SchemaMenu;","map":{"version":3,"sources":["C:/Users/Misaki/Desktop/kda/设备运维前端/bl-device-manage/src/layouts/BasicManage/MaintainPage/Check/SchemaMenu.js"],"names":["React","Component","inject","observer","toJS","GlobalList","omit","setSchemaColumns","setSchemaFormColumns","setSchemaModalColumns","DraggableArea","SchemaMenu","props","handleDetail","id","store","status","getInfo","then","editVisible","handleStatus","record","save","planStatus","maintainType","handleVisible","state","visible","getMaintainServer","tags","currentMainSchame","contentIds","split","map","item","tag","serverList","filter","parseInt","undefined","push","modalSelectedRowKeys","setState","selectedRowKeys","onModalItemSelect","changeTag","handleClickDelete","t","onTimeChange","time","timeString","checkTime","handleSubmit","values","deviceType","params","join","outlineHour","outlineMinute","handleEdit","value","data","newDs","parseFloat","console","log","handleDelete","type","length","warn","title","content","confirm","okText","cancelText","onOk","delete","ids","handleSelect","handleCheckTag","getMaintainSchema","typeId","DeviceMaintainStore","schemaList","schemaPage","deviceList","isLoading","rowSelection","onChange","marginTop","dataSource","PopoVisible","keyName","defaultActiveKey","onClick","rowKey","columns","pagination","pageIndex","pageSize","getScheme","loading","btns","name","fontSize","className","onCancel","isForm","formColumns","currentMain","width","otherContent","y","contentLabel","contentTypeLabel","selection","key","text","fontWeight","padding","marginRight","color","index","require"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { toJS } from 'mobx';\nimport GlobalList from 'components/GlobalList';\nimport { Modal, Table, Icon } from 'antd';\nimport { omit } from 'lodash';\nimport { setSchemaColumns, setSchemaFormColumns, setSchemaModalColumns, } from '../cell/methods';\nimport { DraggableArea } from 'react-draggable-tags';\n\n@inject('DeviceMaintainStore')\n@observer\nclass SchemaMenu extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.store = this.props.DeviceMaintainStore;\n\t\tthis.state = {\n\t\t\tselectedRowKeys: [],\n\t\t\tmodalSelectedRowKeys: [], //弹窗内部的选项\n\t\t\tvisible: false,\n\t\t\ttags: [],\n\t\t\tcheckTime: '',\n\t\t};\n\t}\n\trender() {\n\t\tconst {\n\t\t\tschemaList,\n\t\t\tschemaPage,\n\t\t\tserverList,\n\t\t\tdeviceList,\n\t\t\tisLoading,\n\t\t\tstatus,\n\t\t\tcurrentMainSchame\n\t\t} = this.store;\n\t\tconst { outlineHour, outlineMinute } = toJS(this.store.currentMainSchame);\n\t\tconst rowSelection = {\n\t\t\tselectedRowKeys: this.state.selectedRowKeys,\n\t\t\tonChange: this.handleSelect\n\t\t};\n\t\treturn (\n\t\t\t<div style={{ marginTop: '10px' }}>\n\t\t\t\t<GlobalList\n\t\t\t\t\tcheckedTag={{\n\t\t\t\t\t\tdataSource: deviceList,\n\t\t\t\t\t\ttitle: '设备类型',\n\t\t\t\t\t\tPopoVisible: false,\n\t\t\t\t\t\tkeyName: 'typeName',\n\t\t\t\t\t\tdefaultActiveKey: deviceList[0],\n\t\t\t\t\t\tcontent: deviceList,\n\t\t\t\t\t\tonClick: this.handleCheckTag\n\t\t\t\t\t}}\n\t\t\t\t\ttable={{\n\t\t\t\t\t\trowKey: 'id',\n\t\t\t\t\t\tcolumns: setSchemaColumns({\n\t\t\t\t\t\t\thandleDelete: this.handleDelete, handleEdit: this.handleEdit, handleStatus: this.handleStatus\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tdataSource: schemaList,\n\t\t\t\t\t\tpagination: {\n\t\t\t\t\t\t\t...schemaPage,\n\t\t\t\t\t\t\tonChange: (pageIndex, pageSize) => {\n\t\t\t\t\t\t\t\tthis.store.getScheme({\n\t\t\t\t\t\t\t\t\tpageIndex,\n\t\t\t\t\t\t\t\t\tpageSize,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tloading: isLoading,\n\t\t\t\t\t\trowSelection,\n\t\t\t\t\t\tbtns: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: <div><i className=\"iconfont icon-add icon-spacing\" style={{ fontSize: '12px' }}></i>新增</div>,\n\t\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\t\tthis.store.status = 'add';\n\t\t\t\t\t\t\t\t\tthis.handleVisible();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ttype: 'primary',\n\t\t\t\t\t\t\t\tclassName: 'add-btn'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\t// \tname: '删除',\n\t\t\t\t\t\t\t// \tonClick: () => this.handleDelete({type:'batch'})\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t]\n\t\t\t\t\t}}\n\t\t\t\t\tmodal={{\n\t\t\t\t\t\tvisible: this.state.visible,\n\t\t\t\t\t\ttitle: status === 'add' ? '新增' : '编辑',\n\t\t\t\t\t\tonCancel: this.handleVisible,\n\t\t\t\t\t\tonOk: this.handleSubmit,\n\t\t\t\t\t\tisForm: true,\n\t\t\t\t\t\tformColumns: setSchemaFormColumns({\n\t\t\t\t\t\t\tstatus, currentMain: currentMainSchame, maintainType: 1, onTimeChange: this.onTimeChange,\n\t\t\t\t\t\t\tcheckTime: outlineHour + ':' + outlineMinute + ':' + '00'\n\t\t\t\t\t\t}),\n\t\t\t\t\t\twidth: 700,\n\t\t\t\t\t\totherContent: <div>\n\t\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\t\tscroll={{ y: 300 }}\n\t\t\t\t\t\t\t\trowKey='id'\n\t\t\t\t\t\t\t\tcolumns={setSchemaModalColumns({\n\t\t\t\t\t\t\t\t\thandleDetail: this.handleDetail,\n\t\t\t\t\t\t\t\t\tcontentLabel: '点检内容', contentTypeLabel: '点检类型'\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\tdataSource={serverList}\n\t\t\t\t\t\t\t\trowSelection={{\n\t\t\t\t\t\t\t\t\tselectedRowKeys: this.state.modalSelectedRowKeys,\n\t\t\t\t\t\t\t\t\tonChange: this.onModalItemSelect,\n\t\t\t\t\t\t\t\t\tselection: {\n\t\t\t\t\t\t\t\t\t\tkey: 'id',\n\t\t\t\t\t\t\t\t\t\ttext: 'name'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tpagination={false}\n\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.state.tags.length > 0 && [\n\t\t\t\t\t\t\t\t\t<div style={{ fontSize: '14px', fontWeight: '600', padding: '10px' }}>\n\t\t\t\t\t\t\t\t\t\t<Icon style={{ marginRight: '5px', color: '#6236FF' }} type=\"info-circle\" />显示顺序</div>,\n\t\t\t\t\t\t\t\t\t<div className='Simple-2'>\n\t\t\t\t\t\t\t\t\t\t<DraggableArea\n\t\t\t\t\t\t\t\t\t\t\ttags={this.state.tags}\n\t\t\t\t\t\t\t\t\t\t\trender={({ tag, index }) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='tag' key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={require('../../../../assets/delete.png')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt='delete'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='delete'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.handleClickDelete(tag)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{tag.content}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.changeTag}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\t/* 点击查看库中每项内容的详情 */\n\thandleDetail = (id) => {\n\t\tthis.store.status = 'query'\n\t\tthis.store.getInfo({ id }, 'server').then(() => {\n\t\t\tthis.store.editVisible = !this.store.editVisible;\n\t\t});\n\t}\n\thandleStatus = (record) => {\n\t\tthis.store.save({\n\t\t\tid: record.id,\n\t\t\tplanStatus: record.planStatus === 1 ? 0 : 1,\n\t\t\tmaintainType: 1,\n\t\t}, 'schema')\n\t}\n\t/* modal - operate */\n\thandleVisible = () => {\n\t\t/* 每次打开弹窗 获取所有的点检列表 */\n\t\tif (!this.state.visible) {\n\t\t\tthis.store.getMaintainServer({}).then(() => {\n\t\t\t\tif (this.store.status == 'edit') {\n\t\t\t\t\tthis.state.tags = []\n\t\t\t\t\tthis.store.currentMainSchame.contentIds && this.store.currentMainSchame.contentIds.split(',').map(item => {\n\t\t\t\t\t\tlet tag = toJS(this.store.serverList).filter(tag => tag.id === parseInt(item))[0]\n\t\t\t\t\t\tif (tag !== undefined) {\n\t\t\t\t\t\t\tthis.state.tags.push(tag)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tthis.state.tags = []\n\t\t\t\t\tthis.state.modalSelectedRowKeys = []\n\t\t\t\t}\n\t\t\t\tthis.setState({})\n\t\t\t});\n\t\t}\n\t\tif (this.state.visible) {\n\t\t\tthis.state = {\n\t\t\t\t...this.state,\n\t\t\t\tselectedRowKeys: [],\n\t\t\t\tmodalSelectedRowKeys: [], //弹窗内部的选项\n\t\t\t\ttags: []\n\t\t\t};\n\t\t}\n\t\tthis.setState({\n\t\t\tvisible: !this.state.visible\n\t\t})\n\t}\n\t/* 弹窗内表格的操作 */\n\tonModalItemSelect = selectedRowKeys => {\n\t\tthis.state.tags = []\n\t\tselectedRowKeys.map(item => {\n\t\t\tlet tag = toJS(this.store.serverList).filter(tag => tag.id === item)[0]\n\t\t\tif (tag !== undefined) { this.state.tags.push(tag) }\n\t\t})\n\t\tthis.setState({\n\t\t\tmodalSelectedRowKeys: selectedRowKeys\n\t\t})\n\t}\n\tchangeTag = tags => {\n\t\tthis.setState({ tags })\n\t}\n\thandleClickDelete = (tag) => {\n\t\tconst tags = this.state.tags.filter(t => tag.id !== t.id);\n\t\tlet selectedRowKeys = []\n\t\ttags.map(item => {\n\t\t\tselectedRowKeys.push(item.id)\n\t\t})\n\t\tthis.setState({ tags, modalSelectedRowKeys: selectedRowKeys });\n\t}\n\tonTimeChange = (time, timeString) => {\n\t\tthis.setState({\n\t\t\tcheckTime: timeString\n\t\t})\n\n\t}\n\t/* 弹窗提交操作 */\n\thandleSubmit = values => {\n\t\tconst { deviceType, status, currentMainSchame, maintainType } = this.store;\n\t\tconst { tags } = this.state;\n\t\tthis.state.modalSelectedRowKeys = []\n\t\ttags.map(item => {\n\t\t\tthis.state.modalSelectedRowKeys.push(item.id)\n\t\t})\n\t\tlet params = {\n\t\t\tdeviceType,\n\t\t\tcontentIds: this.state.modalSelectedRowKeys.join(','),\n\t\t\tmaintainType,\n\t\t\t...omit(values, 'checkTime'),\n\t\t\toutlineHour: this.state.checkTime.split(':')[0],\n\t\t\toutlineMinute: this.state.checkTime.split(':')[1]\n\t\t}\n\t\tif (status !== 'add') {\n\t\t\tparams.id = currentMainSchame.id\n\t\t}\n\t\tthis.store.save(params, 'schema');\n\t\tthis.handleVisible();\n\t};\n\t/* 编辑弹窗 */\n\thandleEdit = value => {\n\t\tthis.store.status = 'edit';\n\t\tthis.store.getInfo({ id: value }, 'schema').then(() => {\n\t\t\tlet data = this.store.currentMainSchame.contentIds.split(','), newDs = [];\n\t\t\tconst { outlineHour, outlineMinute } = toJS(this.store.currentMainSchame);\n\t\t\tthis.setState({\n\t\t\t\tcheckTime: outlineHour + ':' + outlineMinute + ':' + '00'\n\t\t\t})\n\t\t\tdata.map(item => {\n\t\t\t\tnewDs.push(parseFloat(item))\n\t\t\t})\n\t\t\tconsole.log(newDs)\n\t\t\tthis.setState({\n\t\t\t\tmodalSelectedRowKeys: newDs\n\t\t\t}, () => {\n\t\t\t\tthis.handleVisible();\n\t\t\t})\n\t\t})\n\t};\n\t/* 删除 点检方案 */\n\thandleDelete = ({ type, value }) => {\n\t\tif (type === 'batch') {\n\t\t\tif (this.state.selectedRowKeys.length < 1) {\n\t\t\t\tModal.warn({\n\t\t\t\t\ttitle: '提示',\n\t\t\t\t\tcontent: '请选择需要删除的内容'\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tModal.confirm({\n\t\t\t\t\ttitle: '提示',\n\t\t\t\t\tcontent:\n\t\t\t\t\t\t'确定删除选中的' +\n\t\t\t\t\t\tthis.state.selectedRowKeys.length +\n\t\t\t\t\t\t'条点检内容？',\n\t\t\t\t\tokText: '确定',\n\t\t\t\t\tcancelText: '取消',\n\t\t\t\t\tonOk: () => {\n\t\t\t\t\t\tthis.store.delete(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tids: this.state.selectedRowKeys\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'schema'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tModal.confirm({\n\t\t\t\ttitle: '提示',\n\t\t\t\tcontent: '确定删除当前点检内容？',\n\t\t\t\tokText: '确定',\n\t\t\t\tcancelText: '取消',\n\t\t\t\tonOk: () => {\n\t\t\t\t\tthis.store.delete(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: value\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'schema'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\thandleSelect = selectedRowKeys => {\n\t\tthis.setState({ selectedRowKeys });\n\t};\n\t/* check - tag */\n\thandleCheckTag = tag => {\n\t\tthis.store.deviceType = tag.id;\n\t\tthis.store.getMaintainSchema({\n\t\t\ttypeId: tag.id\n\t\t});\n\t};\n\tcomponentDidMount() {\n\t\tthis.store.getMaintainSchema({\n\t\t\ttypeId: this.store.deviceType\n\t\t});\n\t}\n}\nexport default SchemaMenu;\n"]},"metadata":{},"sourceType":"module"}