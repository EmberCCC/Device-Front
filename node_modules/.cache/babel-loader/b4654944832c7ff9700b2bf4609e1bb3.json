{"ast":null,"code":"import \"antd/es/date-picker/style\";\nimport _DatePicker from \"antd/es/date-picker\";\nvar _excluded = [\"onChange\", \"format\", \"value\", \"style\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport moment from 'moment';\nimport React from 'react';\nimport { getFormat } from '../../utils';\nvar RangePicker = _DatePicker.RangePicker;\n\nvar DateRange = function DateRange(_ref) {\n  var onChange = _ref.onChange,\n      format = _ref.format,\n      value = _ref.value,\n      style = _ref.style,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var dateFormat = getFormat(format);\n\n  var _ref2 = Array.isArray(value) ? value : [],\n      _ref3 = _slicedToArray(_ref2, 2),\n      start = _ref3[0],\n      end = _ref3[1]; // week的时候会返回 2020-31周 quarter会返回 2020-Q2 需要处理之后才能被 moment\n\n\n  if (typeof start === 'string' && typeof end === 'string') {\n    if (format === 'week') {\n      start = start.substring(0, start.length - 1);\n      end = end.substring(0, end.length - 1);\n    }\n\n    if (format === 'quarter') {\n      start = start.replace('Q', '');\n      end = end.replace('Q', '');\n    }\n  }\n\n  var _value = [];\n\n  if (start && end) {\n    _value = [moment(start, dateFormat), moment(end, dateFormat)];\n  }\n\n  var handleChange = function handleChange(val, stringList) {\n    var emptyList1 = stringList[0] === '' || stringList[1] === '';\n    var emptyList2 = stringList[0] === undefined || stringList[1] === undefined;\n\n    if (emptyList1 || emptyList2) {\n      onChange(null);\n    } else {\n      onChange(stringList);\n    }\n  };\n\n  var dateParams = {\n    value: _value,\n    style: _objectSpread({\n      width: '100%'\n    }, style),\n    onChange: handleChange\n  }; // TODO: format是在options里自定义的情况，是否要判断一下要不要showTime\n\n  if (format === 'dateTime') {\n    dateParams.showTime = true;\n  }\n\n  if (['week', 'month', 'quarter', 'year'].indexOf(format) > -1) {\n    dateParams.picker = format;\n  }\n\n  dateParams = _objectSpread(_objectSpread({}, dateParams), rest);\n\n  if (dateFormat === format) {\n    dateParams.format = format;\n  }\n\n  return /*#__PURE__*/React.createElement(RangePicker, dateParams);\n};\n\nexport default DateRange;","map":null,"metadata":{},"sourceType":"module"}