{"ast":null,"code":"import _classCallCheck from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport { observable, action } from 'mobx';\nimport { isDataExist } from 'Utils/dataTools';\nimport * as services from '../services/spareparts';\n\nvar Spareparts = function Spareparts() {\n  _classCallCheck(this, Spareparts);\n};\n\nvar SparepartsStore = new Spareparts();\nexport default SparepartsStore;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage-test\\src\\stores\\SparepartsStore.js"],"names":["observable","action","isDataExist","services","Spareparts","SparepartsStore"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,MAArB,QAAmC,MAAnC;AACA,SAASC,WAAT,QAA4B,iBAA5B;AAEA,OAAO,KAAKC,QAAZ,MAA0B,wBAA1B;;IAEMC,U;;;;AAwON,IAAIC,eAAe,GAAG,IAAID,UAAJ,EAAtB;AACA,eAAeC,eAAf","sourcesContent":["import { observable, action } from 'mobx';\nimport { isDataExist } from 'Utils/dataTools';\nimport { message } from 'antd';\nimport * as services from '../services/spareparts';\n\nclass Spareparts {\n    // @observable isLoading = false;\n    // @observable modalTitle = 1;\n    // @observable tableData = [];\n    // @observable inPutLogData = [];\n    // @observable columnsType = '1';\n    // @observable PageInfo = {};\n    // @observable id = \"\";\n    // @observable formData = {};\n    // @observable searchDate = [];//搜索时间\n    // @observable modalVisible = false;\n    // @observable modalType = 0;\n    // @observable typeName = '';\n    // @observable spareName = undefined;\n    // @observable typeList = [];\n    // @observable devTypeList = [];\n    // @observable oddList = [];\n    // @observable spareList = [];\n    // @observable workList = [];\n\n    // //获取表格数据\n    // @action.bound async getData(type, params) {\n    //     this.isLoading = true\n    //     //1.备件类型，2.备件列表，3.库存预警\n    //     const url = type === 1 ? services.requestUrl.getSpareType : type === 2 ? services.requestUrl.getSpare : services.requestUrl.warnList\n    //     try {\n    //         let res = await services.getRequest(url, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             this.tableData = res.data.data.items\n    //             this.PageInfo = res.data.data.page\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //获取库存数据\n    // @action.bound async getLogData(params) {\n    //     this.isLoading = true\n    //     try {\n    //         let res = await services.getRequest(services.requestUrl.spareRecordList, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             this.inPutLogData = res.data.data.items\n    //             this.PageInfo = res.data.data.page\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //获取工单信息\n    // @action.bound async getworkData(params) {\n    //     this.isLoading = true\n    //     try {\n    //         let res = await services.getRequest(services.requestUrl.getByType, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             this.workList = res.data.data\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //新增备件类型\n    // @action.bound async addNewType(params) {\n    //     this.isLoading = true\n    //     try {\n    //         let res = await services.putRequest(services.requestUrl.saveSpareType, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             return res\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //新增备件\n    // @action.bound async addNewSpa(params) {\n    //     this.isLoading = true\n    //     try {\n    //         let res = await services.putRequest(services.requestUrl.saveSpare, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             return res\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //删除备件类型\n    // @action.bound async deleteType(params) {\n    //     this.isLoading = true\n    //     try {\n    //         let res = await services.putRequest(services.requestUrl.deleteSpareType, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             return res\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //删除备件\n    // @action.bound async deleteSpa(params) {\n    //     this.isLoading = true\n    //     try {\n    //         let res = await services.putRequest(services.requestUrl.deleteSpare, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             return res\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // // 备件导出\n    // @action async export(params){\n    //     this.isLoading = true\n    //     let data = {\n    //         ids:params.ids.join(',')\n    //     }\n    //     try {\n    //         let res = await services.getRequest(services.requestUrl.export, data)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             message.success('导出成功')\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //备件出入库\n    // @action.bound async inPutStorage(params) {\n    //     this.isLoading = true\n    //     try {\n    //         let res = await services.putRequest(services.requestUrl.operationSpare, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             return res\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //所有备件类型\n    // @action.bound async getAllType(params) {\n    //     this.isLoading = true\n    //     try {\n    //         let res = await services.getRequest(services.requestUrl.allSpareType, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             this.typeList = res.data.data\n\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //所有备件\n    // @action.bound async getAllSpare(params) {\n    //     this.isLoading = true\n    //     try {\n    //         let res = await services.getRequest(services.requestUrl.spareAll, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             this.spareList = res.data.data\n\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //所有设备类型\n    // @action.bound async getAllDeviceType(params) {\n    //     this.isLoading = true\n    //     try {\n    //         let res = await services.getRequest(services.requestUrl.getDeviceType, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             this.devTypeList = []\n    //             res.data.data.map(item => {\n    //                 this.devTypeList.push({ label: item.modelName, value: item.id.toString() })\n    //             })\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //所有工单\n    // @action.bound async getAllOdd(params) {\n    //     this.isLoading = true\n    //     try {\n    //         let res = await services.getRequest(services.requestUrl.getAllOdd, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             this.oddList = res.data.data\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n\n    // //打开/关闭模态框\n    // @action modalChange = (type, record) => {\n    //     if (type) {\n    //         this.formData = record\n    //     } else {\n    //         this.formData = {}\n    //     }\n    //     this.modalType = type\n    //     this.modalVisible = !this.modalVisible\n    // }\n    // //打开/关闭模态框\n    // @action clearData = () => {\n    //     this.isLoading = false;\n    //     this.modalTitle = 1;\n    //     this.tableData = [];\n    //     this.inPutLogData = [];\n    //     this.columnsType = '1';\n    //     this.PageInfo = { pageIndex: 1, pageSize: 10 };\n    //     this.formData = {};\n    //     this.searchDate = [];\n    //     this.modalVisible = false;\n    //     this.typeName = '';\n    //     this.spareName = undefined;\n    //     this.typeList = [];\n    //     this.devTypeList = [];\n    //     this.oddList = [];\n    //     this.workList = [];\n    // }\n}\n\nlet SparepartsStore = new Spareparts();\nexport default SparepartsStore;"]},"metadata":{},"sourceType":"module"}