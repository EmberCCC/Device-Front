{"ast":null,"code":"import \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport * as React from 'react';\nimport ColorPicker from 'rc-color-picker';\nimport 'rc-color-picker/assets/index.css';\nvar alphaHexMap = {\n  '1.00': 'FF',\n  0.99: 'FC',\n  0.98: 'FA',\n  0.97: 'F7',\n  0.96: 'F5',\n  0.95: 'F2',\n  0.94: 'F0',\n  0.93: 'ED',\n  0.92: 'EB',\n  0.91: 'E8',\n  '0.90': 'E6',\n  0.89: 'E3',\n  0.88: 'E0',\n  0.87: 'DE',\n  0.86: 'DB',\n  0.85: 'D9',\n  0.84: 'D6',\n  0.83: 'D4',\n  0.82: 'D1',\n  0.81: 'CF',\n  '0.80': 'CC',\n  0.79: 'C9',\n  0.78: 'C7',\n  0.77: 'C4',\n  0.76: 'C2',\n  0.75: 'BF',\n  0.74: 'BD',\n  0.73: 'BA',\n  0.72: 'B8',\n  0.71: 'B5',\n  '0.70': 'B3',\n  0.69: 'B0',\n  0.68: 'AD',\n  0.67: 'AB',\n  0.66: 'A8',\n  0.65: 'A6',\n  0.64: 'A3',\n  0.63: 'A1',\n  0.62: '9E',\n  0.61: '9C',\n  '0.60': '99',\n  0.59: '96',\n  0.58: '94',\n  0.57: '91',\n  0.56: '8F',\n  0.55: '8C',\n  0.54: '8A',\n  0.53: '87',\n  0.52: '85',\n  0.51: '82',\n  '0.50': '80',\n  0.49: '7D',\n  0.48: '7A',\n  0.47: '78',\n  0.46: '75',\n  0.45: '73',\n  0.44: '70',\n  0.43: '6E',\n  0.42: '6B',\n  0.41: '69',\n  '0.40': '66',\n  0.39: '63',\n  0.38: '61',\n  0.37: '5E',\n  0.36: '5C',\n  0.35: '59',\n  0.34: '57',\n  0.33: '54',\n  0.32: '52',\n  0.31: '4F',\n  '0.30': '4D',\n  0.29: '4A',\n  0.28: '47',\n  0.27: '45',\n  0.26: '42',\n  0.25: '40',\n  0.24: '3D',\n  0.23: '3B',\n  0.22: '38',\n  0.21: '36',\n  '0.20': '33',\n  0.19: '30',\n  0.18: '2E',\n  0.17: '2B',\n  0.16: '29',\n  0.15: '26',\n  0.14: '24',\n  0.13: '21',\n  0.12: '1F',\n  0.11: '1C',\n  '0.10': '1A',\n  0.09: '17',\n  0.08: '14',\n  0.07: '12',\n  0.06: '0F',\n  0.05: '0D',\n  0.04: '0A',\n  0.03: '08',\n  0.02: '05',\n  0.01: '03',\n  '0.00': '00'\n}; // Exp: \"#ffffffA6\" => algha: 65\n\nvar getAlphaFromHex = function getAlphaFromHex() {\n  var hex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '#ffffff';\n  var alphaHex = hex.slice(7);\n  var alpha = 100;\n\n  for (var key in alphaHexMap) {\n    if (alphaHexMap[key] === alphaHex.toUpperCase()) {\n      alpha = Number(key) * 100;\n    }\n  }\n\n  return alpha;\n};\n\nexport default function color(p) {\n  var format = p.schema.format;\n\n  var onPickerChange = function onPickerChange(e) {\n    if (p.disabled || p.readonly) return;\n    var alphaHex = alphaHexMap[(e.alpha / 100).toFixed(2)];\n    var hex = e.color + (e.alpha === 100 ? '' : alphaHex);\n    p.onChange(hex);\n  };\n\n  var onInputChange = function onInputChange(e) {\n    p.onChange(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fr-color-picker\"\n  }, /*#__PURE__*/React.createElement(ColorPicker, {\n    type: format,\n    animation: \"slide-up\",\n    color: p.value && p.value.slice(0, 7) || '#ffffff',\n    alpha: getAlphaFromHex(p.value),\n    onChange: onPickerChange\n  }), p.readonly ? /*#__PURE__*/React.createElement(\"span\", null, p.value || '#ffffff') : /*#__PURE__*/React.createElement(_Input, {\n    placeholder: \"#ffffff\",\n    disabled: p.disabled,\n    value: p.value,\n    className: p.className,\n    onChange: onInputChange\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}