{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\")[\"default\"];\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _rcMotion = _interopRequireDefault(require(\"rc-motion\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _configProvider = require(\"../config-provider\");\n\nvar _reactNode = require(\"../_util/reactNode\");\n\nvar _Ribbon = _interopRequireDefault(require(\"./Ribbon\"));\n\nvar _ScrollNumber = _interopRequireDefault(require(\"./ScrollNumber\"));\n\nvar _utils = require(\"./utils\");\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar Badge = function Badge(_a) {\n  var _classNames, _classNames2;\n\n  var customizePrefixCls = _a.prefixCls,\n      customizeScrollNumberPrefixCls = _a.scrollNumberPrefixCls,\n      children = _a.children,\n      status = _a.status,\n      text = _a.text,\n      color = _a.color,\n      _a$count = _a.count,\n      count = _a$count === void 0 ? null : _a$count,\n      _a$overflowCount = _a.overflowCount,\n      overflowCount = _a$overflowCount === void 0 ? 99 : _a$overflowCount,\n      _a$dot = _a.dot,\n      dot = _a$dot === void 0 ? false : _a$dot,\n      _a$size = _a.size,\n      size = _a$size === void 0 ? 'default' : _a$size,\n      title = _a.title,\n      offset = _a.offset,\n      style = _a.style,\n      className = _a.className,\n      _a$showZero = _a.showZero,\n      showZero = _a$showZero === void 0 ? false : _a$showZero,\n      restProps = __rest(_a, [\"prefixCls\", \"scrollNumberPrefixCls\", \"children\", \"status\", \"text\", \"color\", \"count\", \"overflowCount\", \"dot\", \"size\", \"title\", \"offset\", \"style\", \"className\", \"showZero\"]);\n\n  var _React$useContext = React.useContext(_configProvider.ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var prefixCls = getPrefixCls('badge', customizePrefixCls); // ================================ Misc ================================\n\n  var numberedDisplayCount = count > overflowCount ? \"\".concat(overflowCount, \"+\") : count;\n  var hasStatus = status !== null && status !== undefined || color !== null && color !== undefined;\n  var isZero = numberedDisplayCount === '0' || numberedDisplayCount === 0;\n  var showAsDot = dot && !isZero;\n  var mergedCount = showAsDot ? '' : numberedDisplayCount;\n  var isHidden = (0, React.useMemo)(function () {\n    var isEmpty = mergedCount === null || mergedCount === undefined || mergedCount === '';\n    return (isEmpty || isZero && !showZero) && !showAsDot;\n  }, [mergedCount, isZero, showZero, showAsDot]); // Count should be cache in case hidden change it\n\n  var countRef = (0, React.useRef)(count);\n\n  if (!isHidden) {\n    countRef.current = count;\n  }\n\n  var livingCount = countRef.current; // We need cache count since remove motion should not change count display\n\n  var displayCountRef = (0, React.useRef)(mergedCount);\n\n  if (!isHidden) {\n    displayCountRef.current = mergedCount;\n  }\n\n  var displayCount = displayCountRef.current; // We will cache the dot status to avoid shaking on leaved motion\n\n  var isDotRef = (0, React.useRef)(showAsDot);\n\n  if (!isHidden) {\n    isDotRef.current = showAsDot;\n  } // =============================== Styles ===============================\n\n\n  var mergedStyle = (0, React.useMemo)(function () {\n    if (!offset) {\n      return (0, _extends2[\"default\"])({}, style);\n    }\n\n    var offsetStyle = {\n      marginTop: offset[1]\n    };\n\n    if (direction === 'rtl') {\n      offsetStyle.left = parseInt(offset[0], 10);\n    } else {\n      offsetStyle.right = -parseInt(offset[0], 10);\n    }\n\n    return (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, offsetStyle), style);\n  }, [direction, offset, style]); // =============================== Render ===============================\n  // >>> Title\n\n  var titleNode = title !== null && title !== void 0 ? title : typeof livingCount === 'string' || typeof livingCount === 'number' ? livingCount : undefined; // >>> Status Text\n\n  var statusTextNode = isHidden || !text ? null : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-status-text\")\n  }, text); // >>> Display Component\n\n  var displayNode = !livingCount || (0, _typeof2[\"default\"])(livingCount) !== 'object' ? undefined : (0, _reactNode.cloneElement)(livingCount, function (oriProps) {\n    return {\n      style: (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, mergedStyle), oriProps.style)\n    };\n  }); // Shared styles\n\n  var statusCls = (0, _classnames[\"default\"])((_classNames = {}, (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-status-dot\"), hasStatus), (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-status-\").concat(status), !!status), (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-status-\").concat(color), (0, _utils.isPresetColor)(color)), _classNames));\n  var statusStyle = {};\n\n  if (color && !(0, _utils.isPresetColor)(color)) {\n    statusStyle.background = color;\n  }\n\n  var badgeClassName = (0, _classnames[\"default\"])(prefixCls, (_classNames2 = {}, (0, _defineProperty2[\"default\"])(_classNames2, \"\".concat(prefixCls, \"-status\"), hasStatus), (0, _defineProperty2[\"default\"])(_classNames2, \"\".concat(prefixCls, \"-not-a-wrapper\"), !children), (0, _defineProperty2[\"default\"])(_classNames2, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames2), className); // <Badge status=\"success\" />\n\n  if (!children && hasStatus) {\n    var statusTextColor = mergedStyle.color;\n    return /*#__PURE__*/React.createElement(\"span\", (0, _extends2[\"default\"])({}, restProps, {\n      className: badgeClassName,\n      style: mergedStyle\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: statusCls,\n      style: statusStyle\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: statusTextColor\n      },\n      className: \"\".concat(prefixCls, \"-status-text\")\n    }, text));\n  } // <Badge status=\"success\" count={<Icon type=\"xxx\" />}></Badge>\n\n\n  return /*#__PURE__*/React.createElement(\"span\", (0, _extends2[\"default\"])({}, restProps, {\n    className: badgeClassName\n  }), children, /*#__PURE__*/React.createElement(_rcMotion[\"default\"], {\n    visible: !isHidden,\n    motionName: \"\".concat(prefixCls, \"-zoom\"),\n    motionAppear: false,\n    motionDeadline: 1000\n  }, function (_ref) {\n    var _classNames3;\n\n    var motionClassName = _ref.className;\n    var scrollNumberPrefixCls = getPrefixCls('scroll-number', customizeScrollNumberPrefixCls);\n    var isDot = isDotRef.current;\n    var scrollNumberCls = (0, _classnames[\"default\"])((_classNames3 = {}, (0, _defineProperty2[\"default\"])(_classNames3, \"\".concat(prefixCls, \"-dot\"), isDot), (0, _defineProperty2[\"default\"])(_classNames3, \"\".concat(prefixCls, \"-count\"), !isDot), (0, _defineProperty2[\"default\"])(_classNames3, \"\".concat(prefixCls, \"-count-sm\"), size === 'small'), (0, _defineProperty2[\"default\"])(_classNames3, \"\".concat(prefixCls, \"-multiple-words\"), !isDot && displayCount && displayCount.toString().length > 1), (0, _defineProperty2[\"default\"])(_classNames3, \"\".concat(prefixCls, \"-status-\").concat(status), !!status), (0, _defineProperty2[\"default\"])(_classNames3, \"\".concat(prefixCls, \"-status-\").concat(color), (0, _utils.isPresetColor)(color)), _classNames3));\n    var scrollNumberStyle = (0, _extends2[\"default\"])({}, mergedStyle);\n\n    if (color && !(0, _utils.isPresetColor)(color)) {\n      scrollNumberStyle = scrollNumberStyle || {};\n      scrollNumberStyle.background = color;\n    }\n\n    return /*#__PURE__*/React.createElement(_ScrollNumber[\"default\"], {\n      prefixCls: scrollNumberPrefixCls,\n      show: !isHidden,\n      motionClassName: motionClassName,\n      className: scrollNumberCls,\n      count: displayCount,\n      title: titleNode,\n      style: scrollNumberStyle,\n      key: \"scrollNumber\"\n    }, displayNode);\n  }), statusTextNode);\n};\n\nBadge.Ribbon = _Ribbon[\"default\"];\nvar _default = Badge;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}