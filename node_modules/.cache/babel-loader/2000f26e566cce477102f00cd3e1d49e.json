{"ast":null,"code":"import _classCallCheck from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport { observable, action } from 'mobx';\nimport { isDataExist } from 'Utils/dataTools';\nimport * as services from '../services/system';\n\nvar Order = function Order() {\n  _classCallCheck(this, Order);\n};\n\nvar OrderDefineStore = new Order();\nexport default OrderDefineStore;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage-test\\src\\stores\\SystemStore.js"],"names":["observable","action","isDataExist","services","Order","OrderDefineStore"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,MAArB,QAAoC,MAApC;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAO,KAAKC,QAAZ,MAA0B,oBAA1B;;IAGMC,K;;;;AAkaN,IAAIC,gBAAgB,GAAG,IAAID,KAAJ,EAAvB;AACA,eAAeC,gBAAf","sourcesContent":["import { observable, action, } from 'mobx';\nimport { isDataExist } from 'Utils/dataTools';\nimport * as services from '../services/system';\n\n\nclass Order {\n    // @observable isLoading = false;\n    // @observable tableData = [];//表格数据\n    // @observable roleList = [];//角色列表\n    // @observable menuData = [];//菜单列表\n    // @observable arr = [];\n    // @observable DepList = [];//部门树列表\n    // @observable allDept = [];//部门列表\n    // @observable CumList = [];//客户列表\n    // @observable SupList = [];//供应商列表\n    // @observable tagList = [];//筛选数据\n    // @observable selectedRows = [];//选中表格\n    // @observable PageInfo = { pageIndex: 1, pageSize: 10 };//分页信息\n    // @observable formData = {};//表单数据\n    // @observable treeData = {};//菜单树数据\n    // @observable modalVisible = false;//模态框显隐\n    // @observable roleName = \"\";\n    // @observable name = \"\";\n    // @observable customerName = \"\";\n    // @observable roleIds = \"\";//用户的角色列表\n    // @observable deptId = \"\";\n    // @observable columnsType = \"1\";\n    // @observable innerModalVisible = false;\n    // @observable isReview = false;\n\n    // //获取表格数据\n    // @action.bound async getData(type, params) {\n    //     this.isLoading = true\n    //     //1部门管理，2角色管理，3用户管理\n    //     const url = type === 1 ? services.requestUrl.departmentList : type === 2 ? services.requestUrl.roleList : services.requestUrl.userList\n    //     try {\n    //         let res = await services.getRequest(url, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             if (type === 1) {\n    //                 this.tableData = res.data.data\n    //             } else {\n    //                 this.tableData = res.data.data.items\n    //                 this.PageInfo = res.data.data.page\n    //             }\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //获取组织架构列表\n    // @action.bound async getDeptData(type, params) {\n    //     this.isLoading = true\n    //     //1制造商，2客户\n    //     const url = type === '1' ? services.requestUrl.departmentList : services.requestUrl.getCustomer\n    //     try {\n    //         let res = await services.getRequest(url, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             if (type === '1') {\n    //                 this.arr = res.data.data\n    //                 // console.log(this.arr)\n    //                 const data = this.transTreeData(this.arr)\n    //                 this.tableData = data\n    //                 // this.tableData = res.data.data.children\n\n    //             } else {\n    //                 this.tableData = res.data.data\n    //             }\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //获取制造商部门列表\n    // @action.bound async getDept(params) {\n    //     this.isLoading = true\n    //     try {\n    //         let res = await services.getRequest(services.requestUrl.departmentList, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             this.allDept = res.data.data\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //获取菜单树数据\n    // @action.bound async getTreeData(params) {\n    //     this.isLoading = true\n    //     try {\n    //         let res = await services.getRequest(services.requestUrl.treeMenu, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             this.treeData = []\n    //             this.treeData.push(res.data.data)\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n\n    // //保存更新部门信息\n    // @action.bound async addNew(type, params) {\n    //     this.isLoading = true\n    //     const url = type ? services.requestUrl.saveDepartment : services.requestUrl.updataDepartment\n    //     try {\n    //         let res = await services.putRequest(url, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             return res\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //保存更新角色信息\n    // @action.bound async addNewRole(type, params) {\n    //     this.isLoading = true\n    //     const url = type ? services.requestUrl.saveRole : services.requestUrl.updataRole\n    //     try {\n    //         let res = await services.putRequest(url, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             return res\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //保存系统菜单\n    // @action.bound async addNewMenu(type, params) {\n    //     this.isLoading = true\n    //     const url = type ? services.requestUrl.saveMenu : services.requestUrl.updateMenu\n    //     try {\n    //         let res = await services.putRequest(url, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             return res\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //保存系统菜单\n    // @action.bound async addNewUser(type, params) {\n    //     this.isLoading = true\n    //     const url = type ? services.requestUrl.saveUser : services.requestUrl.updataUser\n    //     try {\n    //         let res = await services.putRequest(url, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             return res\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //保存系统菜单\n    // @action.bound async addNewCustomer(type, params) {\n    //     this.isLoading = true\n    //     const url = type ? services.requestUrl.addCustomer : services.requestUrl.updateCustomer\n    //     try {\n    //         let res = await services.putRequest(url, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             return res\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //保存系统菜单\n    // @action.bound async resetPassword(params) {\n    //     this.isLoading = true\n    //     try {\n    //         let res = await services.putRequest(services.requestUrl.adminResetPwd, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             return res\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //部门删除\n    // @action.bound async deleteCol(params) {\n    //     this.isLoading = true\n    //     try {\n    //         let res = await services.putRequest(services.requestUrl.removeDepartment, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             return res\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //客户删除\n    // @action.bound async deleteCus(params) {\n    //     this.isLoading = true\n    //     try {\n    //         let res = await services.putRequest(services.requestUrl.deleteCus, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             return res\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //角色删除\n    // @action.bound async deleteRole(type, params) {\n    //     this.isLoading = true\n    //     const url = type ? services.requestUrl.removeRole : services.requestUrl.batchRemoveRole\n    //     try {\n    //         let res = await services.putRequest(url, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             return res\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //菜单删除\n    // @action.bound async deleteMenu(params) {\n    //     this.isLoading = true\n    //     try {\n    //         let res = await services.putRequest(services.requestUrl.removeMenu, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             return res\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //菜单删除\n    // @action.bound async deleteUser(type, params) {\n    //     this.isLoading = true\n    //     const url = type ? services.requestUrl.removeUser : services.requestUrl.batchRemoveUser\n    //     try {\n    //         let res = await services.putRequest(url, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             return res\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //获取角色当前菜单权限\n    // @action.bound async getMenuIdsByRole(params) {\n    //     this.isLoading = true\n    //     try {\n    //         let res = await services.getRequest(services.requestUrl.getMenuIdsByRole, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             this.formData.menuIds = res.data.data\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //打开/关闭模态框\n    // @action modalChange = (type, record) => {\n    //     // console.log(record)\n    //     if (type) {\n    //         this.formData = record\n    //     } else {\n    //         this.formData = { delFlag: 1, customerStatus: 1 }\n    //     }\n    //     this.modalVisible = !this.modalVisible\n    // }\n    // //获取角色列表\n    // @action.bound async getRoleList(params) {\n    //     this.isLoading = true\n    //     try {\n    //         let res = await services.getRequest(services.requestUrl.allRoleList, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             this.roleList = []\n    //             res.data.data.map(item => {\n    //                 this.roleList.push({ label: item.roleName, value: item.id })\n    //             })\n    //             // console.log(this.roleList);\n\n    //         }\n\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //获取部门列表\n    // @action.bound async getDepList(params) {\n    //     this.isLoading = true\n    //     try {\n    //         let res = await services.getRequest(services.requestUrl.departmentTree, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             this.DepList = [{ id: \"-1\", text: '所有部门', children: res.data.data.children }]\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //获取客户列表\n    // @action.bound async getCumList(params) {\n    //     this.isLoading = true\n    //     try {\n    //         let res = await services.getRequest(services.requestUrl.getCustomer, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             this.CumList = res.data.data\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //获取客户列表\n    // @action.bound async getSupList(params) {\n    //     this.isLoading = true\n    //     try {\n    //         let res = await services.getRequest(services.requestUrl.getCustomer, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             this.SupList = res.data.data\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //查询用户的角色\n    // @action.bound async getUserRole(params) {\n    //     this.isLoading = true\n    //     try {\n    //         let res = await services.getRequest(services.requestUrl.getUserRoles, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             return res.data.data\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //查询用户的角色\n    // @action.bound async existUsername(params) {\n    //     this.isLoading = true\n    //     try {\n    //         let res = await services.getRequest(services.requestUrl.exist, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             return res.data.data\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //获取菜单列表\n    // @action.bound async getMenuData(params) {\n    //     this.isLoading = true\n    //     try {\n    //         let res = await services.getRequest(services.requestUrl.menuList, params)\n    //         this.isLoading = false\n    //         if (isDataExist(res)) {\n    //             this.arr = res.data.data\n    //             const data = this.transTreeData(this.arr)\n    //             this.menuData = data\n    //         }\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n    // //数据类型转换(平级数据装换成树结构)\n    // @action.bound transTreeData = (items) => {\n    //     if (items.length > 0) {\n    //         let curPid = 0 //pid=0，为最上层节点 ，即无父节点\n    //         let parent = this.findChild(curPid);//数组\n    //         // console.log(parent)\n    //         return parent;\n    //     } else {\n    //         return [];\n    //     }\n    // }\n    // //找子节点\n    // @action.bound findChild = (curPid) => {\n    //     let _arr = [];\n    //     let items = this.arr;\n    //     let length = items.length;\n    //     for (let i = 0; i < length; i++) {\n    //         if (items[i].parentId == curPid) {\n    //             let _obj = items[i];\n    //             _obj.children = this.findChild(_obj.id);\n    //             _arr.push(_obj);\n    //         }\n    //     }\n    //     return _arr;\n    // }\n\n    // //销毁数据\n    // @action.bound async clearData() {\n    //     this.tableData = []\n    //     this.columnsType = '1'\n    //     this.arr = []\n    //     this.roleList = [];\n    //     this.menuData = [];//菜单列表\n    //     this.DepList = [];//部门列表\n    //     this.tagList = [];//筛选数据\n    //     this.SupList = [];\n    //     this.CumList = [];\n    //     this.selectedRows = [];//选中表格\n    //     this.PageInfo = { pageIndex: 1, pageSize: 10 };//分页信息\n    //     this.formData = {};//表单数据\n    //     this.treeData = {};//菜单树数据\n    //     this.modalVisible = false;//模态框显隐\n    //     this.roleName = \"\";\n    //     this.name = \"\";\n    //     this.customerName = \"\";\n    //     this.deptId = \"\";\n    //     this.innerModalVisible = false;\n    // }\n}\nlet OrderDefineStore = new Order();\nexport default OrderDefineStore;"]},"metadata":{},"sourceType":"module"}