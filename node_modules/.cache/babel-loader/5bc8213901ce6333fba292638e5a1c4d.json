{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\"));\n\nvar PropTypes = __importStar(require(\"prop-types\"));\n\nvar shallowequal_1 = __importDefault(require(\"shallowequal\"));\n\nvar addEventListener_1 = __importDefault(require(\"rc-util/lib/Dom/addEventListener\"));\n\nvar warning_1 = __importDefault(require(\"rc-util/lib/warning\"));\n\nvar mini_store_1 = require(\"mini-store\");\n\nvar merge_1 = __importDefault(require(\"lodash/merge\"));\n\nvar component_classes_1 = __importDefault(require(\"component-classes\"));\n\nvar classnames_1 = __importDefault(require(\"classnames\"));\n\nvar react_lifecycles_compat_1 = require(\"react-lifecycles-compat\");\n\nvar utils_1 = require(\"./utils\");\n\nvar ColumnManager_1 = __importDefault(require(\"./ColumnManager\"));\n\nvar HeadTable_1 = __importDefault(require(\"./HeadTable\"));\n\nvar BodyTable_1 = __importDefault(require(\"./BodyTable\"));\n\nvar Column_1 = __importDefault(require(\"./Column\"));\n\nvar ColumnGroup_1 = __importDefault(require(\"./ColumnGroup\"));\n\nvar ExpandableTable_1 = __importDefault(require(\"./ExpandableTable\"));\n\nvar Table = /*#__PURE__*/function (_React$Component) {\n  _inherits(Table, _React$Component);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {};\n\n    _this.getRowKey = function (record, index) {\n      var rowKey = _this.props.rowKey;\n      var key = typeof rowKey === 'function' ? rowKey(record, index) : record[rowKey];\n      warning_1.default(key !== undefined, 'Each record in table should have a unique `key` prop,' + 'or set `rowKey` to an unique primary key.');\n      return key === undefined ? index : key;\n    };\n\n    _this.handleWindowResize = function () {\n      _this.syncFixedTableRowHeight();\n\n      _this.setScrollPositionClassName();\n    };\n\n    _this.syncFixedTableRowHeight = function () {\n      var tableRect = _this.tableNode.getBoundingClientRect(); // If tableNode's height less than 0, suppose it is hidden and don't recalculate rowHeight.\n      // see: https://github.com/ant-design/ant-design/issues/4836\n\n\n      if (tableRect.height !== undefined && tableRect.height <= 0) {\n        return;\n      }\n\n      var prefixCls = _this.props.prefixCls;\n      var headRows = _this.headTable ? _this.headTable.querySelectorAll('thead') : _this.bodyTable.querySelectorAll('thead');\n      var bodyRows = _this.bodyTable.querySelectorAll(\".\".concat(prefixCls, \"-row\")) || [];\n      var fixedColumnsHeadRowsHeight = [].map.call(headRows, function (row) {\n        return row.getBoundingClientRect().height || 'auto';\n      });\n\n      var state = _this.store.getState();\n\n      var fixedColumnsBodyRowsHeight = [].reduce.call(bodyRows, function (acc, row) {\n        var rowKey = row.getAttribute('data-row-key');\n        var height = row.getBoundingClientRect().height || state.fixedColumnsBodyRowsHeight[rowKey] || 'auto';\n        acc[rowKey] = height;\n        return acc;\n      }, {});\n\n      if (shallowequal_1.default(state.fixedColumnsHeadRowsHeight, fixedColumnsHeadRowsHeight) && shallowequal_1.default(state.fixedColumnsBodyRowsHeight, fixedColumnsBodyRowsHeight)) {\n        return;\n      }\n\n      _this.store.setState({\n        fixedColumnsHeadRowsHeight: fixedColumnsHeadRowsHeight,\n        fixedColumnsBodyRowsHeight: fixedColumnsBodyRowsHeight\n      });\n    };\n\n    _this.handleBodyScrollLeft = function (e) {\n      // Fix https://github.com/ant-design/ant-design/issues/7635\n      if (e.currentTarget !== e.target) {\n        return;\n      }\n\n      var target = e.target;\n      var _this$props$scroll = _this.props.scroll,\n          scroll = _this$props$scroll === void 0 ? {} : _this$props$scroll;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          headTable = _assertThisInitialize.headTable,\n          bodyTable = _assertThisInitialize.bodyTable;\n\n      if (target.scrollLeft !== _this.lastScrollLeft && scroll.x) {\n        if (target === bodyTable && headTable) {\n          headTable.scrollLeft = target.scrollLeft;\n        } else if (target === headTable && bodyTable) {\n          bodyTable.scrollLeft = target.scrollLeft;\n        }\n\n        _this.setScrollPositionClassName();\n      } // Remember last scrollLeft for scroll direction detecting.\n\n\n      _this.lastScrollLeft = target.scrollLeft;\n    };\n\n    _this.handleBodyScrollTop = function (e) {\n      var target = e.target; // Fix https://github.com/ant-design/ant-design/issues/9033\n\n      if (e.currentTarget !== target) {\n        return;\n      }\n\n      var _this$props$scroll2 = _this.props.scroll,\n          scroll = _this$props$scroll2 === void 0 ? {} : _this$props$scroll2;\n\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          headTable = _assertThisInitialize2.headTable,\n          bodyTable = _assertThisInitialize2.bodyTable,\n          fixedColumnsBodyLeft = _assertThisInitialize2.fixedColumnsBodyLeft,\n          fixedColumnsBodyRight = _assertThisInitialize2.fixedColumnsBodyRight;\n\n      if (target.scrollTop !== _this.lastScrollTop && scroll.y && target !== headTable) {\n        var scrollTop = target.scrollTop;\n\n        if (fixedColumnsBodyLeft && target !== fixedColumnsBodyLeft) {\n          fixedColumnsBodyLeft.scrollTop = scrollTop;\n        }\n\n        if (fixedColumnsBodyRight && target !== fixedColumnsBodyRight) {\n          fixedColumnsBodyRight.scrollTop = scrollTop;\n        }\n\n        if (bodyTable && target !== bodyTable) {\n          bodyTable.scrollTop = scrollTop;\n        }\n      } // Remember last scrollTop for scroll direction detecting.\n\n\n      _this.lastScrollTop = target.scrollTop;\n    };\n\n    _this.handleBodyScroll = function (e) {\n      _this.handleBodyScrollLeft(e);\n\n      _this.handleBodyScrollTop(e);\n    };\n\n    _this.handleWheel = function (event) {\n      var _this$props$scroll3 = _this.props.scroll,\n          scroll = _this$props$scroll3 === void 0 ? {} : _this$props$scroll3;\n\n      if (window.navigator.userAgent.match(/Trident\\/7\\./) && scroll.y) {\n        event.preventDefault();\n        var wd = event.deltaY;\n        var target = event.target;\n\n        var _assertThisInitialize3 = _assertThisInitialized(_this),\n            bodyTable = _assertThisInitialize3.bodyTable,\n            fixedColumnsBodyLeft = _assertThisInitialize3.fixedColumnsBodyLeft,\n            fixedColumnsBodyRight = _assertThisInitialize3.fixedColumnsBodyRight;\n\n        var scrollTop = 0;\n\n        if (_this.lastScrollTop) {\n          scrollTop = _this.lastScrollTop + wd;\n        } else {\n          scrollTop = wd;\n        }\n\n        if (fixedColumnsBodyLeft && target !== fixedColumnsBodyLeft) {\n          fixedColumnsBodyLeft.scrollTop = scrollTop;\n        }\n\n        if (fixedColumnsBodyRight && target !== fixedColumnsBodyRight) {\n          fixedColumnsBodyRight.scrollTop = scrollTop;\n        }\n\n        if (bodyTable && target !== bodyTable) {\n          bodyTable.scrollTop = scrollTop;\n        }\n      }\n    };\n\n    _this.saveRef = function (name) {\n      return function (node) {\n        _this[name] = node;\n      };\n    };\n\n    _this.saveTableNodeRef = function (node) {\n      _this.tableNode = node;\n    };\n\n    ['onRowClick', 'onRowDoubleClick', 'onRowContextMenu', 'onRowMouseEnter', 'onRowMouseLeave'].forEach(function (name) {\n      warning_1.default(props[name] === undefined, \"\".concat(name, \" is deprecated, please use onRow instead.\"));\n    });\n    warning_1.default(props.getBodyWrapper === undefined, 'getBodyWrapper is deprecated, please use custom components instead.');\n    _this.columnManager = new ColumnManager_1.default(props.columns, props.children);\n    _this.store = mini_store_1.create({\n      currentHoverKey: null,\n      fixedColumnsHeadRowsHeight: [],\n      fixedColumnsBodyRowsHeight: {}\n    });\n\n    _this.setScrollPosition('left');\n\n    _this.debouncedWindowResize = utils_1.debounce(_this.handleWindowResize, 150);\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        table: {\n          props: this.props,\n          columnManager: this.columnManager,\n          saveRef: this.saveRef,\n          components: merge_1.default({\n            table: 'table',\n            header: {\n              wrapper: 'thead',\n              row: 'tr',\n              cell: 'th'\n            },\n            body: {\n              wrapper: 'tbody',\n              row: 'tr',\n              cell: 'td'\n            }\n          }, this.props.components)\n        }\n      };\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.columnManager.isAnyColumnsFixed()) {\n        this.handleWindowResize();\n        this.resizeEvent = addEventListener_1.default(window, 'resize', this.debouncedWindowResize);\n      } // https://github.com/ant-design/ant-design/issues/11635\n\n\n      if (this.headTable) {\n        this.headTable.scrollLeft = 0;\n      }\n\n      if (this.bodyTable) {\n        this.bodyTable.scrollLeft = 0;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.columnManager.isAnyColumnsFixed()) {\n        this.handleWindowResize();\n\n        if (!this.resizeEvent) {\n          this.resizeEvent = addEventListener_1.default(window, 'resize', this.debouncedWindowResize);\n        }\n      } // when table changes to empty, reset scrollLeft\n\n\n      if (prevProps.data.length > 0 && this.props.data.length === 0 && this.hasScrollX()) {\n        this.resetScrollX();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.resizeEvent) {\n        this.resizeEvent.remove();\n      }\n\n      if (this.debouncedWindowResize) {\n        this.debouncedWindowResize.cancel();\n      }\n    }\n  }, {\n    key: \"setScrollPosition\",\n    value: function setScrollPosition(position) {\n      this.scrollPosition = position;\n\n      if (this.tableNode) {\n        var prefixCls = this.props.prefixCls;\n\n        if (position === 'both') {\n          component_classes_1.default(this.tableNode).remove(new RegExp(\"^\".concat(prefixCls, \"-scroll-position-.+$\"))).add(\"\".concat(prefixCls, \"-scroll-position-left\")).add(\"\".concat(prefixCls, \"-scroll-position-right\"));\n        } else {\n          component_classes_1.default(this.tableNode).remove(new RegExp(\"^\".concat(prefixCls, \"-scroll-position-.+$\"))).add(\"\".concat(prefixCls, \"-scroll-position-\").concat(position));\n        }\n      }\n    }\n  }, {\n    key: \"setScrollPositionClassName\",\n    value: function setScrollPositionClassName() {\n      var node = this.bodyTable;\n      var scrollToLeft = node.scrollLeft === 0;\n      var scrollToRight = node.scrollLeft + 1 >= node.children[0].getBoundingClientRect().width - node.getBoundingClientRect().width;\n\n      if (scrollToLeft && scrollToRight) {\n        this.setScrollPosition('both');\n      } else if (scrollToLeft) {\n        this.setScrollPosition('left');\n      } else if (scrollToRight) {\n        this.setScrollPosition('right');\n      } else if (this.scrollPosition !== 'middle') {\n        this.setScrollPosition('middle');\n      }\n    }\n  }, {\n    key: \"isTableLayoutFixed\",\n    value: function isTableLayoutFixed() {\n      var _this$props = this.props,\n          tableLayout = _this$props.tableLayout,\n          _this$props$columns = _this$props.columns,\n          columns = _this$props$columns === void 0 ? [] : _this$props$columns,\n          useFixedHeader = _this$props.useFixedHeader,\n          _this$props$scroll4 = _this$props.scroll,\n          scroll = _this$props$scroll4 === void 0 ? {} : _this$props$scroll4;\n\n      if (typeof tableLayout !== 'undefined') {\n        return tableLayout === 'fixed';\n      } // if one column is ellipsis, use fixed table layout to fix align issue\n\n\n      if (columns.some(function (_ref) {\n        var ellipsis = _ref.ellipsis;\n        return !!ellipsis;\n      })) {\n        return true;\n      } // if header fixed, use fixed table layout to fix align issue\n\n\n      if (useFixedHeader || scroll.y) {\n        return true;\n      } // if scroll.x is number/px/% width value, we should fixed table layout\n      // to avoid long word layout broken issue\n\n\n      if (scroll.x && scroll.x !== true && scroll.x !== 'max-content') {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"resetScrollX\",\n    value: function resetScrollX() {\n      if (this.headTable) {\n        this.headTable.scrollLeft = 0;\n      }\n\n      if (this.bodyTable) {\n        this.bodyTable.scrollLeft = 0;\n      }\n    }\n  }, {\n    key: \"hasScrollX\",\n    value: function hasScrollX() {\n      var _this$props$scroll5 = this.props.scroll,\n          scroll = _this$props$scroll5 === void 0 ? {} : _this$props$scroll5;\n      return 'x' in scroll;\n    }\n  }, {\n    key: \"renderMainTable\",\n    value: function renderMainTable() {\n      var _this$props2 = this.props,\n          scroll = _this$props2.scroll,\n          prefixCls = _this$props2.prefixCls;\n      var isAnyColumnsFixed = this.columnManager.isAnyColumnsFixed();\n      var scrollable = isAnyColumnsFixed || scroll.x || scroll.y;\n      var table = [this.renderTable({\n        columns: this.columnManager.groupedColumns(),\n        isAnyColumnsFixed: isAnyColumnsFixed\n      }), this.renderEmptyText(), this.renderFooter()];\n      return scrollable ? React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-scroll\")\n      }, table) : table;\n    }\n  }, {\n    key: \"renderLeftFixedTable\",\n    value: function renderLeftFixedTable() {\n      var prefixCls = this.props.prefixCls;\n      return React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-fixed-left\")\n      }, this.renderTable({\n        columns: this.columnManager.leftColumns(),\n        fixed: 'left'\n      }));\n    }\n  }, {\n    key: \"renderRightFixedTable\",\n    value: function renderRightFixedTable() {\n      var prefixCls = this.props.prefixCls;\n      return React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-fixed-right\")\n      }, this.renderTable({\n        columns: this.columnManager.rightColumns(),\n        fixed: 'right'\n      }));\n    }\n  }, {\n    key: \"renderTable\",\n    value: function renderTable(options) {\n      var columns = options.columns,\n          fixed = options.fixed,\n          isAnyColumnsFixed = options.isAnyColumnsFixed;\n      var _this$props3 = this.props,\n          prefixCls = _this$props3.prefixCls,\n          _this$props3$scroll = _this$props3.scroll,\n          scroll = _this$props3$scroll === void 0 ? {} : _this$props3$scroll;\n      var tableClassName = scroll.x || fixed ? \"\".concat(prefixCls, \"-fixed\") : '';\n      var headTable = React.createElement(HeadTable_1.default, {\n        key: \"head\",\n        columns: columns,\n        fixed: fixed,\n        tableClassName: tableClassName,\n        handleBodyScrollLeft: this.handleBodyScrollLeft,\n        expander: this.expander\n      });\n      var bodyTable = React.createElement(BodyTable_1.default, {\n        key: \"body\",\n        columns: columns,\n        fixed: fixed,\n        tableClassName: tableClassName,\n        getRowKey: this.getRowKey,\n        handleWheel: this.handleWheel,\n        handleBodyScroll: this.handleBodyScroll,\n        expander: this.expander,\n        isAnyColumnsFixed: isAnyColumnsFixed\n      });\n      return [headTable, bodyTable];\n    }\n  }, {\n    key: \"renderTitle\",\n    value: function renderTitle() {\n      var _this$props4 = this.props,\n          title = _this$props4.title,\n          prefixCls = _this$props4.prefixCls;\n      return title ? React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-title\"),\n        key: \"title\"\n      }, title(this.props.data)) : null;\n    }\n  }, {\n    key: \"renderFooter\",\n    value: function renderFooter() {\n      var _this$props5 = this.props,\n          footer = _this$props5.footer,\n          prefixCls = _this$props5.prefixCls;\n      return footer ? React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-footer\"),\n        key: \"footer\"\n      }, footer(this.props.data)) : null;\n    }\n  }, {\n    key: \"renderEmptyText\",\n    value: function renderEmptyText() {\n      var _this$props6 = this.props,\n          emptyText = _this$props6.emptyText,\n          prefixCls = _this$props6.prefixCls,\n          data = _this$props6.data;\n\n      if (data.length) {\n        return null;\n      }\n\n      var emptyClassName = \"\".concat(prefixCls, \"-placeholder\");\n      return React.createElement(\"div\", {\n        className: emptyClassName,\n        key: \"emptyText\"\n      }, typeof emptyText === 'function' ? emptyText() : emptyText);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classnames_1$default,\n          _this2 = this;\n\n      var props = this.props;\n      var prefixCls = props.prefixCls;\n\n      if (this.state.columns) {\n        this.columnManager.reset(props.columns);\n      } else if (this.state.children) {\n        this.columnManager.reset(null, props.children);\n      }\n\n      var tableClassName = classnames_1.default(props.prefixCls, props.className, (_classnames_1$default = {}, _defineProperty(_classnames_1$default, \"\".concat(prefixCls, \"-fixed-header\"), props.useFixedHeader || props.scroll && props.scroll.y), _defineProperty(_classnames_1$default, \"\".concat(prefixCls, \"-scroll-position-left \").concat(prefixCls, \"-scroll-position-right\"), this.scrollPosition === 'both'), _defineProperty(_classnames_1$default, \"\".concat(prefixCls, \"-scroll-position-\").concat(this.scrollPosition), this.scrollPosition !== 'both'), _defineProperty(_classnames_1$default, \"\".concat(prefixCls, \"-layout-fixed\"), this.isTableLayoutFixed()), _classnames_1$default));\n      var hasLeftFixed = this.columnManager.isAnyColumnsLeftFixed();\n      var hasRightFixed = this.columnManager.isAnyColumnsRightFixed();\n      var dataAndAriaProps = utils_1.getDataAndAriaProps(props);\n      return React.createElement(mini_store_1.Provider, {\n        store: this.store\n      }, React.createElement(ExpandableTable_1.default, Object.assign({}, props, {\n        columnManager: this.columnManager,\n        getRowKey: this.getRowKey\n      }), function (expander) {\n        _this2.expander = expander;\n        return React.createElement(\"div\", Object.assign({\n          ref: _this2.saveTableNodeRef,\n          className: tableClassName,\n          style: props.style,\n          id: props.id\n        }, dataAndAriaProps), _this2.renderTitle(), React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-content\")\n        }, _this2.renderMainTable(), hasLeftFixed && _this2.renderLeftFixedTable(), hasRightFixed && _this2.renderRightFixedTable()));\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.columns && nextProps.columns !== prevState.columns) {\n        return {\n          columns: nextProps.columns,\n          children: null\n        };\n      }\n\n      if (nextProps.children !== prevState.children) {\n        return {\n          columns: null,\n          children: nextProps.children\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Table;\n}(React.Component);\n\nTable.childContextTypes = {\n  table: PropTypes.any,\n  components: PropTypes.any\n};\nTable.Column = Column_1.default;\nTable.ColumnGroup = ColumnGroup_1.default;\nTable.defaultProps = {\n  data: [],\n  useFixedHeader: false,\n  rowKey: 'key',\n  rowClassName: function rowClassName() {\n    return '';\n  },\n  onRow: function onRow() {},\n  onHeaderRow: function onHeaderRow() {},\n  prefixCls: 'rc-table',\n  bodyStyle: {},\n  style: {},\n  showHeader: true,\n  scroll: {},\n  rowRef: function rowRef() {\n    return null;\n  },\n  emptyText: function emptyText() {\n    return 'No Data';\n  }\n};\nreact_lifecycles_compat_1.polyfill(Table);\nexports.default = Table;","map":null,"metadata":{},"sourceType":"script"}