{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\src\\\\layouts\\\\StatisticsManage\\\\DataPage\\\\StatisticsTable.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport TableLayout from 'Components/TableLayout';\nvar StatisticsTable = (_dec = inject('StatisticsStore'), _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_Component) {\n  _inherits(StatisticsTable, _Component);\n\n  var _super = _createSuper(StatisticsTable);\n\n  function StatisticsTable() {\n    var _this;\n\n    _classCallCheck(this, StatisticsTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.changePage = function (e) {\n      _this.props.StatisticsStore.pageInfo = e;\n      _this.props.StatisticsStore.pageInfo.pageIndex = e.current;\n      var _this$props$Statistic = _this.props.StatisticsStore,\n          getData = _this$props$Statistic.getData,\n          pageInfo = _this$props$Statistic.pageInfo,\n          columnsType = _this$props$Statistic.columnsType,\n          searchDate = _this$props$Statistic.searchDate;\n      getData(columnsType, {\n        pageIndex: pageInfo.pageIndex,\n        pageSize: pageInfo.pageSize,\n        startDate: searchDate[0],\n        endDate: searchDate[1]\n      });\n    };\n\n    _this.getColumns = function () {\n      var columnsType = _this.props.StatisticsStore.columnsType;\n\n      if (columnsType === 1) {\n        return [{\n          title: '设备名称',\n          dataIndex: 'deviceName',\n          key: 'deviceName'\n        }, {\n          title: '设备编号',\n          dataIndex: 'deviceCode',\n          key: 'deviceCode'\n        }, {\n          title: '故障次数',\n          dataIndex: 'maintainCount',\n          key: 'maintainCount'\n        }, {\n          title: '故障率',\n          dataIndex: 'maintainRate',\n          key: 'maintainRate',\n          render: function render(text) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 25\n              }\n            }, text, \"%\");\n          }\n        }, {\n          title: '操作',\n          align: 'right',\n          render: function render(text, record) {\n            return /*#__PURE__*/React.createElement(\"span\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"a\", {\n              onClick: function onClick(e) {\n                return _this.toDetail(0, record);\n              },\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 29\n              }\n            }, \"\\u8BE6\\u60C5\"));\n          }\n        }];\n      } else if (columnsType === 2) {\n        return [{\n          title: '备件名称',\n          dataIndex: 'spareName',\n          key: 'spareName'\n        }, {\n          title: '备件编号',\n          dataIndex: 'spareCode',\n          key: 'spareCode'\n        }, {\n          title: '出库',\n          dataIndex: 'used',\n          key: 'used'\n        }, {\n          title: '还库',\n          dataIndex: 'back',\n          key: 'back'\n        }, {\n          title: '库存',\n          dataIndex: 'stock',\n          key: 'stock'\n        }];\n      } else if (columnsType === 3) {\n        return [{\n          title: '设备名称',\n          dataIndex: 'deviceName',\n          key: 'deviceName'\n        }, {\n          title: '设备编号',\n          dataIndex: 'deviceCode',\n          key: 'deviceCode'\n        }, {\n          title: '正常点检次数',\n          dataIndex: 'checkCount',\n          key: 'checkCount'\n        }, {\n          title: '超时点检次数',\n          dataIndex: 'overtimeCheckCount',\n          key: 'overtimeCheckCount'\n        }, {\n          title: '未点检次数',\n          dataIndex: 'nocheckCount',\n          key: 'nocheckCount'\n        }, {\n          title: '操作',\n          align: 'right',\n          render: function render(text, record) {\n            return /*#__PURE__*/React.createElement(\"span\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"a\", {\n              onClick: function onClick(e) {\n                return _this.openLog(record);\n              },\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 29\n              }\n            }, \"\\u8BE6\\u60C5\"));\n          }\n        }];\n      } else {\n        return [{\n          title: '姓名',\n          dataIndex: 'name',\n          key: 'name'\n        }, {\n          title: '工号',\n          dataIndex: 'username',\n          key: 'username'\n        }, {\n          title: '维修次数',\n          dataIndex: 'maintainCount',\n          key: 'maintainCount'\n        }, {\n          title: '维修用时',\n          dataIndex: 'hours',\n          key: 'hours'\n        }, {\n          title: '平均用时',\n          dataIndex: 'avgHours',\n          key: 'avgHours'\n        }, {\n          title: '完成率',\n          dataIndex: 'rate',\n          key: 'rate',\n          render: function render(text) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 25\n              }\n            }, text, \"%\");\n          }\n        }, {\n          title: '操作',\n          align: 'right',\n          render: function render(text, record) {\n            return /*#__PURE__*/React.createElement(\"span\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"a\", {\n              onClick: function onClick(e) {\n                return _this.toDetail(1, record);\n              },\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 29\n              }\n            }, \"\\u8BE6\\u60C5\"));\n          }\n        }];\n      }\n    };\n\n    _this.openLog = function (record) {\n      console.log(record);\n      _this.props.StatisticsStore.deviceId = record.deviceId;\n      _this.props.StatisticsStore.breakenInfo = [];\n\n      _this.props.StatisticsStore.getBreakenInfo({\n        deviceId: record.deviceId\n      });\n\n      _this.props.StatisticsStore.modalChange();\n    };\n\n    _this.toDetail = function (type, record) {\n      _this.props.StatisticsStore.detailInfo = record;\n      var _this$props$Statistic2 = _this.props.StatisticsStore,\n          searchDate = _this$props$Statistic2.searchDate,\n          getAllWorkInfo = _this$props$Statistic2.getAllWorkInfo,\n          detailInfo = _this$props$Statistic2.detailInfo;\n\n      if (type) {\n        _this.props.StatisticsStore.getAllWorkInfo({\n          userId: record.userId,\n          startDate: searchDate[0],\n          endDate: searchDate[1]\n        });\n\n        _this.props.history.push('/statistics/performance');\n      } else {\n        _this.props.history.push('/statistics/device');\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(StatisticsTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$Statistic3 = this.props.StatisticsStore,\n          tableData = _this$props$Statistic3.tableData,\n          pageInfo = _this$props$Statistic3.pageInfo,\n          isLoading = _this$props$Statistic3.isLoading;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginTop: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(TableLayout, {\n        size: \"middle\",\n        rowKey: \"id\",\n        loading: isLoading,\n        onChange: this.changePage,\n        pagination: pageInfo,\n        columns: this.getColumns(),\n        dataSource: tableData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return StatisticsTable;\n}(Component), _temp)) || _class) || _class);\nexport default StatisticsTable;","map":{"version":3,"sources":["C:/Users/Misaki/Desktop/kda/设备运维前端/bl-device-manage/src/layouts/StatisticsManage/DataPage/StatisticsTable.js"],"names":["React","Component","inject","observer","TableLayout","StatisticsTable","changePage","e","props","StatisticsStore","pageInfo","pageIndex","current","getData","columnsType","searchDate","pageSize","startDate","endDate","getColumns","title","dataIndex","key","render","text","align","record","toDetail","openLog","console","log","deviceId","breakenInfo","getBreakenInfo","modalChange","type","detailInfo","getAllWorkInfo","userId","history","push","tableData","isLoading","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { Badge, Table } from 'antd';\nimport TableLayout from 'Components/TableLayout'\n\n\n@inject('StatisticsStore')\n@observer\nclass StatisticsTable extends Component {\n    render() {\n        const { tableData, pageInfo, isLoading } = this.props.StatisticsStore\n        return <div style={{ marginTop: 20 }}>\n            <TableLayout size='middle' rowKey=\"id\" loading={isLoading} onChange={this.changePage} pagination={pageInfo} columns={this.getColumns()} dataSource={tableData} />\n        </div>;\n    }\n    changePage = (e) => {\n        this.props.StatisticsStore.pageInfo = e\n        this.props.StatisticsStore.pageInfo.pageIndex = e.current\n        const { getData, pageInfo, columnsType, searchDate } = this.props.StatisticsStore\n        getData(columnsType, { pageIndex: pageInfo.pageIndex, pageSize: pageInfo.pageSize, startDate: searchDate[0], endDate: searchDate[1] })\n    }\n    getColumns = () => {\n        const { columnsType } = this.props.StatisticsStore\n        if (columnsType === 1) {\n            return [\n                {\n                    title: '设备名称',\n                    dataIndex: 'deviceName',\n                    key: 'deviceName',\n                },\n                {\n                    title: '设备编号',\n                    dataIndex: 'deviceCode',\n                    key: 'deviceCode',\n                },\n                {\n                    title: '故障次数',\n                    dataIndex: 'maintainCount',\n                    key: 'maintainCount',\n                },\n                {\n                    title: '故障率',\n                    dataIndex: 'maintainRate',\n                    key: 'maintainRate',\n                    render: (text) => (\n                        <div>{text}%</div>\n                    )\n                },\n                {\n                    title: '操作',\n                    align: 'right',\n                    render: (text, record) => (\n                        <span>\n                            <a onClick={e => this.toDetail(0, record)}>详情</a>\n                        </span>\n                    )\n                }\n            ]\n        } else if (columnsType === 2) {\n            return [\n                {\n                    title: '备件名称',\n                    dataIndex: 'spareName',\n                    key: 'spareName',\n                },\n                {\n                    title: '备件编号',\n                    dataIndex: 'spareCode',\n                    key: 'spareCode',\n                },\n                {\n                    title: '出库',\n                    dataIndex: 'used',\n                    key: 'used',\n                },\n                {\n                    title: '还库',\n                    dataIndex: 'back',\n                    key: 'back',\n                },\n                {\n                    title: '库存',\n                    dataIndex: 'stock',\n                    key: 'stock',\n                }\n            ]\n        } else if (columnsType === 3) {\n            return [\n                {\n                    title: '设备名称',\n                    dataIndex: 'deviceName',\n                    key: 'deviceName',\n                },\n                {\n                    title: '设备编号',\n                    dataIndex: 'deviceCode',\n                    key: 'deviceCode',\n                },\n                {\n                    title: '正常点检次数',\n                    dataIndex: 'checkCount',\n                    key: 'checkCount',\n                },\n                {\n                    title: '超时点检次数',\n                    dataIndex: 'overtimeCheckCount',\n                    key: 'overtimeCheckCount',\n                },\n                {\n                    title: '未点检次数',\n                    dataIndex: 'nocheckCount',\n                    key: 'nocheckCount',\n                },\n                {\n                    title: '操作',\n                    align: 'right',\n                    render: (text, record) => (\n                        <span>\n                            <a onClick={e => this.openLog(record)}>详情</a>\n                        </span>\n                    )\n                }\n            ]\n        } else {\n            return [\n                {\n                    title: '姓名',\n                    dataIndex: 'name',\n                    key: 'name',\n                },\n                {\n                    title: '工号',\n                    dataIndex: 'username',\n                    key: 'username',\n                },\n                {\n                    title: '维修次数',\n                    dataIndex: 'maintainCount',\n                    key: 'maintainCount',\n                },\n                {\n                    title: '维修用时',\n                    dataIndex: 'hours',\n                    key: 'hours',\n                },\n                {\n                    title: '平均用时',\n                    dataIndex: 'avgHours',\n                    key: 'avgHours',\n                },\n                {\n                    title: '完成率',\n                    dataIndex: 'rate',\n                    key: 'rate',\n                    render: (text) => (\n                        <div>{text}%</div>\n                    )\n                },\n                {\n                    title: '操作',\n                    align: 'right',\n                    render: (text, record) => (\n                        <span>\n                            <a onClick={e => this.toDetail(1, record)}>详情</a>\n                        </span>\n                    )\n                }\n            ]\n        }\n    }\n    openLog = (record) => {\n        console.log(record)\n        this.props.StatisticsStore.deviceId = record.deviceId\n        this.props.StatisticsStore.breakenInfo = []\n        this.props.StatisticsStore.getBreakenInfo({ deviceId: record.deviceId })\n        this.props.StatisticsStore.modalChange()\n    }\n    toDetail = (type, record) => {\n        this.props.StatisticsStore.detailInfo = record\n        const { searchDate, getAllWorkInfo, detailInfo } = this.props.StatisticsStore\n        if (type) {\n            this.props.StatisticsStore.getAllWorkInfo({ userId: record.userId, startDate: searchDate[0], endDate: searchDate[1] })\n            this.props.history.push('/statistics/performance')\n\n        } else {\n            this.props.history.push('/statistics/device')\n        }\n    }\n\n}\nexport default StatisticsTable;"]},"metadata":{},"sourceType":"module"}