{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\")[\"default\"];\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _createSuper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createSuper\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _EllipsisOutlined = _interopRequireDefault(require(\"@ant-design/icons/EllipsisOutlined\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _rcMenu = _interopRequireWildcard(require(\"rc-menu\"));\n\nvar _useEvent = _interopRequireDefault(require(\"rc-util/lib/hooks/useEvent\"));\n\nvar _omit = _interopRequireDefault(require(\"rc-util/lib/omit\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _configProvider = require(\"../config-provider\");\n\nvar _Sider = require(\"../layout/Sider\");\n\nvar _motion = _interopRequireDefault(require(\"../_util/motion\"));\n\nvar _reactNode = require(\"../_util/reactNode\");\n\nvar _warning = _interopRequireDefault(require(\"../_util/warning\"));\n\nvar _useItems = _interopRequireDefault(require(\"./hooks/useItems\"));\n\nvar _MenuContext = _interopRequireDefault(require(\"./MenuContext\"));\n\nvar _MenuDivider = _interopRequireDefault(require(\"./MenuDivider\"));\n\nvar _MenuItem = _interopRequireDefault(require(\"./MenuItem\"));\n\nvar _OverrideContext = _interopRequireDefault(require(\"./OverrideContext\"));\n\nvar _SubMenu = _interopRequireDefault(require(\"./SubMenu\"));\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar InternalMenu = /*#__PURE__*/(0, React.forwardRef)(function (props, ref) {\n  var _a;\n\n  var override = React.useContext(_OverrideContext[\"default\"]) || {};\n\n  var _React$useContext = React.useContext(_configProvider.ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      getPopupContainer = _React$useContext.getPopupContainer,\n      direction = _React$useContext.direction;\n\n  var rootPrefixCls = getPrefixCls();\n\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      _props$theme = props.theme,\n      theme = _props$theme === void 0 ? 'light' : _props$theme,\n      expandIcon = props.expandIcon,\n      _internalDisableMenuItemTitleTooltip = props._internalDisableMenuItemTitleTooltip,\n      inlineCollapsed = props.inlineCollapsed,\n      siderCollapsed = props.siderCollapsed,\n      items = props.items,\n      children = props.children,\n      mode = props.mode,\n      selectable = props.selectable,\n      onClick = props.onClick,\n      restProps = __rest(props, [\"prefixCls\", \"className\", \"theme\", \"expandIcon\", \"_internalDisableMenuItemTitleTooltip\", \"inlineCollapsed\", \"siderCollapsed\", \"items\", \"children\", \"mode\", \"selectable\", \"onClick\"]);\n\n  var passedProps = (0, _omit[\"default\"])(restProps, ['collapsedWidth']); // ========================= Items ===========================\n\n  var mergedChildren = (0, _useItems[\"default\"])(items) || children; // ======================== Warning ==========================\n\n  process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(!('inlineCollapsed' in props && mode !== 'inline'), 'Menu', '`inlineCollapsed` should only be used when `mode` is inline.') : void 0;\n  process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(!(props.siderCollapsed !== undefined && 'inlineCollapsed' in props), 'Menu', '`inlineCollapsed` not control Menu under Sider. Should set `collapsed` on Sider instead.') : void 0;\n  process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])('items' in props && !children, 'Menu', '`children` will be removed in next major version. Please use `items` instead.') : void 0;\n  (_a = override.validator) === null || _a === void 0 ? void 0 : _a.call(override, {\n    mode: mode\n  }); // ========================== Click ==========================\n  // Tell dropdown that item clicked\n\n  var onItemClick = (0, _useEvent[\"default\"])(function () {\n    var _a;\n\n    onClick === null || onClick === void 0 ? void 0 : onClick.apply(void 0, arguments);\n    (_a = override === null || override === void 0 ? void 0 : override.onClick) === null || _a === void 0 ? void 0 : _a.call(override);\n  }); // ========================== Mode ===========================\n\n  var mergedMode = override.mode || mode; // ======================= Selectable ========================\n\n  var mergedSelectable = selectable !== null && selectable !== void 0 ? selectable : override.selectable; // ======================== Collapsed ========================\n  // Inline Collapsed\n\n  var mergedInlineCollapsed = React.useMemo(function () {\n    if (siderCollapsed !== undefined) {\n      return siderCollapsed;\n    }\n\n    return inlineCollapsed;\n  }, [inlineCollapsed, siderCollapsed]);\n  var defaultMotions = {\n    horizontal: {\n      motionName: \"\".concat(rootPrefixCls, \"-slide-up\")\n    },\n    inline: _motion[\"default\"],\n    other: {\n      motionName: \"\".concat(rootPrefixCls, \"-zoom-big\")\n    }\n  };\n  var prefixCls = getPrefixCls('menu', customizePrefixCls || override.prefixCls);\n  var menuClassName = (0, _classnames[\"default\"])(\"\".concat(prefixCls, \"-\").concat(theme), className); // ====================== Expand Icon ========================\n\n  var mergedExpandIcon;\n\n  if (typeof expandIcon === 'function') {\n    mergedExpandIcon = expandIcon;\n  } else {\n    mergedExpandIcon = (0, _reactNode.cloneElement)(expandIcon || override.expandIcon, {\n      className: \"\".concat(prefixCls, \"-submenu-expand-icon\")\n    });\n  } // ======================== Context ==========================\n\n\n  var contextValue = React.useMemo(function () {\n    return {\n      prefixCls: prefixCls,\n      inlineCollapsed: mergedInlineCollapsed || false,\n      antdMenuTheme: theme,\n      direction: direction,\n      firstLevel: true,\n      disableMenuItemTitleTooltip: _internalDisableMenuItemTitleTooltip\n    };\n  }, [prefixCls, mergedInlineCollapsed, theme, direction, _internalDisableMenuItemTitleTooltip]); // ========================= Render ==========================\n\n  return /*#__PURE__*/React.createElement(_OverrideContext[\"default\"].Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(_MenuContext[\"default\"].Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(_rcMenu[\"default\"], (0, _extends2[\"default\"])({\n    getPopupContainer: getPopupContainer,\n    overflowedIndicator: /*#__PURE__*/React.createElement(_EllipsisOutlined[\"default\"], null),\n    overflowedIndicatorPopupClassName: \"\".concat(prefixCls, \"-\").concat(theme),\n    mode: mergedMode,\n    selectable: mergedSelectable,\n    onClick: onItemClick\n  }, passedProps, {\n    inlineCollapsed: mergedInlineCollapsed,\n    className: menuClassName,\n    prefixCls: prefixCls,\n    direction: direction,\n    defaultMotions: defaultMotions,\n    expandIcon: mergedExpandIcon,\n    ref: ref\n  }), mergedChildren)));\n}); // We should keep this as ref-able\n\nvar Menu = /*#__PURE__*/function (_React$Component) {\n  (0, _inherits2[\"default\"])(Menu, _React$Component);\n\n  var _super = (0, _createSuper2[\"default\"])(Menu);\n\n  function Menu() {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, Menu);\n    _this = _super.apply(this, arguments);\n\n    _this.focus = function (options) {\n      var _a;\n\n      (_a = _this.menu) === null || _a === void 0 ? void 0 : _a.focus(options);\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(Menu, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(_Sider.SiderContext.Consumer, null, function (context) {\n        return /*#__PURE__*/React.createElement(InternalMenu, (0, _extends2[\"default\"])({\n          ref: function ref(node) {\n            _this2.menu = node;\n          }\n        }, _this2.props, context));\n      });\n    }\n  }]);\n  return Menu;\n}(React.Component);\n\nMenu.Divider = _MenuDivider[\"default\"];\nMenu.Item = _MenuItem[\"default\"];\nMenu.SubMenu = _SubMenu[\"default\"];\nMenu.ItemGroup = _rcMenu.ItemGroup;\nvar _default = Menu;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}