{"ast":null,"code":"import _objectSpread from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _dec2, _class, _descriptor, _descriptor2, _temp;\n\nimport { observable, action } from 'mobx';\nimport { isDataExist } from 'Utils/dataTools';\nimport * as services from '../services/basic';\nvar TitleConfig = (_dec = action.bound, _dec2 = action.bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function TitleConfig() {\n    _classCallCheck(this, TitleConfig);\n\n    _initializerDefineProperty(this, \"titleList\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"isLoading\", _descriptor2, this);\n  }\n\n  _createClass(TitleConfig, [{\n    key: \"getTitle\",\n    value: function () {\n      var _getTitle = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.isLoading = true;\n                this.titleList = [];\n                _context.prev = 2;\n                _context.next = 5;\n                return services.gets('getTitle')(params);\n\n              case 5:\n                res = _context.sent;\n                this.isLoading = false;\n\n                if (isDataExist(res)) {\n                  this.titleList = res.data.data;\n                }\n\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 10]]);\n      }));\n\n      function getTitle(_x) {\n        return _getTitle.apply(this, arguments);\n      }\n\n      return getTitle;\n    }()\n  }, {\n    key: \"saveTitle\",\n    value: function () {\n      var _saveTitle = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(params, extParams) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.isLoading = true;\n                _context2.prev = 1;\n                _context2.next = 4;\n                return services.posts('saveTitle')(params);\n\n              case 4:\n                res = _context2.sent;\n                this.isLoading = false;\n\n                if (isDataExist(res)) {\n                  _message.success('保存成功！');\n\n                  this.getTitle(_objectSpread({}, extParams));\n                }\n\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.log(_context2.t0);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 9]]);\n      }));\n\n      function saveTitle(_x2, _x3) {\n        return _saveTitle.apply(this, arguments);\n      }\n\n      return saveTitle;\n    }()\n  }]);\n\n  return TitleConfig;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"titleList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"isLoading\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"getTitle\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"getTitle\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"saveTitle\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"saveTitle\"), _class.prototype)), _class));\nvar TitleConfigStore = new TitleConfig();\nexport default TitleConfigStore;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage\\src\\stores\\TitleConfigStore.js"],"names":["observable","action","isDataExist","services","TitleConfig","bound","params","isLoading","titleList","gets","res","data","console","log","extParams","posts","success","getTitle","TitleConfigStore"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,QAAoC,MAApC;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAO,KAAKC,QAAZ,MAA0B,mBAA1B;IAGMC,W,WAGHH,MAAM,CAACI,K,UAaPJ,MAAM,CAACI,K;;;;;;;;;;;;;;;;gDAbqBC,M;;;;;;AAC3B,qBAAKC,SAAL,GAAiB,IAAjB;AACA,qBAAKC,SAAL,GAAiB,EAAjB;;;uBAEkBL,QAAQ,CAACM,IAAT,CAAc,UAAd,EAA0BH,MAA1B,C;;;AAAZI,gBAAAA,G;AACJ,qBAAKH,SAAL,GAAiB,KAAjB;;AACA,oBAAGL,WAAW,CAACQ,GAAD,CAAd,EAAoB;AAClB,uBAAKF,SAAL,GAAiBE,GAAG,CAACC,IAAJ,CAASA,IAA1B;AACD;;;;;;;;AAEDC,gBAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;;;;;;;;;;;iDAG0BP,M,EAAOQ,S;;;;;;AACnC,qBAAKP,SAAL,GAAiB,IAAjB;;;uBAEkBJ,QAAQ,CAACY,KAAT,CAAe,WAAf,EAA4BT,MAA5B,C;;;AAAZI,gBAAAA,G;AACJ,qBAAKH,SAAL,GAAiB,KAAjB;;AACA,oBAAGL,WAAW,CAACQ,GAAD,CAAd,EAAoB;AAClB,2BAAQM,OAAR,CAAgB,OAAhB;;AACA,uBAAKC,QAAL,mBAAkBH,SAAlB;AACD;;;;;;;;AAEDF,gBAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;;;;;;;;;sFAzBHb,U;;;;;WAAuB,E;;6EACvBA,U;;;;;WAAuB,K;;;AA6B1B,IAAIkB,gBAAgB,GAAG,IAAId,WAAJ,EAAvB;AACA,eAAec,gBAAf","sourcesContent":["import { observable, action, } from 'mobx';\nimport { isDataExist } from 'Utils/dataTools';\nimport * as services from '../services/basic';\nimport { message } from 'antd';\n\nclass TitleConfig {\n  @observable titleList = []\n  @observable isLoading = false\n  @action.bound async getTitle(params){\n    this.isLoading = true\n    this.titleList = []\n    try {\n      let res = await services.gets('getTitle')(params)\n      this.isLoading = false\n      if(isDataExist(res)){\n        this.titleList = res.data.data;\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  @action.bound async saveTitle(params,extParams){\n    this.isLoading = true\n    try {\n      let res = await services.posts('saveTitle')(params)\n      this.isLoading = false\n      if(isDataExist(res)){\n        message.success('保存成功！')\n        this.getTitle({...extParams})\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n}\nlet TitleConfigStore = new TitleConfig();\nexport default TitleConfigStore;\n"]},"metadata":{},"sourceType":"module"}