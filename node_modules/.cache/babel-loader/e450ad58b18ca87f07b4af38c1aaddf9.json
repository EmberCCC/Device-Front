{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\")[\"default\"];\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _toArray = _interopRequireDefault(require(\"rc-util/lib/Children/toArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _configProvider = require(\"../config-provider\");\n\nvar _popover = _interopRequireDefault(require(\"../popover\"));\n\nvar _reactNode = require(\"../_util/reactNode\");\n\nvar _avatar = _interopRequireDefault(require(\"./avatar\"));\n\nvar _SizeContext = require(\"./SizeContext\");\n\nvar Group = function Group(props) {\n  var _React$useContext = React.useContext(_configProvider.ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var customizePrefixCls = props.prefixCls,\n      _props$className = props.className,\n      className = _props$className === void 0 ? '' : _props$className,\n      maxCount = props.maxCount,\n      maxStyle = props.maxStyle,\n      size = props.size;\n  var prefixCls = getPrefixCls('avatar-group', customizePrefixCls);\n  var cls = (0, _classnames[\"default\"])(prefixCls, (0, _defineProperty2[\"default\"])({}, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), className);\n  var children = props.children,\n      _props$maxPopoverPlac = props.maxPopoverPlacement,\n      maxPopoverPlacement = _props$maxPopoverPlac === void 0 ? 'top' : _props$maxPopoverPlac,\n      _props$maxPopoverTrig = props.maxPopoverTrigger,\n      maxPopoverTrigger = _props$maxPopoverTrig === void 0 ? 'hover' : _props$maxPopoverTrig;\n  var childrenWithProps = (0, _toArray[\"default\"])(children).map(function (child, index) {\n    return (0, _reactNode.cloneElement)(child, {\n      key: \"avatar-key-\".concat(index)\n    });\n  });\n  var numOfChildren = childrenWithProps.length;\n\n  if (maxCount && maxCount < numOfChildren) {\n    var childrenShow = childrenWithProps.slice(0, maxCount);\n    var childrenHidden = childrenWithProps.slice(maxCount, numOfChildren);\n    childrenShow.push( /*#__PURE__*/React.createElement(_popover[\"default\"], {\n      key: \"avatar-popover-key\",\n      content: childrenHidden,\n      trigger: maxPopoverTrigger,\n      placement: maxPopoverPlacement,\n      overlayClassName: \"\".concat(prefixCls, \"-popover\")\n    }, /*#__PURE__*/React.createElement(_avatar[\"default\"], {\n      style: maxStyle\n    }, \"+\".concat(numOfChildren - maxCount))));\n    return /*#__PURE__*/React.createElement(_SizeContext.SizeContextProvider, {\n      size: size\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: cls,\n      style: props.style\n    }, childrenShow));\n  }\n\n  return /*#__PURE__*/React.createElement(_SizeContext.SizeContextProvider, {\n    size: size\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cls,\n    style: props.style\n  }, childrenWithProps));\n};\n\nvar _default = Group;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}