{"ast":null,"code":"\"use strict\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\"));\n\nvar PropTypes = __importStar(require(\"prop-types\"));\n\nvar classnames_1 = __importDefault(require(\"classnames\"));\n\nvar utils_1 = require(\"./utils\");\n\nvar BaseTable_1 = __importDefault(require(\"./BaseTable\"));\n\nfunction HeadTable(props, _ref) {\n  var table = _ref.table;\n  var _table$props = table.props,\n      prefixCls = _table$props.prefixCls,\n      scroll = _table$props.scroll,\n      showHeader = _table$props.showHeader;\n  var columns = props.columns,\n      fixed = props.fixed,\n      tableClassName = props.tableClassName,\n      handleBodyScrollLeft = props.handleBodyScrollLeft,\n      expander = props.expander;\n  var saveRef = table.saveRef;\n  var useFixedHeader = table.props.useFixedHeader;\n  var headStyle = {};\n  var scrollbarWidth = utils_1.measureScrollbar({\n    direction: 'vertical'\n  });\n\n  if (scroll.y) {\n    useFixedHeader = true; // https://github.com/ant-design/ant-design/issues/17051\n\n    var scrollbarWidthOfHeader = utils_1.measureScrollbar({\n      direction: 'horizontal',\n      prefixCls: prefixCls\n    }); // Add negative margin bottom for scroll bar overflow bug\n\n    if (scrollbarWidthOfHeader > 0 && !fixed) {\n      headStyle.marginBottom = \"-\".concat(scrollbarWidthOfHeader, \"px\");\n      headStyle.paddingBottom = '0px'; // https://github.com/ant-design/ant-design/pull/19986\n\n      headStyle.minWidth = \"\".concat(scrollbarWidth, \"px\"); // https://github.com/ant-design/ant-design/issues/17051\n\n      headStyle.overflowX = 'scroll';\n      headStyle.overflowY = scrollbarWidth === 0 ? 'hidden' : 'scroll';\n    }\n  }\n\n  if (!useFixedHeader || !showHeader) {\n    return null;\n  }\n\n  return React.createElement(\"div\", {\n    key: \"headTable\",\n    ref: fixed ? null : saveRef('headTable'),\n    className: classnames_1.default(\"\".concat(prefixCls, \"-header\"), _defineProperty({}, \"\".concat(prefixCls, \"-hide-scrollbar\"), scrollbarWidth > 0)),\n    style: headStyle,\n    onScroll: handleBodyScrollLeft\n  }, React.createElement(BaseTable_1.default, {\n    tableClassName: tableClassName,\n    hasHead: true,\n    hasBody: false,\n    fixed: fixed,\n    columns: columns,\n    expander: expander\n  }));\n}\n\nexports.default = HeadTable;\nHeadTable.contextTypes = {\n  table: PropTypes.any\n};","map":null,"metadata":{},"sourceType":"script"}