{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _defineProperty from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport _classCallCheck from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\src\\\\layouts\\\\ZCloudDevice\\\\DeviceMaintain\\\\Server.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport './index.less';\nimport GlobalList from 'components/GlobalList';\nimport { setServerColumns, setFormColumns } from './methods';\nimport ModalS from './cell/ModalS';\nvar CheckServer = (_dec = inject('ZCloudDeviceStore'), _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_Component) {\n  _inherits(CheckServer, _Component);\n\n  var _super = _createSuper(CheckServer);\n\n  function CheckServer(props) {\n    var _this;\n\n    _classCallCheck(this, CheckServer);\n\n    _this = _super.call(this, props);\n\n    _this.handleVisible = function (status) {\n      if (_this.state.visible) {\n        _this.state.extendFormColumns = [];\n        _this.state.minValue = '';\n        _this.state.maxValue = '';\n      }\n\n      if (status === 'add') {\n        _this.state.contentType = 1;\n      }\n\n      _this.setState({\n        visible: !_this.state.visible\n      });\n    };\n\n    _this.handleRadio = function (e) {\n      _this.setState({\n        contentType: e.target.value\n      });\n    };\n\n    _this.onDelItem = function () {\n      var extendsCol = _this.state.extendFormColumns;\n      extendsCol.pop();\n\n      _this.setState({\n        extendFormColumns: extendsCol\n      });\n    };\n\n    _this.onAddItem = function () {\n      var extendsCol = _this.state.extendFormColumns;\n      extendsCol.push({\n        id: extendsCol.length + 1,\n        label: '选项',\n        value: /*#__PURE__*/React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          style: {\n            width: '330px'\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 11\n          }\n        }),\n        key: 'strValue',\n        getFieldDecorator: {\n          // initialValue:item || undefined,\n          rules: [{\n            required: true,\n            message: '必填'\n          }]\n        }\n      });\n\n      _this.setState({\n        extendFormColumns: extendsCol\n      });\n    };\n\n    _this.handleDataValue = function (type, e) {\n      _this.setState(_defineProperty({}, type, e.target.value));\n    };\n\n    _this.handleSubmit = function (values) {\n      var deviceType = _this.store.deviceType;\n      var success = true;\n      var strValue = [],\n          params = {\n        deviceType: deviceType,\n        maintainType: _this.store.maintainType\n      };\n\n      for (var k in values) {\n        if (k.indexOf('strValue') > -1) {\n          strValue.push(values[k]);\n        } else {\n          params[k] = values[k];\n        }\n      }\n\n      if (values.contentType === 2) {\n        if (strValue.length < 1) {\n          _message.error('请输入至少一条选项值');\n\n          success = false;\n          return;\n        }\n\n        params.strValue = strValue.join(';');\n      }\n\n      if (values.contentType === 3) {\n        params.minValue = parseFloat(_this.state.minValue);\n        params.maxValue = parseFloat(_this.state.maxValue);\n      }\n\n      if (_this.store.status === 'edit') {\n        params.maintainId = _this.store.currentMain.maintainId;\n      }\n\n      _this.store.saveMaintain(params);\n\n      if (success) {\n        _this.handleVisible();\n      }\n    };\n\n    _this.handleEdit = function (value) {\n      _this.store.status = 'edit';\n\n      _this.store.getServeInfo({\n        id: value\n      }).then(function () {\n        var extList = [];\n\n        if (_this.store.currentMain.contentType === 2) {\n          var strValue = _this.store.currentMain.strValue.split(';');\n\n          strValue.map(function (item, idx) {\n            extList.push({\n              id: idx + 1,\n              label: '选项',\n              value: /*#__PURE__*/React.createElement(_Input, {\n                placeholder: \"\\u8BF7\\u8F93\\u5165\",\n                style: {\n                  width: '330px'\n                },\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 14\n                }\n              }),\n              key: 'strValue',\n              getFieldDecorator: {\n                initialValue: item || undefined,\n                rules: [{\n                  required: true,\n                  message: '必填'\n                }]\n              }\n            });\n          });\n        } else if (_this.store.currentMain.contentType === 3) {\n          _this.state.minValue = _this.store.currentMain.minValue;\n          _this.state.maxValue = _this.store.currentMain.maxValue;\n        }\n\n        _this.setState({\n          contentType: _this.store.currentMain.contentType,\n          extendFormColumns: extList\n        });\n\n        _this.handleVisible();\n      });\n    };\n\n    _this.handleDelete = function (_ref) {\n      var value = _ref.value,\n          type = _ref.type;\n\n      if (type === 'batch') {\n        if (_this.state.selectedRowKeys.length < 1) {\n          _Modal.warn({\n            title: '提示',\n            content: '请选择需要删除的内容'\n          });\n        } else {\n          _Modal.confirm({\n            title: '提示',\n            content: '确定删除选中的' + _this.state.selectedRowKeys.length + '条内容？',\n            okText: '确定',\n            cancelText: '取消',\n            onOk: function onOk() {\n              _this.store.removeMaintain({\n                ids: _this.state.selectedRowKeys\n              }, 'batch');\n            }\n          });\n        }\n      } else {\n        _Modal.confirm({\n          title: '提示',\n          content: '确定删除当前内容？',\n          okText: '确定',\n          cancelText: '取消',\n          onOk: function onOk() {\n            _this.store.removeMaintain({\n              id: value\n            }, 'single');\n          }\n        });\n      }\n    };\n\n    _this.handleSelect = function (selectedRowKeys) {\n      _this.setState({\n        selectedRowKeys: selectedRowKeys\n      });\n    };\n\n    _this.handleCheckTag = function (tag) {\n      _this.store.deviceType = tag.typeName;\n\n      _this.store.getMaintain({\n        pageIndex: 1,\n        pageSize: 10,\n        deviceType: tag.typeName === '全部' ? '' : tag.typeName\n      });\n    };\n\n    _this.store = _this.props.ZCloudDeviceStore;\n    _this.state = {\n      selectedRowKeys: [],\n      visible: false,\n      contentType: 1,\n      maxValue: '',\n      minValue: '',\n      extendFormColumns: []\n    };\n    return _this;\n  }\n\n  _createClass(CheckServer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$store = this.store,\n          maintainList = _this$store.maintainList,\n          maintainPage = _this$store.maintainPage,\n          deviceList = _this$store.deviceList,\n          isLoading = _this$store.isLoading,\n          status = _this$store.status,\n          currentMain = _this$store.currentMain;\n      var _this$state = this.state,\n          contentType = _this$state.contentType,\n          minValue = _this$state.minValue,\n          maxValue = _this$state.maxValue;\n      var rowSelection = {\n        selectedRowKeys: this.state.selectedRowKeys,\n        onChange: this.handleSelect\n      };\n      var modal = {\n        visible: this.state.visible,\n        title: status === 'add' ? '新增' : '编辑',\n        onCancel: this.handleVisible,\n        onOk: this.handleSubmit,\n        isForm: true,\n        okText: '确定',\n        cancelText: '取消',\n        formColumns: setFormColumns({\n          status: status,\n          currentMain: currentMain,\n          type: this.props.type,\n          handleRadio: this.handleRadio,\n          contentType: contentType,\n          minValue: minValue,\n          maxValue: maxValue,\n          onAddItem: this.onAddItem,\n          onDelItem: this.onDelItem,\n          handleDataValue: this.handleDataValue\n        }),\n        extendFormColumns: this.state.contentType === 2 && this.state.extendFormColumns\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(GlobalList, {\n        checkedTag: {\n          dataSource: deviceList,\n          title: '设备类型',\n          PopoVisible: false,\n          keyName: 'typeName',\n          defaultActiveKey: deviceList[0],\n          content: deviceList,\n          onClick: this.handleCheckTag\n        },\n        table: {\n          rowKey: 'maintainId',\n          columns: setServerColumns({\n            type: this.props.type,\n            handleEdit: this.handleEdit,\n            handleDelete: this.handleDelete\n          }),\n          dataSource: maintainList,\n          pagination: _objectSpread({}, maintainPage, {\n            onChange: function onChange(pageIndex, pageSize) {\n              _this2.store.getMaintain({\n                pageIndex: pageIndex,\n                pageSize: pageSize\n              });\n            }\n          }),\n          loading: isLoading,\n          rowSelection: rowSelection,\n          btns: [{\n            name: '新增',\n            onClick: function onClick() {\n              if (_this2.store.deviceType) {\n                _this2.store.status = 'add';\n\n                _this2.handleVisible('add');\n              } else {\n                _message.warn('请选择设备类型');\n              }\n            },\n            type: 'primary'\n          }, {\n            name: '删除',\n            onClick: function onClick() {\n              return _this2.handleDelete({\n                type: 'batch'\n              });\n            }\n          }]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 5\n        }\n      }), this.state.visible && /*#__PURE__*/React.createElement(ModalS, {\n        modal: modal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 28\n        }\n      }));\n    }\n    /* modal - operate */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.store.deviceType = '';\n      this.store.getMaintain({\n        pageIndex: 1,\n        pageSize: 10,\n        deviceType: this.store.deviceType\n      });\n    }\n  }]);\n\n  return CheckServer;\n}(Component), _temp)) || _class) || _class);\nexport default CheckServer;","map":{"version":3,"sources":["C:/Users/Misaki/Desktop/kda/设备运维前端/bl-device-manage/src/layouts/ZCloudDevice/DeviceMaintain/Server.js"],"names":["React","Component","inject","observer","GlobalList","setServerColumns","setFormColumns","ModalS","CheckServer","props","handleVisible","status","state","visible","extendFormColumns","minValue","maxValue","contentType","setState","handleRadio","e","target","value","onDelItem","extendsCol","pop","onAddItem","push","id","length","label","width","key","getFieldDecorator","rules","required","message","handleDataValue","type","handleSubmit","values","deviceType","store","success","strValue","params","maintainType","k","indexOf","error","join","parseFloat","maintainId","currentMain","saveMaintain","handleEdit","getServeInfo","then","extList","split","map","item","idx","initialValue","undefined","handleDelete","selectedRowKeys","warn","title","content","confirm","okText","cancelText","onOk","removeMaintain","ids","handleSelect","handleCheckTag","tag","typeName","getMaintain","pageIndex","pageSize","ZCloudDeviceStore","maintainList","maintainPage","deviceList","isLoading","rowSelection","onChange","modal","onCancel","isForm","formColumns","dataSource","PopoVisible","keyName","defaultActiveKey","onClick","rowKey","columns","pagination","loading","btns","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport './index.less';\nimport GlobalList from 'components/GlobalList';\nimport { Modal, Input, Button, message } from 'antd';\nimport { setServerColumns, setFormColumns } from './methods';\nimport ModalS from './cell/ModalS';\n\n@inject('ZCloudDeviceStore')\n@observer\nclass CheckServer extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.store = this.props.ZCloudDeviceStore;\n\t\tthis.state = {\n\t\t\tselectedRowKeys: [],\n\t\t\tvisible: false,\n\t\t\tcontentType: 1,\n\t\t\tmaxValue: '',\n\t\t\tminValue: '',\n\t\t\textendFormColumns: []\n\t\t};\n\t}\n\trender() {\n\t\tconst {\n\t\t\tmaintainList,\n\t\t\tmaintainPage,\n\t\t\tdeviceList,\n\t\t\tisLoading,\n\t\t\tstatus,\n\t\t\tcurrentMain\n\t\t} = this.store;\n\t\tconst { contentType, minValue, maxValue } = this.state;\n\t\tconst rowSelection = {\n\t\t\tselectedRowKeys: this.state.selectedRowKeys,\n\t\t\tonChange: this.handleSelect\n\t\t};\n\t\tconst modal = {\n\t\t\tvisible: this.state.visible,\n\t\t\ttitle: status === 'add' ? '新增' : '编辑',\n\t\t\tonCancel: this.handleVisible,\n\t\t\tonOk: this.handleSubmit,\n\t\t\tisForm: true,\n\t\t\tokText: '确定',\n\t\t\tcancelText: '取消',\n\t\t\tformColumns: setFormColumns({\n\t\t\t\tstatus, currentMain, type: this.props.type,\n\t\t\t\thandleRadio: this.handleRadio,\n\t\t\t\tcontentType, minValue, maxValue,\n\t\t\t\tonAddItem: this.onAddItem,\n\t\t\t\tonDelItem: this.onDelItem,\n\t\t\t\thandleDataValue: this.handleDataValue,\n\t\t\t}),\n\t\t\textendFormColumns: this.state.contentType === 2 && this.state.extendFormColumns\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<GlobalList\n\t\t\t\t\tcheckedTag={{\n\t\t\t\t\t\tdataSource: deviceList,\n\t\t\t\t\t\ttitle: '设备类型',\n\t\t\t\t\t\tPopoVisible: false,\n\t\t\t\t\t\tkeyName: 'typeName',\n\t\t\t\t\t\tdefaultActiveKey: deviceList[0],\n\t\t\t\t\t\tcontent: deviceList,\n\t\t\t\t\t\tonClick: this.handleCheckTag\n\t\t\t\t\t}}\n\t\t\t\t\ttable={{\n\t\t\t\t\t\trowKey: 'maintainId',\n\t\t\t\t\t\tcolumns: setServerColumns({\n\t\t\t\t\t\t\ttype: this.props.type, handleEdit: this.handleEdit, handleDelete: this.handleDelete\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tdataSource: maintainList,\n\t\t\t\t\t\tpagination: {\n\t\t\t\t\t\t\t...maintainPage,\n\t\t\t\t\t\t\tonChange: (pageIndex, pageSize) => {\n\t\t\t\t\t\t\t\tthis.store.getMaintain({\n\t\t\t\t\t\t\t\t\tpageIndex,\n\t\t\t\t\t\t\t\t\tpageSize\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tloading: isLoading,\n\t\t\t\t\t\trowSelection,\n\t\t\t\t\t\tbtns: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: '新增',\n\t\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\t\tif (this.store.deviceType) {\n\t\t\t\t\t\t\t\t\t\tthis.store.status = 'add';\n\t\t\t\t\t\t\t\t\t\tthis.handleVisible('add');\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tmessage.warn('请选择设备类型')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ttype: 'primary'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: '删除',\n\t\t\t\t\t\t\t\tonClick: () => this.handleDelete({ type: 'batch' })\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}}\n\n\t\t\t\t/>\n\t\t\t\t{\n\t\t\t\t\tthis.state.visible && <ModalS\n\t\t\t\t\t\tmodal={modal}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n\t/* modal - operate */\n\thandleVisible = (status) => {\n\t\tif (this.state.visible) {\n\t\t\tthis.state.extendFormColumns = []\n\t\t\tthis.state.minValue = ''\n\t\t\tthis.state.maxValue = ''\n\t\t}\n\t\tif (status === 'add') {\n\t\t\tthis.state.contentType = 1\n\t\t}\n\t\tthis.setState({\n\t\t\tvisible: !this.state.visible\n\t\t});\n\t};\n\thandleRadio = e => {\n\t\tthis.setState({\n\t\t\tcontentType: e.target.value\n\t\t});\n\t};\n\tonDelItem = () => {\n\t\tlet extendsCol = this.state.extendFormColumns;\n\t\textendsCol.pop();\n\t\tthis.setState({\n\t\t\textendFormColumns: extendsCol\n\t\t});\n\t};\n\tonAddItem = () => {\n\t\tlet extendsCol = this.state.extendFormColumns;\n\t\textendsCol.push({\n\t\t\tid: extendsCol.length + 1,\n\t\t\tlabel: '选项',\n\t\t\tvalue: <Input placeholder='请输入' style={{ width: '330px' }} />,\n\t\t\tkey: 'strValue',\n\t\t\tgetFieldDecorator: {\n\t\t\t\t// initialValue:item || undefined,\n\t\t\t\trules: [\n\t\t\t\t\t{\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmessage: '必填'\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t});\n\t\tthis.setState({\n\t\t\textendFormColumns: extendsCol\n\t\t});\n\t};\n\thandleDataValue = (type, e) => {\n\t\tthis.setState({\n\t\t\t[type]: e.target.value\n\t\t});\n\t};\n\thandleSubmit = values => {\n\t\tconst { deviceType } = this.store;\n\t\tlet success = true;\n\t\tlet strValue = [],\n\t\t\tparams = {\n\t\t\t\tdeviceType,\n\t\t\t\tmaintainType: this.store.maintainType\n\t\t\t};\n\t\tfor (let k in values) {\n\t\t\tif (k.indexOf('strValue') > -1) {\n\t\t\t\tstrValue.push(values[k]);\n\t\t\t} else {\n\t\t\t\tparams[k] = values[k];\n\t\t\t}\n\t\t}\n\t\tif (values.contentType === 2) {\n\t\t\tif (strValue.length < 1) {\n\t\t\t\tmessage.error('请输入至少一条选项值');\n\t\t\t\tsuccess = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tparams.strValue = strValue.join(';');\n\t\t}\n\t\tif (values.contentType === 3) {\n\t\t\tparams.minValue = parseFloat(this.state.minValue);\n\t\t\tparams.maxValue = parseFloat(this.state.maxValue);\n\t\t}\n\t\tif (this.store.status === 'edit') {\n\t\t\tparams.maintainId = this.store.currentMain.maintainId\n\t\t}\n\t\tthis.store.saveMaintain(params);\n\t\tif (success) {\n\t\t\tthis.handleVisible();\n\t\t}\n\t};\n\t/* table - operate */\n\thandleEdit = value => {\n\t\tthis.store.status = 'edit';\n\t\tthis.store.getServeInfo({ id: value }).then(() => {\n\t\t\tlet extList = [];\n\t\t\tif (this.store.currentMain.contentType === 2) {\n\t\t\t\tlet strValue = this.store.currentMain.strValue.split(';');\n\t\t\t\tstrValue.map((item, idx) => {\n\t\t\t\t\textList.push({\n\t\t\t\t\t\tid: idx + 1,\n\t\t\t\t\t\tlabel: '选项',\n\t\t\t\t\t\tvalue: <Input placeholder='请输入' style={{ width: '330px' }} />,\n\t\t\t\t\t\tkey: 'strValue',\n\t\t\t\t\t\tgetFieldDecorator: {\n\t\t\t\t\t\t\tinitialValue: item || undefined,\n\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tmessage: '必填'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else if (this.store.currentMain.contentType === 3) {\n\t\t\t\tthis.state.minValue = this.store.currentMain.minValue;\n\t\t\t\tthis.state.maxValue = this.store.currentMain.maxValue;\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tcontentType: this.store.currentMain.contentType,\n\t\t\t\textendFormColumns: extList\n\t\t\t})\n\t\t\tthis.handleVisible();\n\t\t});\n\t};\n\thandleDelete = ({ value, type }) => {\n\t\tif (type === 'batch') {\n\t\t\tif (this.state.selectedRowKeys.length < 1) {\n\t\t\t\tModal.warn({\n\t\t\t\t\ttitle: '提示',\n\t\t\t\t\tcontent: '请选择需要删除的内容'\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tModal.confirm({\n\t\t\t\t\ttitle: '提示',\n\t\t\t\t\tcontent:\n\t\t\t\t\t\t'确定删除选中的' +\n\t\t\t\t\t\tthis.state.selectedRowKeys.length +\n\t\t\t\t\t\t'条内容？',\n\t\t\t\t\tokText: '确定',\n\t\t\t\t\tcancelText: '取消',\n\t\t\t\t\tonOk: () => {\n\t\t\t\t\t\tthis.store.removeMaintain(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tids: this.state.selectedRowKeys\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'batch'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tModal.confirm({\n\t\t\t\ttitle: '提示',\n\t\t\t\tcontent: '确定删除当前内容？',\n\t\t\t\tokText: '确定',\n\t\t\t\tcancelText: '取消',\n\t\t\t\tonOk: () => {\n\t\t\t\t\tthis.store.removeMaintain(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: value\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'single'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\thandleSelect = selectedRowKeys => {\n\t\tthis.setState({ selectedRowKeys });\n\t};\n\t/* check - tag */\n\thandleCheckTag = tag => {\n\t\tthis.store.deviceType = tag.typeName;\n\t\tthis.store.getMaintain({\n\t\t\tpageIndex: 1,\n\t\t\tpageSize: 10,\n\t\t\tdeviceType: tag.typeName === '全部' ? '' : tag.typeName\n\t\t});\n\t};\n\tcomponentDidMount() {\n\t\tthis.store.deviceType = ''\n\t\tthis.store.getMaintain({\n\t\t\tpageIndex: 1,\n\t\t\tpageSize: 10,\n\t\t\tdeviceType: this.store.deviceType\n\t\t});\n\t}\n}\n\nexport default CheckServer;\n"]},"metadata":{},"sourceType":"module"}