{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport _classCallCheck from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nvar _dec,\n    _dec2,\n    _class,\n    _temp,\n    _jsxFileName = \"F:\\\\documents\\\\bl-device-manage-test\\\\src\\\\layouts\\\\BasicManage\\\\ComputerPage\\\\index.js\";\n\n/*\r\n * @Author: your name\r\n * @Date: 2022-04-02 11:12:08\r\n * @LastEditTime: 2022-04-10 14:08:37\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n * @FilePath: \\bl-device-manage-test\\src\\layouts\\BasicManage\\ComputerPage\\index.js\r\n */\nimport { inject, observer } from 'mobx-react';\nimport React, { Component } from 'react';\nimport GlobalForm from 'components/GlobalForm';\nimport { toJS } from 'mobx';\nimport GlobalTabel from 'components/GlobalTabel';\nvar ComputerPage = (_dec = inject('BasicStore'), _dec2 = inject('HomeStore'), _dec(_class = _dec2(_class = observer(_class = (_temp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ComputerPage, _React$Component);\n\n  function ComputerPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ComputerPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ComputerPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onChange = function (e) {\n      _this.props.HomeStore.PageInfo = e;\n      _this.props.HomeStore.PageInfo.pageIndex = e.current;\n      console.log(toJS(_this.props.HomeStore.PageInfo));\n\n      _this.getData();\n    };\n\n    _this.getColumns = function () {\n      var columns = _this.props.HomeStore.columns;\n      toJS(columns);\n      return columns;\n    };\n\n    _this.edit = function (txt) {\n      console.log(txt);\n    };\n\n    _this.getData = function (page) {\n      var _this$props$HomeStore = _this.props.HomeStore,\n          PageInfo = _this$props$HomeStore.PageInfo,\n          firstFormId = _this$props$HomeStore.firstFormId;\n      var params = {};\n      params.firstFormId = firstFormId;\n\n      if (page != undefined) {\n        params.pageIndex = page.pageIndex;\n        params.pageSize = page.pageSize;\n      } else {\n        params.pageIndex = PageInfo.pageIndex;\n        params.pageSize = PageInfo.pageSize;\n      }\n\n      console.log(params);\n\n      _this.props.HomeStore.queryAll(params);\n    };\n\n    _this.getField = function () {\n      var firstFormId = _this.props.HomeStore.firstFormId;\n      var params = {};\n      params.firstFormId = firstFormId;\n\n      _this.props.HomeStore.queryField(params);\n    };\n\n    return _this;\n  }\n\n  _createClass(ComputerPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$HomeStore2 = this.props.HomeStore,\n          dataSource = _this$props$HomeStore2.dataSource,\n          PageInfo = _this$props$HomeStore2.PageInfo,\n          firstFormId = _this$props$HomeStore2.firstFormId,\n          secondFormId = _this$props$HomeStore2.secondFormId,\n          isLoading = _this$props$HomeStore2.isLoading,\n          model = _this$props$HomeStore2.model;\n      var columns = toJS(this.props.HomeStore.columns);\n\n      if (model == 'look') {\n        return React.createElement(_Table, {\n          columns: columns,\n          dataSource: dataSource,\n          pagination: PageInfo,\n          onChange: this.onChange,\n          loading: isLoading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }); // return <Table columns={this.getColumns()} dataSource={dataSource} pagination={PageInfo}></Table>;\n      } else if (model == 'submit') {\n        return React.createElement(GlobalForm, {\n          loading: isLoading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(GlobalTabel, {\n          columns: columns,\n          dataSource: dataSource,\n          PageInfo: PageInfo,\n          firstFormId: firstFormId,\n          loading: isLoading,\n          secondFormId: secondFormId,\n          del: function del(params) {\n            return _this2.props.HomeStore.deleteObj(params);\n          },\n          getData: function getData(page) {\n            _this2.getData(page);\n          },\n          updataData: function updataData(params) {\n            _this2.props.HomeStore.updataObj(params);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var firstFormId = this.props.HomeStore.firstFormId;\n      var params = {};\n      params.firstFormId = firstFormId;\n      this.getField();\n      this.getData();\n      this.getColumns();\n      this.props.HomeStore.countObj(firstFormId);\n    }\n  }]);\n\n  return ComputerPage;\n}(React.Component), _temp)) || _class) || _class) || _class);\nexport default ComputerPage;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage-test\\src\\layouts\\BasicManage\\ComputerPage\\index.js"],"names":["inject","observer","React","Component","GlobalForm","toJS","GlobalTabel","ComputerPage","onChange","e","props","HomeStore","PageInfo","pageIndex","current","console","log","getData","getColumns","columns","edit","txt","page","firstFormId","params","undefined","pageSize","queryAll","getField","queryField","dataSource","secondFormId","isLoading","model","deleteObj","updataObj","countObj"],"mappings":"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","sourcesContent":["/*\r\n * @Author: your name\r\n * @Date: 2022-04-02 11:12:08\r\n * @LastEditTime: 2022-04-10 14:08:37\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n * @FilePath: \\bl-device-manage-test\\src\\layouts\\BasicManage\\ComputerPage\\index.js\r\n */\r\n\r\nimport { inject, observer } from 'mobx-react'\r\nimport React, { Component } from 'react'\r\nimport { Table, Modal, message, Divider } from 'antd'\r\nimport GlobalForm from 'components/GlobalForm';\r\nimport { toJS } from 'mobx';\r\nimport GlobalTabel from 'components/GlobalTabel';\r\n\r\n\r\n@inject('BasicStore')\r\n@inject('HomeStore')\r\n@observer\r\nclass ComputerPage extends React.Component {\r\n\r\n  render() {\r\n    const { dataSource,PageInfo,firstFormId ,secondFormId, isLoading, model} = this.props.HomeStore;\r\n    let columns = toJS(this.props.HomeStore.columns)\r\n    if (model == 'look') {\r\n      return <Table columns={columns} dataSource={dataSource} pagination={PageInfo} onChange={this.onChange} loading={isLoading}></Table>;\r\n      // return <Table columns={this.getColumns()} dataSource={dataSource} pagination={PageInfo}></Table>;\r\n    } else if(model == 'submit'){\r\n      return <GlobalForm loading={isLoading}/>\r\n    }else {\r\n      return <GlobalTabel columns={columns} dataSource={dataSource} PageInfo={PageInfo} firstFormId={firstFormId} loading={isLoading}\r\n      secondFormId={secondFormId} del={(params)=>this.props.HomeStore.deleteObj(params)} getData={(page)=>{this.getData(page)}} updataData={(params)=>{this.props.HomeStore.updataObj(params)}}/>\r\n    }\r\n  }\r\n  \r\n  onChange = (e) => {\r\n    this.props.HomeStore.PageInfo = e;\r\n    this.props.HomeStore.PageInfo.pageIndex = e.current\r\n    console.log(toJS(this.props.HomeStore.PageInfo));\r\n    this.getData()\r\n  }\r\n  getColumns = () => {\r\n    const {columns} = this.props.HomeStore\r\n    toJS(columns)\r\n    return columns\r\n  }\r\n  \r\n  edit = (txt) => {\r\n    console.log(txt);\r\n  }\r\n\r\n  getData = (page) => {\r\n    const { PageInfo, firstFormId } = this.props.HomeStore;\r\n    let params = {};\r\n    params.firstFormId = firstFormId\r\n    if (page != undefined) {\r\n      params.pageIndex = page.pageIndex\r\n      params.pageSize = page.pageSize\r\n    }else{\r\n      params.pageIndex = PageInfo.pageIndex\r\n      params.pageSize = PageInfo.pageSize\r\n    }\r\n    console.log(params);\r\n    this.props.HomeStore.queryAll(params);\r\n  }\r\n  getField = () => {\r\n    const {firstFormId} = this.props.HomeStore\r\n    let params = {};\r\n    params.firstFormId = firstFormId;\r\n    this.props.HomeStore.queryField(params)\r\n  }\r\n  componentWillMount() {\r\n    const {firstFormId} = this.props.HomeStore\r\n    let params = {};\r\n    params.firstFormId = firstFormId;\r\n    this.getField();\r\n    this.getData();\r\n    this.getColumns();\r\n    this.props.HomeStore.countObj(firstFormId)\r\n  }\r\n}\r\n\r\nexport default ComputerPage;\r\n"]},"metadata":{},"sourceType":"module"}