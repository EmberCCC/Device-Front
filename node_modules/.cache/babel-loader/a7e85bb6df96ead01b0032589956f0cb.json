{"ast":null,"code":"var _excluded = [\"id\", \"widgets\", \"mapping\", \"form\", \"className\", \"style\", \"beforeFinish\", \"onFinish\", \"displayType\", \"labelAlign\", \"colon\", \"schema\", \"debug\", \"debugCss\", \"locale\", \"debounceInput\", \"size\", \"configProvider\", \"theme\", \"validateMessages\", \"watch\", \"config\", \"onMount\", \"labelWidth\", \"readOnly\", \"disabled\", \"allCollapsed\", \"onValuesChange\", \"column\", \"removeHiddenData\", \"globalProps\", \"methods\", \"renderTitle\", \"requiredMark\"],\n    _excluded2 = [\"onItemChange\", \"setEditing\", \"touchKey\", \"setValueByPath\", \"getSchemaByPath\", \"setSchemaByPath\", \"setSchema\", \"setValues\", \"getValues\", \"resetFields\", \"submit\", \"endValidating\", \"endSubmitting\", \"setErrorFields\", \"removeErrorField\", \"removeTouched\", \"changeTouchedKeys\", \"syncStuff\", \"logOnMount\", \"logOnSubmit\", \"setFirstMount\", \"_setErrors\"],\n    _excluded3 = [\"isOldVersion\", \"schema\"];\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/* eslint-disable react-hooks/exhaustive-deps */\n\n\nimport React, { useEffect, useMemo, useRef } from 'react';\nimport \"./atom.css\";\nimport Core from './core';\nimport { Ctx, Store2Ctx, StoreCtx } from './hooks';\nimport \"./index.css\";\nimport { mapping as defaultMapping } from './mapping';\nimport { getParamByName, msToTime, updateSchemaToNewVersion, yymmdd } from './utils';\nimport Watcher from './Watcher';\n\nvar defaultFinish = function defaultFinish(data, errors) {\n  console.log('onFinish:', {\n    data: data,\n    errors: errors\n  });\n};\n\nexport { default as connectForm } from './connectForm';\nexport { createWidget } from './createWidget';\nexport { default as useForm } from './useForm';\nexport { defaultMapping as mapping };\n\nfunction App(_ref) {\n  var id = _ref.id,\n      widgets = _ref.widgets,\n      mapping = _ref.mapping,\n      form = _ref.form,\n      className = _ref.className,\n      style = _ref.style,\n      beforeFinish = _ref.beforeFinish,\n      _ref$onFinish = _ref.onFinish,\n      onFinish = _ref$onFinish === void 0 ? defaultFinish : _ref$onFinish,\n      _ref$displayType = _ref.displayType,\n      displayType = _ref$displayType === void 0 ? 'column' : _ref$displayType,\n      _ref$labelAlign = _ref.labelAlign,\n      labelAlign = _ref$labelAlign === void 0 ? 'right' : _ref$labelAlign,\n      _ref$colon = _ref.colon,\n      colon = _ref$colon === void 0 ? true : _ref$colon,\n      schema = _ref.schema,\n      debug = _ref.debug,\n      debugCss = _ref.debugCss,\n      _ref$locale = _ref.locale,\n      locale = _ref$locale === void 0 ? 'cn' : _ref$locale,\n      _ref$debounceInput = _ref.debounceInput,\n      debounceInput = _ref$debounceInput === void 0 ? false : _ref$debounceInput,\n      size = _ref.size,\n      configProvider = _ref.configProvider,\n      theme = _ref.theme,\n      validateMessages = _ref.validateMessages,\n      _ref$watch = _ref.watch,\n      watch = _ref$watch === void 0 ? {} : _ref$watch,\n      config = _ref.config,\n      onMount = _ref.onMount,\n      labelWidth = _ref.labelWidth,\n      readOnly = _ref.readOnly,\n      disabled = _ref.disabled,\n      _ref$allCollapsed = _ref.allCollapsed,\n      allCollapsed = _ref$allCollapsed === void 0 ? false : _ref$allCollapsed,\n      onValuesChange = _ref.onValuesChange,\n      column = _ref.column,\n      _ref$removeHiddenData = _ref.removeHiddenData,\n      removeHiddenData = _ref$removeHiddenData === void 0 ? false : _ref$removeHiddenData,\n      _ref$globalProps = _ref.globalProps,\n      globalProps = _ref$globalProps === void 0 ? {} : _ref$globalProps,\n      _ref$methods = _ref.methods,\n      methods = _ref$methods === void 0 ? {} : _ref$methods,\n      renderTitle = _ref.renderTitle,\n      requiredMark = _ref.requiredMark,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  try {\n    var _ = form.submit;\n  } catch (error) {\n    console.error('form 为必填 props，<FormRender /> 没有接收到 form 属性!');\n  }\n\n  var _column = schema && schema.column || column;\n\n  var onItemChange = form.onItemChange,\n      setEditing = form.setEditing,\n      touchKey = form.touchKey,\n      setValueByPath = form.setValueByPath,\n      getSchemaByPath = form.getSchemaByPath,\n      setSchemaByPath = form.setSchemaByPath,\n      setSchema = form.setSchema,\n      setValues = form.setValues,\n      getValues = form.getValues,\n      resetFields = form.resetFields,\n      submit = form.submit,\n      endValidating = form.endValidating,\n      endSubmitting = form.endSubmitting,\n      setErrorFields = form.setErrorFields,\n      removeErrorField = form.removeErrorField,\n      removeTouched = form.removeTouched,\n      changeTouchedKeys = form.changeTouchedKeys,\n      syncStuff = form.syncStuff,\n      logOnMount = form.logOnMount,\n      logOnSubmit = form.logOnSubmit,\n      setFirstMount = form.setFirstMount,\n      _setErrors = form._setErrors,\n      valuesThatWillChange = _objectWithoutProperties(form, _excluded2);\n\n  var submitData = valuesThatWillChange.submitData,\n      errorFields = valuesThatWillChange.errorFields,\n      isValidating = valuesThatWillChange.isValidating,\n      outsideValidating = valuesThatWillChange.outsideValidating,\n      isSubmitting = valuesThatWillChange.isSubmitting,\n      formData = valuesThatWillChange.formData,\n      flatten = valuesThatWillChange.flatten,\n      showValidate = valuesThatWillChange.showValidate,\n      firstMount = valuesThatWillChange.firstMount;\n  useEffect(function () {\n    // Schema最外层的type是object来判断，没有的话，认为schema没有传\n    if (schema && schema.type) {\n      setFirstMount(true);\n      syncStuff({\n        schema: schema,\n        locale: locale,\n        validateMessages: validateMessages,\n        beforeFinish: beforeFinish,\n        onMount: onMount,\n        removeHiddenData: removeHiddenData\n      });\n    } else {}\n  }, [JSON.stringify(schema)]);\n  useEffect(function () {\n    if (!firstMount && schema && schema.type) {\n      if (typeof onMount === 'function') {\n        // 等一下 useForm 里接到第一份schema时，计算第一份data的骨架\n        setTimeout(function () {\n          onMount();\n        }, 0);\n      }\n\n      setTimeout(onMountLogger, 0);\n    }\n  }, [JSON.stringify(schema), firstMount]);\n\n  var onMountLogger = function onMountLogger() {\n    var start = new Date().getTime();\n\n    if (typeof logOnMount === 'function' || typeof logOnSubmit === 'function') {\n      sessionStorage.setItem('FORM_MOUNT_TIME', start);\n      sessionStorage.setItem('FORM_START', start);\n    }\n\n    if (typeof logOnMount === 'function') {\n      var logParams = {\n        schema: schema,\n        url: location.href,\n        formData: JSON.stringify(form.getValues()),\n        formMount: yymmdd(start)\n      };\n\n      if (id) {\n        logParams.id = id;\n      }\n\n      logOnMount(logParams);\n    } // 如果是要计算时间，在 onMount 时存一个时间戳\n\n\n    if (typeof logOnSubmit === 'function') {\n      sessionStorage.setItem('NUMBER_OF_SUBMITS', 0);\n      sessionStorage.setItem('FAILED_ATTEMPTS', 0);\n    }\n  }; // 组件 destroy 的时候，destroy form，因为useForm可能在上层，所以不一定会跟着destroy\n\n\n  useEffect(function () {\n    return function () {\n      form.resetFields();\n    };\n  }, []);\n  var store = useMemo(function () {\n    return _objectSpread(_objectSpread({}, valuesThatWillChange), {}, {\n      globalProps: globalProps\n    }, rest);\n  }, [JSON.stringify(flatten), JSON.stringify(formData), JSON.stringify(errorFields), JSON.stringify(globalProps)]); // 不常用的context单独放一个地方\n\n  var store2 = useMemo(function () {\n    return {\n      displayType: displayType,\n      labelAlign: labelAlign,\n      colon: colon,\n      theme: theme,\n      column: _column,\n      debounceInput: debounceInput,\n      debug: debug,\n      labelWidth: labelWidth,\n      locale: locale,\n      validateMessages: validateMessages,\n      readOnly: readOnly,\n      disabled: disabled,\n      allCollapsed: allCollapsed,\n      showValidate: showValidate,\n      watch: watch\n    };\n  }, [displayType, labelAlign, colon, theme, _column, debounceInput, debug, labelWidth, locale, validateMessages, readOnly, disabled, allCollapsed, showValidate, watch]);\n  var tools = useMemo(function () {\n    return _objectSpread({\n      widgets: widgets,\n      mapping: _objectSpread(_objectSpread({}, defaultMapping), mapping),\n      onValuesChange: onValuesChange,\n      renderTitle: renderTitle,\n      requiredMark: requiredMark,\n      methods: methods\n    }, form);\n  }, [widgets]);\n  useEffect(function () {\n    // 需要外部校验的情况，此时 submitting 还是 false\n    if (outsideValidating === true) {\n      Promise.resolve(beforeFinish(_objectSpread({\n        data: submitData,\n        schema: schema,\n        errors: errorFields\n      }, config))).then(function (error) {\n        if (error) {\n          setErrorFields(error);\n        }\n\n        endValidating();\n      });\n      return;\n    } // 如果validation结束，submitting开始\n\n\n    if (isValidating === false && isSubmitting === true) {\n      endSubmitting();\n      onFinish(submitData, errorFields);\n\n      if (typeof logOnSubmit === 'function') {\n        var start = sessionStorage.getItem('FORM_START');\n        var mount = sessionStorage.getItem('FORM_MOUNT_TIME');\n        var numberOfSubmits = Number(sessionStorage.getItem('NUMBER_OF_SUBMITS')) + 1;\n        var end = new Date().getTime();\n        var failedAttempts = Number(sessionStorage.getItem('FAILED_ATTEMPTS'));\n\n        if (errorFields.length > 0) {\n          failedAttempts = failedAttempts + 1;\n        }\n\n        var logParams = {\n          formMount: yymmdd(mount),\n          ms: end - start,\n          duration: msToTime(end - start),\n          numberOfSubmits: numberOfSubmits,\n          failedAttempts: failedAttempts,\n          url: location.href,\n          formData: JSON.stringify(submitData),\n          errors: JSON.stringify(errorFields),\n          schema: JSON.stringify(schema)\n        };\n\n        if (id) {\n          logParams.id = id;\n        }\n\n        logOnSubmit(logParams);\n        sessionStorage.setItem('FORM_START', end);\n        sessionStorage.setItem('NUMBER_OF_SUBMITS', numberOfSubmits);\n        sessionStorage.setItem('FAILED_ATTEMPTS', failedAttempts);\n      }\n    }\n  }, [isValidating, isSubmitting, outsideValidating]); // TODO: fk doesn't work\n\n  var sizeCls = '';\n\n  if (size === 'small') {\n    sizeCls = 'fr-form-small';\n  } else if (size === 'large') {\n    sizeCls = 'fr-form-large';\n  }\n\n  var rootProps = {\n    className: \"fr-container \".concat(sizeCls, \" \").concat(className || '')\n  };\n\n  if (style && _typeof(style) === 'object') {\n    rootProps.style = style;\n  }\n\n  if (id && ['number', 'string'].indexOf(_typeof(id)) > -1) {\n    rootProps.id = id;\n  }\n\n  var debugForm = getParamByName('_debug_form');\n  var debugFormCss = getParamByName('_debug_form_css');\n  var isPre = location.href.indexOf('pre') > -1;\n  var watchList = Object.keys(watch);\n  return /*#__PURE__*/React.createElement(StoreCtx.Provider, {\n    value: store\n  }, /*#__PURE__*/React.createElement(Store2Ctx.Provider, {\n    value: store2\n  }, /*#__PURE__*/React.createElement(Ctx.Provider, {\n    value: tools\n  }, /*#__PURE__*/React.createElement(\"div\", rootProps, isPre && debugForm || debug ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mv2 bg-black-05 pa2 br2\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", null, \"formData:\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'inline-block',\n      wordBreak: 'break-all',\n      whiteSpace: 'pre-wrap',\n      maxWidth: 600\n    }\n  }, JSON.stringify(form.formData, null, 4))), /*#__PURE__*/React.createElement(\"div\", null, 'errorFields:' + JSON.stringify(form.errorFields)), /*#__PURE__*/React.createElement(\"div\", null, 'touchedKeys:' + JSON.stringify(form.touchedKeys)), /*#__PURE__*/React.createElement(\"div\", null, 'allTouched:' + JSON.stringify(form.allTouched)), /*#__PURE__*/React.createElement(\"div\", null, 'descriptor:' + JSON.stringify(window.descriptor))) : null, watchList.length > 0 ? watchList.map(function (item, idx) {\n    return /*#__PURE__*/React.createElement(Watcher, {\n      key: idx.toString(),\n      watchKey: item,\n      watch: watch,\n      formData: formData,\n      firstMount: firstMount\n    });\n  }) : null, /*#__PURE__*/React.createElement(Core, {\n    debugCss: isPre && debugFormCss || debugCss\n  })))));\n}\n\nvar Wrapper = function Wrapper(props) {\n  var _ref2 = props || {},\n      _ref2$isOldVersion = _ref2.isOldVersion,\n      isOldVersion = _ref2$isOldVersion === void 0 ? true : _ref2$isOldVersion,\n      schema = _ref2.schema,\n      rest = _objectWithoutProperties(_ref2, _excluded3);\n\n  var _schema = useRef(schema);\n\n  if (isOldVersion) {\n    _schema.current = updateSchemaToNewVersion(schema);\n  }\n\n  return /*#__PURE__*/React.createElement(App, _extends({\n    schema: _schema.current\n  }, rest));\n};\n\nexport default Wrapper;","map":null,"metadata":{},"sourceType":"module"}