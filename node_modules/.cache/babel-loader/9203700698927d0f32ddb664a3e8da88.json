{"ast":null,"code":"var _jsxFileName = \"F:\\\\documents\\\\bl-device-manage-test\\\\src\\\\layouts\\\\XTableLayout\\\\index.js\";\n// /*\n//  * @Author: EmberCCC 1810888456@qq.com\n//  * @Date: 2022-07-06 22:04:09\n//  * @LastEditors: EmberCCC 1810888456@qq.com\n//  * @LastEditTime: 2022-07-06 22:30:59\n//  * @FilePath: \\bl-device-manage-test\\src\\layouts\\XTableLayout\\index.js\n//  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\n//  */\n// import { toJS } from 'mobx'\n// import { inject, observer } from 'mobx-react'\n// import React, { useEffect } from 'react'\n// import { Search, Table, useTable, withTable } from 'table-render';\n// import stores from 'stores'\n// const XTableLayout = observer(({ TableStore, HomeStore }) => {\n//     const { columns, dataSource } = TableStore\n//     useEffect(() => {\n//         console.log(toJS(columns));\n//         console.log(toJS(dataSource));\n//     }, [])\n//     const searchApi = () => {\n//         return {\n//             rows:dataSource,\n//             total:dataSource.length\n//         }\n//     }\n//     const schema = {\n//         \"type\": \"object\",\n//         \"labelWidth\": 30,\n//         \"properties\": {\n//             \"1\": {\n//                 \"check\": {},\n//                 \"title\": \"车间\",\n//                 \"type\": \"string\",\n//                 \"fieldId\": 1\n//             },\n//             \"45\": {\n//                 \"check\": {},\n//                 \"title\": \"人员\",\n//                 \"type\": \"string\",\n//                 \"fieldId\": 45\n//             },\n//             \"46\": {\n//                 \"check\": {},\n//                 \"title\": \"测试多条字段\",\n//                 \"type\": \"string\"\n//             },\n//             \"47\": {\n//                 \"check\": {},\n//                 \"title\": \"测试多条字段\",\n//                 \"type\": \"string\"\n//             },\n//             \"48\": {\n//                 \"check\": {},\n//                 \"title\": \"测试多条字段\",\n//                 \"type\": \"string\"\n//             },\n//             \"49\": {\n//                 \"check\": {},\n//                 \"title\": \"测试多条字段\",\n//                 \"type\": \"string\"\n//             }\n//         }\n//     }\n//     return (\n//         <>\n//             <Search api={searchApi} schema={schema}/>\n//             <Table\n//                 pagination={{ pageSize: 3 }}\n//                 columns={columns}\n//             />\n//         </>\n//     )\n// })\n// export default inject((stores) => ({ TableStore: stores.TableStore, HomeStore: stores.HomeStore }))(XTableLayout);\nimport React from 'react';\nimport { Table, Search, withTable } from 'table-render';\nvar dataSource = [];\n\nfor (var i = 0; i < 6; i++) {\n  dataSource.push({\n    id: i.toString(),\n    title: \"\\u6807\\u9898\".concat(i + 1),\n    created_at: new Date().getTime()\n  });\n} // 详细可见 form-render 的使用\n\n\nvar schema = {\n  type: 'object',\n  properties: {\n    title: {\n      title: '标题',\n      type: 'string',\n      'ui:width': '30%'\n    },\n    created_at: {\n      title: '创建时间',\n      type: 'string',\n      format: 'date',\n      'ui:width': '30%'\n    }\n  }\n}; // 配置完全透传 antd table\n\nvar columns = [{\n  title: '标题',\n  dataIndex: 'title'\n}, {\n  title: '创建时间',\n  key: 'since',\n  dataIndex: 'created_at',\n  valueType: 'date'\n}, {\n  title: '操作',\n  render: function render(row, record) {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      onClick: function onClick() {\n        return alert(row.title);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"\\u7F16\\u8F91\");\n  }\n}];\n\nvar Wrapper = function Wrapper() {\n  var searchApi = function searchApi() {\n    return {\n      rows: dataSource,\n      total: dataSource.length\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Search, {\n    schema: schema,\n    api: searchApi,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), /*#__PURE__*/React.createElement(Table, {\n    headerTitle: \"\\u6700\\u7B80\\u8868\\u683C\",\n    columns: columns,\n    rowKey: \"id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }));\n};\n\nexport default withTable(Wrapper);","map":{"version":3,"names":["React","Table","Search","withTable","dataSource","i","push","id","toString","title","created_at","Date","getTime","schema","type","properties","format","columns","dataIndex","key","valueType","render","row","record","alert","Wrapper","searchApi","rows","total","length"],"sources":["F:/documents/bl-device-manage-test/src/layouts/XTableLayout/index.js"],"sourcesContent":["// /*\r\n//  * @Author: EmberCCC 1810888456@qq.com\r\n//  * @Date: 2022-07-06 22:04:09\r\n//  * @LastEditors: EmberCCC 1810888456@qq.com\r\n//  * @LastEditTime: 2022-07-06 22:30:59\r\n//  * @FilePath: \\bl-device-manage-test\\src\\layouts\\XTableLayout\\index.js\r\n//  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n//  */\r\n// import { toJS } from 'mobx'\r\n// import { inject, observer } from 'mobx-react'\r\n// import React, { useEffect } from 'react'\r\n// import { Search, Table, useTable, withTable } from 'table-render';\r\n// import stores from 'stores'\r\n\r\n\r\n\r\n// const XTableLayout = observer(({ TableStore, HomeStore }) => {\r\n//     const { columns, dataSource } = TableStore\r\n//     useEffect(() => {\r\n//         console.log(toJS(columns));\r\n//         console.log(toJS(dataSource));\r\n//     }, [])\r\n//     const searchApi = () => {\r\n//         return {\r\n//             rows:dataSource,\r\n//             total:dataSource.length\r\n//         }\r\n//     }\r\n//     const schema = {\r\n//         \"type\": \"object\",\r\n//         \"labelWidth\": 30,\r\n//         \"properties\": {\r\n//             \"1\": {\r\n//                 \"check\": {},\r\n//                 \"title\": \"车间\",\r\n//                 \"type\": \"string\",\r\n//                 \"fieldId\": 1\r\n//             },\r\n//             \"45\": {\r\n//                 \"check\": {},\r\n//                 \"title\": \"人员\",\r\n//                 \"type\": \"string\",\r\n//                 \"fieldId\": 45\r\n//             },\r\n//             \"46\": {\r\n//                 \"check\": {},\r\n//                 \"title\": \"测试多条字段\",\r\n//                 \"type\": \"string\"\r\n//             },\r\n//             \"47\": {\r\n//                 \"check\": {},\r\n//                 \"title\": \"测试多条字段\",\r\n//                 \"type\": \"string\"\r\n//             },\r\n//             \"48\": {\r\n//                 \"check\": {},\r\n//                 \"title\": \"测试多条字段\",\r\n//                 \"type\": \"string\"\r\n//             },\r\n//             \"49\": {\r\n//                 \"check\": {},\r\n//                 \"title\": \"测试多条字段\",\r\n//                 \"type\": \"string\"\r\n//             }\r\n//         }\r\n//     }\r\n//     return (\r\n//         <>\r\n//             <Search api={searchApi} schema={schema}/>\r\n//             <Table\r\n//                 pagination={{ pageSize: 3 }}\r\n//                 columns={columns}\r\n//             />\r\n//         </>\r\n//     )\r\n// })\r\n\r\n// export default inject((stores) => ({ TableStore: stores.TableStore, HomeStore: stores.HomeStore }))(XTableLayout);\r\nimport React from 'react';\r\nimport { Table, Search, withTable } from 'table-render';\r\n\r\nconst dataSource = [];\r\nfor (let i = 0; i < 6; i++) {\r\n  dataSource.push({\r\n    id: i.toString(),\r\n    title: `标题${i + 1}`,\r\n    created_at: new Date().getTime(),\r\n  });\r\n}\r\n\r\n// 详细可见 form-render 的使用\r\nconst schema = {\r\n  type: 'object',\r\n  properties: {\r\n    title: {\r\n      title: '标题',\r\n      type: 'string',\r\n      'ui:width': '30%',\r\n    },\r\n    created_at: {\r\n      title: '创建时间',\r\n      type: 'string',\r\n      format: 'date',\r\n      'ui:width': '30%',\r\n    },\r\n  },\r\n};\r\n\r\n// 配置完全透传 antd table\r\nconst columns = [\r\n  {\r\n    title: '标题',\r\n    dataIndex: 'title',\r\n  },\r\n  {\r\n    title: '创建时间',\r\n    key: 'since',\r\n    dataIndex: 'created_at',\r\n    valueType: 'date',\r\n  },\r\n  {\r\n    title: '操作',\r\n    render: (row, record) => <a onClick={() => alert(row.title)}>编辑</a>,\r\n  },\r\n];\r\n\r\nconst Wrapper = () => {\r\n  const searchApi = () => {\r\n    return {\r\n      rows: dataSource,\r\n      total: dataSource.length,\r\n    };\r\n  };\r\n  return (\r\n    <>\r\n      <Search schema={schema} api={searchApi} />\r\n      <Table headerTitle=\"最简表格\" columns={columns} rowKey=\"id\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withTable(Wrapper);"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,cAAzC;AAEA,IAAMC,UAAU,GAAG,EAAnB;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;EAC1BD,UAAU,CAACE,IAAX,CAAgB;IACdC,EAAE,EAAEF,CAAC,CAACG,QAAF,EADU;IAEdC,KAAK,wBAAOJ,CAAC,GAAG,CAAX,CAFS;IAGdK,UAAU,EAAE,IAAIC,IAAJ,GAAWC,OAAX;EAHE,CAAhB;AAKD,C,CAED;;;AACA,IAAMC,MAAM,GAAG;EACbC,IAAI,EAAE,QADO;EAEbC,UAAU,EAAE;IACVN,KAAK,EAAE;MACLA,KAAK,EAAE,IADF;MAELK,IAAI,EAAE,QAFD;MAGL,YAAY;IAHP,CADG;IAMVJ,UAAU,EAAE;MACVD,KAAK,EAAE,MADG;MAEVK,IAAI,EAAE,QAFI;MAGVE,MAAM,EAAE,MAHE;MAIV,YAAY;IAJF;EANF;AAFC,CAAf,C,CAiBA;;AACA,IAAMC,OAAO,GAAG,CACd;EACER,KAAK,EAAE,IADT;EAEES,SAAS,EAAE;AAFb,CADc,EAKd;EACET,KAAK,EAAE,MADT;EAEEU,GAAG,EAAE,OAFP;EAGED,SAAS,EAAE,YAHb;EAIEE,SAAS,EAAE;AAJb,CALc,EAWd;EACEX,KAAK,EAAE,IADT;EAEEY,MAAM,EAAE,gBAACC,GAAD,EAAMC,MAAN;IAAA,oBAAiB;MAAG,OAAO,EAAE;QAAA,OAAMC,KAAK,CAACF,GAAG,CAACb,KAAL,CAAX;MAAA,CAAZ;MAAA;QAAA;QAAA;MAAA;MAAA;IAAA,kBAAjB;EAAA;AAFV,CAXc,CAAhB;;AAiBA,IAAMgB,OAAO,GAAG,SAAVA,OAAU,GAAM;EACpB,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;IACtB,OAAO;MACLC,IAAI,EAAEvB,UADD;MAELwB,KAAK,EAAExB,UAAU,CAACyB;IAFb,CAAP;EAID,CALD;;EAMA,oBACE,uDACE,oBAAC,MAAD;IAAQ,MAAM,EAAEhB,MAAhB;IAAwB,GAAG,EAAEa,SAA7B;IAAA;MAAA;MAAA;IAAA;IAAA;EAAA,EADF,eAEE,oBAAC,KAAD;IAAO,WAAW,EAAC,0BAAnB;IAA0B,OAAO,EAAET,OAAnC;IAA4C,MAAM,EAAC,IAAnD;IAAA;MAAA;MAAA;IAAA;IAAA;EAAA,EAFF,CADF;AAMD,CAbD;;AAeA,eAAed,SAAS,CAACsB,OAAD,CAAxB"},"metadata":{},"sourceType":"module"}