{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _dec19, _dec20, _dec21, _dec22, _dec23, _dec24, _dec25, _dec26, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _descriptor23, _descriptor24, _descriptor25, _descriptor26, _temp;\n\nimport { observable, action } from 'mobx';\nimport { isDataExist } from 'Utils/dataTools';\nimport * as services from '../services/system';\nvar Order = (_dec = action.bound, _dec2 = action.bound, _dec3 = action.bound, _dec4 = action.bound, _dec5 = action.bound, _dec6 = action.bound, _dec7 = action.bound, _dec8 = action.bound, _dec9 = action.bound, _dec10 = action.bound, _dec11 = action.bound, _dec12 = action.bound, _dec13 = action.bound, _dec14 = action.bound, _dec15 = action.bound, _dec16 = action.bound, _dec17 = action.bound, _dec18 = action.bound, _dec19 = action.bound, _dec20 = action.bound, _dec21 = action.bound, _dec22 = action.bound, _dec23 = action.bound, _dec24 = action.bound, _dec25 = action.bound, _dec26 = action.bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function Order() {\n    _classCallCheck(this, Order);\n\n    _initializerDefineProperty(this, \"isLoading\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"tableData\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"roleList\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"menuData\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"arr\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"DepList\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"allDept\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"CumList\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"SupList\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"tagList\", _descriptor10, this);\n\n    _initializerDefineProperty(this, \"selectedRows\", _descriptor11, this);\n\n    _initializerDefineProperty(this, \"PageInfo\", _descriptor12, this);\n\n    _initializerDefineProperty(this, \"formData\", _descriptor13, this);\n\n    _initializerDefineProperty(this, \"treeData\", _descriptor14, this);\n\n    _initializerDefineProperty(this, \"modalVisible\", _descriptor15, this);\n\n    _initializerDefineProperty(this, \"roleName\", _descriptor16, this);\n\n    _initializerDefineProperty(this, \"name\", _descriptor17, this);\n\n    _initializerDefineProperty(this, \"customerName\", _descriptor18, this);\n\n    _initializerDefineProperty(this, \"roleIds\", _descriptor19, this);\n\n    _initializerDefineProperty(this, \"deptId\", _descriptor20, this);\n\n    _initializerDefineProperty(this, \"columnsType\", _descriptor21, this);\n\n    _initializerDefineProperty(this, \"innerModalVisible\", _descriptor22, this);\n\n    _initializerDefineProperty(this, \"isReview\", _descriptor23, this);\n\n    _initializerDefineProperty(this, \"modalChange\", _descriptor24, this);\n\n    _initializerDefineProperty(this, \"transTreeData\", _descriptor25, this);\n\n    _initializerDefineProperty(this, \"findChild\", _descriptor26, this);\n  }\n\n  _createClass(Order, [{\n    key: \"getData\",\n    //获取表格数据\n    value: function () {\n      var _getData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(type, params) {\n        var url, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.isLoading = true; //1部门管理，2角色管理，3用户管理\n\n                url = type === 1 ? services.requestUrl.departmentList : type === 2 ? services.requestUrl.roleList : services.requestUrl.userList;\n                _context.prev = 2;\n                _context.next = 5;\n                return services.getRequest(url, params);\n\n              case 5:\n                res = _context.sent;\n                this.isLoading = false;\n\n                if (isDataExist(res)) {\n                  if (type === 1) {\n                    this.tableData = res.data.data;\n                  } else {\n                    this.tableData = res.data.data.items;\n                    this.PageInfo = res.data.data.page;\n                  }\n                }\n\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 10]]);\n      }));\n\n      function getData(_x, _x2) {\n        return _getData.apply(this, arguments);\n      }\n\n      return getData;\n    }() //获取组织架构列表\n\n  }, {\n    key: \"getDeptData\",\n    value: function () {\n      var _getDeptData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(type, params) {\n        var url, res, data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.isLoading = true; //1制造商，2客户\n\n                url = type === '1' ? services.requestUrl.departmentList : services.requestUrl.getCustomer;\n                _context2.prev = 2;\n                _context2.next = 5;\n                return services.getRequest(url, params);\n\n              case 5:\n                res = _context2.sent;\n                this.isLoading = false;\n\n                if (isDataExist(res)) {\n                  if (type === '1') {\n                    this.arr = res.data.data; // console.log(this.arr)\n\n                    data = this.transTreeData(this.arr);\n                    this.tableData = data; // this.tableData = res.data.data.children\n                  } else {\n                    this.tableData = res.data.data;\n                  }\n                }\n\n                _context2.next = 13;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](2);\n                console.log(_context2.t0);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 10]]);\n      }));\n\n      function getDeptData(_x3, _x4) {\n        return _getDeptData.apply(this, arguments);\n      }\n\n      return getDeptData;\n    }() //获取制造商部门列表\n\n  }, {\n    key: \"getDept\",\n    value: function () {\n      var _getDept = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.isLoading = true;\n                _context3.prev = 1;\n                _context3.next = 4;\n                return services.getRequest(services.requestUrl.departmentList, params);\n\n              case 4:\n                res = _context3.sent;\n                this.isLoading = false;\n\n                if (isDataExist(res)) {\n                  this.allDept = res.data.data;\n                }\n\n                _context3.next = 12;\n                break;\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](1);\n                console.log(_context3.t0);\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[1, 9]]);\n      }));\n\n      function getDept(_x5) {\n        return _getDept.apply(this, arguments);\n      }\n\n      return getDept;\n    }() //获取菜单树数据\n\n  }, {\n    key: \"getTreeData\",\n    value: function () {\n      var _getTreeData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.isLoading = true;\n                _context4.prev = 1;\n                _context4.next = 4;\n                return services.getRequest(services.requestUrl.treeMenu, params);\n\n              case 4:\n                res = _context4.sent;\n                this.isLoading = false;\n\n                if (isDataExist(res)) {\n                  this.treeData = [];\n                  this.treeData.push(res.data.data);\n                }\n\n                _context4.next = 12;\n                break;\n\n              case 9:\n                _context4.prev = 9;\n                _context4.t0 = _context4[\"catch\"](1);\n                console.log(_context4.t0);\n\n              case 12:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[1, 9]]);\n      }));\n\n      function getTreeData(_x6) {\n        return _getTreeData.apply(this, arguments);\n      }\n\n      return getTreeData;\n    }() //保存更新部门信息\n\n  }, {\n    key: \"addNew\",\n    value: function () {\n      var _addNew = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(type, params) {\n        var url, res;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.isLoading = true;\n                url = type ? services.requestUrl.saveDepartment : services.requestUrl.updataDepartment;\n                _context5.prev = 2;\n                _context5.next = 5;\n                return services.putRequest(url, params);\n\n              case 5:\n                res = _context5.sent;\n                this.isLoading = false;\n\n                if (!isDataExist(res)) {\n                  _context5.next = 9;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", res);\n\n              case 9:\n                _context5.next = 14;\n                break;\n\n              case 11:\n                _context5.prev = 11;\n                _context5.t0 = _context5[\"catch\"](2);\n                console.log(_context5.t0);\n\n              case 14:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[2, 11]]);\n      }));\n\n      function addNew(_x7, _x8) {\n        return _addNew.apply(this, arguments);\n      }\n\n      return addNew;\n    }() //保存更新角色信息\n\n  }, {\n    key: \"addNewRole\",\n    value: function () {\n      var _addNewRole = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(type, params) {\n        var url, res;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                this.isLoading = true;\n                url = type ? services.requestUrl.saveRole : services.requestUrl.updataRole;\n                _context6.prev = 2;\n                _context6.next = 5;\n                return services.putRequest(url, params);\n\n              case 5:\n                res = _context6.sent;\n                this.isLoading = false;\n\n                if (!isDataExist(res)) {\n                  _context6.next = 9;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", res);\n\n              case 9:\n                _context6.next = 14;\n                break;\n\n              case 11:\n                _context6.prev = 11;\n                _context6.t0 = _context6[\"catch\"](2);\n                console.log(_context6.t0);\n\n              case 14:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[2, 11]]);\n      }));\n\n      function addNewRole(_x9, _x10) {\n        return _addNewRole.apply(this, arguments);\n      }\n\n      return addNewRole;\n    }() //保存系统菜单\n\n  }, {\n    key: \"addNewMenu\",\n    value: function () {\n      var _addNewMenu = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(type, params) {\n        var url, res;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                this.isLoading = true;\n                url = type ? services.requestUrl.saveMenu : services.requestUrl.updateMenu;\n                _context7.prev = 2;\n                _context7.next = 5;\n                return services.putRequest(url, params);\n\n              case 5:\n                res = _context7.sent;\n                this.isLoading = false;\n\n                if (!isDataExist(res)) {\n                  _context7.next = 9;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", res);\n\n              case 9:\n                _context7.next = 14;\n                break;\n\n              case 11:\n                _context7.prev = 11;\n                _context7.t0 = _context7[\"catch\"](2);\n                console.log(_context7.t0);\n\n              case 14:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[2, 11]]);\n      }));\n\n      function addNewMenu(_x11, _x12) {\n        return _addNewMenu.apply(this, arguments);\n      }\n\n      return addNewMenu;\n    }() //保存系统菜单\n\n  }, {\n    key: \"addNewUser\",\n    value: function () {\n      var _addNewUser = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8(type, params) {\n        var url, res;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                this.isLoading = true;\n                url = type ? services.requestUrl.saveUser : services.requestUrl.updataUser;\n                _context8.prev = 2;\n                _context8.next = 5;\n                return services.putRequest(url, params);\n\n              case 5:\n                res = _context8.sent;\n                this.isLoading = false;\n\n                if (!isDataExist(res)) {\n                  _context8.next = 9;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", res);\n\n              case 9:\n                _context8.next = 14;\n                break;\n\n              case 11:\n                _context8.prev = 11;\n                _context8.t0 = _context8[\"catch\"](2);\n                console.log(_context8.t0);\n\n              case 14:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[2, 11]]);\n      }));\n\n      function addNewUser(_x13, _x14) {\n        return _addNewUser.apply(this, arguments);\n      }\n\n      return addNewUser;\n    }() //保存系统菜单\n\n  }, {\n    key: \"addNewCustomer\",\n    value: function () {\n      var _addNewCustomer = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9(type, params) {\n        var url, res;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                this.isLoading = true;\n                url = type ? services.requestUrl.addCustomer : services.requestUrl.updateCustomer;\n                _context9.prev = 2;\n                _context9.next = 5;\n                return services.putRequest(url, params);\n\n              case 5:\n                res = _context9.sent;\n                this.isLoading = false;\n\n                if (!isDataExist(res)) {\n                  _context9.next = 9;\n                  break;\n                }\n\n                return _context9.abrupt(\"return\", res);\n\n              case 9:\n                _context9.next = 14;\n                break;\n\n              case 11:\n                _context9.prev = 11;\n                _context9.t0 = _context9[\"catch\"](2);\n                console.log(_context9.t0);\n\n              case 14:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this, [[2, 11]]);\n      }));\n\n      function addNewCustomer(_x15, _x16) {\n        return _addNewCustomer.apply(this, arguments);\n      }\n\n      return addNewCustomer;\n    }() //保存系统菜单\n\n  }, {\n    key: \"resetPassword\",\n    value: function () {\n      var _resetPassword = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee10(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                this.isLoading = true;\n                _context10.prev = 1;\n                _context10.next = 4;\n                return services.putRequest(services.requestUrl.adminResetPwd, params);\n\n              case 4:\n                res = _context10.sent;\n                this.isLoading = false;\n\n                if (!isDataExist(res)) {\n                  _context10.next = 8;\n                  break;\n                }\n\n                return _context10.abrupt(\"return\", res);\n\n              case 8:\n                _context10.next = 13;\n                break;\n\n              case 10:\n                _context10.prev = 10;\n                _context10.t0 = _context10[\"catch\"](1);\n                console.log(_context10.t0);\n\n              case 13:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this, [[1, 10]]);\n      }));\n\n      function resetPassword(_x17) {\n        return _resetPassword.apply(this, arguments);\n      }\n\n      return resetPassword;\n    }() //部门删除\n\n  }, {\n    key: \"deleteCol\",\n    value: function () {\n      var _deleteCol = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee11(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                this.isLoading = true;\n                _context11.prev = 1;\n                _context11.next = 4;\n                return services.putRequest(services.requestUrl.removeDepartment, params);\n\n              case 4:\n                res = _context11.sent;\n                this.isLoading = false;\n\n                if (!isDataExist(res)) {\n                  _context11.next = 8;\n                  break;\n                }\n\n                return _context11.abrupt(\"return\", res);\n\n              case 8:\n                _context11.next = 13;\n                break;\n\n              case 10:\n                _context11.prev = 10;\n                _context11.t0 = _context11[\"catch\"](1);\n                console.log(_context11.t0);\n\n              case 13:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this, [[1, 10]]);\n      }));\n\n      function deleteCol(_x18) {\n        return _deleteCol.apply(this, arguments);\n      }\n\n      return deleteCol;\n    }() //客户删除\n\n  }, {\n    key: \"deleteCus\",\n    value: function () {\n      var _deleteCus = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee12(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                this.isLoading = true;\n                _context12.prev = 1;\n                _context12.next = 4;\n                return services.putRequest(services.requestUrl.deleteCus, params);\n\n              case 4:\n                res = _context12.sent;\n                this.isLoading = false;\n\n                if (!isDataExist(res)) {\n                  _context12.next = 8;\n                  break;\n                }\n\n                return _context12.abrupt(\"return\", res);\n\n              case 8:\n                _context12.next = 13;\n                break;\n\n              case 10:\n                _context12.prev = 10;\n                _context12.t0 = _context12[\"catch\"](1);\n                console.log(_context12.t0);\n\n              case 13:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this, [[1, 10]]);\n      }));\n\n      function deleteCus(_x19) {\n        return _deleteCus.apply(this, arguments);\n      }\n\n      return deleteCus;\n    }() //角色删除\n\n  }, {\n    key: \"deleteRole\",\n    value: function () {\n      var _deleteRole = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee13(type, params) {\n        var url, res;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                this.isLoading = true;\n                url = type ? services.requestUrl.removeRole : services.requestUrl.batchRemoveRole;\n                _context13.prev = 2;\n                _context13.next = 5;\n                return services.putRequest(url, params);\n\n              case 5:\n                res = _context13.sent;\n                this.isLoading = false;\n\n                if (!isDataExist(res)) {\n                  _context13.next = 9;\n                  break;\n                }\n\n                return _context13.abrupt(\"return\", res);\n\n              case 9:\n                _context13.next = 14;\n                break;\n\n              case 11:\n                _context13.prev = 11;\n                _context13.t0 = _context13[\"catch\"](2);\n                console.log(_context13.t0);\n\n              case 14:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this, [[2, 11]]);\n      }));\n\n      function deleteRole(_x20, _x21) {\n        return _deleteRole.apply(this, arguments);\n      }\n\n      return deleteRole;\n    }() //菜单删除\n\n  }, {\n    key: \"deleteMenu\",\n    value: function () {\n      var _deleteMenu = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee14(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                this.isLoading = true;\n                _context14.prev = 1;\n                _context14.next = 4;\n                return services.putRequest(services.requestUrl.removeMenu, params);\n\n              case 4:\n                res = _context14.sent;\n                this.isLoading = false;\n\n                if (!isDataExist(res)) {\n                  _context14.next = 8;\n                  break;\n                }\n\n                return _context14.abrupt(\"return\", res);\n\n              case 8:\n                _context14.next = 13;\n                break;\n\n              case 10:\n                _context14.prev = 10;\n                _context14.t0 = _context14[\"catch\"](1);\n                console.log(_context14.t0);\n\n              case 13:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this, [[1, 10]]);\n      }));\n\n      function deleteMenu(_x22) {\n        return _deleteMenu.apply(this, arguments);\n      }\n\n      return deleteMenu;\n    }() //菜单删除\n\n  }, {\n    key: \"deleteUser\",\n    value: function () {\n      var _deleteUser = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee15(type, params) {\n        var url, res;\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                this.isLoading = true;\n                url = type ? services.requestUrl.removeUser : services.requestUrl.batchRemoveUser;\n                _context15.prev = 2;\n                _context15.next = 5;\n                return services.putRequest(url, params);\n\n              case 5:\n                res = _context15.sent;\n                this.isLoading = false;\n\n                if (!isDataExist(res)) {\n                  _context15.next = 9;\n                  break;\n                }\n\n                return _context15.abrupt(\"return\", res);\n\n              case 9:\n                _context15.next = 14;\n                break;\n\n              case 11:\n                _context15.prev = 11;\n                _context15.t0 = _context15[\"catch\"](2);\n                console.log(_context15.t0);\n\n              case 14:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this, [[2, 11]]);\n      }));\n\n      function deleteUser(_x23, _x24) {\n        return _deleteUser.apply(this, arguments);\n      }\n\n      return deleteUser;\n    }() //获取角色当前菜单权限\n\n  }, {\n    key: \"getMenuIdsByRole\",\n    value: function () {\n      var _getMenuIdsByRole = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee16(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                this.isLoading = true;\n                _context16.prev = 1;\n                _context16.next = 4;\n                return services.getRequest(services.requestUrl.getMenuIdsByRole, params);\n\n              case 4:\n                res = _context16.sent;\n                this.isLoading = false;\n\n                if (isDataExist(res)) {\n                  this.formData.menuIds = res.data.data;\n                }\n\n                _context16.next = 12;\n                break;\n\n              case 9:\n                _context16.prev = 9;\n                _context16.t0 = _context16[\"catch\"](1);\n                console.log(_context16.t0);\n\n              case 12:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this, [[1, 9]]);\n      }));\n\n      function getMenuIdsByRole(_x25) {\n        return _getMenuIdsByRole.apply(this, arguments);\n      }\n\n      return getMenuIdsByRole;\n    }() //打开/关闭模态框\n\n  }, {\n    key: \"getRoleList\",\n    //获取角色列表\n    value: function () {\n      var _getRoleList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee17(params) {\n        var _this = this;\n\n        var res;\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                this.isLoading = true;\n                _context17.prev = 1;\n                _context17.next = 4;\n                return services.getRequest(services.requestUrl.allRoleList, params);\n\n              case 4:\n                res = _context17.sent;\n                this.isLoading = false;\n\n                if (isDataExist(res)) {\n                  this.roleList = [];\n                  res.data.data.map(function (item) {\n                    _this.roleList.push({\n                      label: item.roleName,\n                      value: item.id\n                    });\n                  }); // console.log(this.roleList);\n                }\n\n                _context17.next = 12;\n                break;\n\n              case 9:\n                _context17.prev = 9;\n                _context17.t0 = _context17[\"catch\"](1);\n                console.log(_context17.t0);\n\n              case 12:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this, [[1, 9]]);\n      }));\n\n      function getRoleList(_x26) {\n        return _getRoleList.apply(this, arguments);\n      }\n\n      return getRoleList;\n    }() //获取部门列表\n\n  }, {\n    key: \"getDepList\",\n    value: function () {\n      var _getDepList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee18(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                this.isLoading = true;\n                _context18.prev = 1;\n                _context18.next = 4;\n                return services.getRequest(services.requestUrl.departmentTree, params);\n\n              case 4:\n                res = _context18.sent;\n                this.isLoading = false;\n\n                if (isDataExist(res)) {\n                  this.DepList = [{\n                    id: \"-1\",\n                    text: '所有部门',\n                    children: res.data.data.children\n                  }];\n                }\n\n                _context18.next = 12;\n                break;\n\n              case 9:\n                _context18.prev = 9;\n                _context18.t0 = _context18[\"catch\"](1);\n                console.log(_context18.t0);\n\n              case 12:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this, [[1, 9]]);\n      }));\n\n      function getDepList(_x27) {\n        return _getDepList.apply(this, arguments);\n      }\n\n      return getDepList;\n    }() //获取客户列表\n\n  }, {\n    key: \"getCumList\",\n    value: function () {\n      var _getCumList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee19(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                this.isLoading = true;\n                _context19.prev = 1;\n                _context19.next = 4;\n                return services.getRequest(services.requestUrl.getCustomer, params);\n\n              case 4:\n                res = _context19.sent;\n                this.isLoading = false;\n\n                if (isDataExist(res)) {\n                  this.CumList = res.data.data;\n                }\n\n                _context19.next = 12;\n                break;\n\n              case 9:\n                _context19.prev = 9;\n                _context19.t0 = _context19[\"catch\"](1);\n                console.log(_context19.t0);\n\n              case 12:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this, [[1, 9]]);\n      }));\n\n      function getCumList(_x28) {\n        return _getCumList.apply(this, arguments);\n      }\n\n      return getCumList;\n    }() //获取客户列表\n\n  }, {\n    key: \"getSupList\",\n    value: function () {\n      var _getSupList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee20(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                this.isLoading = true;\n                _context20.prev = 1;\n                _context20.next = 4;\n                return services.getRequest(services.requestUrl.getCustomer, params);\n\n              case 4:\n                res = _context20.sent;\n                this.isLoading = false;\n\n                if (isDataExist(res)) {\n                  this.SupList = res.data.data;\n                }\n\n                _context20.next = 12;\n                break;\n\n              case 9:\n                _context20.prev = 9;\n                _context20.t0 = _context20[\"catch\"](1);\n                console.log(_context20.t0);\n\n              case 12:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this, [[1, 9]]);\n      }));\n\n      function getSupList(_x29) {\n        return _getSupList.apply(this, arguments);\n      }\n\n      return getSupList;\n    }() //查询用户的角色\n\n  }, {\n    key: \"getUserRole\",\n    value: function () {\n      var _getUserRole = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee21(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                this.isLoading = true;\n                _context21.prev = 1;\n                _context21.next = 4;\n                return services.getRequest(services.requestUrl.getUserRoles, params);\n\n              case 4:\n                res = _context21.sent;\n                this.isLoading = false;\n\n                if (!isDataExist(res)) {\n                  _context21.next = 8;\n                  break;\n                }\n\n                return _context21.abrupt(\"return\", res.data.data);\n\n              case 8:\n                _context21.next = 13;\n                break;\n\n              case 10:\n                _context21.prev = 10;\n                _context21.t0 = _context21[\"catch\"](1);\n                console.log(_context21.t0);\n\n              case 13:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this, [[1, 10]]);\n      }));\n\n      function getUserRole(_x30) {\n        return _getUserRole.apply(this, arguments);\n      }\n\n      return getUserRole;\n    }() //查询用户的角色\n\n  }, {\n    key: \"existUsername\",\n    value: function () {\n      var _existUsername = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee22(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                this.isLoading = true;\n                _context22.prev = 1;\n                _context22.next = 4;\n                return services.getRequest(services.requestUrl.exist, params);\n\n              case 4:\n                res = _context22.sent;\n                this.isLoading = false;\n\n                if (!isDataExist(res)) {\n                  _context22.next = 8;\n                  break;\n                }\n\n                return _context22.abrupt(\"return\", res.data.data);\n\n              case 8:\n                _context22.next = 13;\n                break;\n\n              case 10:\n                _context22.prev = 10;\n                _context22.t0 = _context22[\"catch\"](1);\n                console.log(_context22.t0);\n\n              case 13:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this, [[1, 10]]);\n      }));\n\n      function existUsername(_x31) {\n        return _existUsername.apply(this, arguments);\n      }\n\n      return existUsername;\n    }() //获取菜单列表\n\n  }, {\n    key: \"getMenuData\",\n    value: function () {\n      var _getMenuData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee23(params) {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                this.isLoading = true;\n                _context23.prev = 1;\n                _context23.next = 4;\n                return services.getRequest(services.requestUrl.menuList, params);\n\n              case 4:\n                res = _context23.sent;\n                this.isLoading = false;\n\n                if (isDataExist(res)) {\n                  this.arr = res.data.data;\n                  data = this.transTreeData(this.arr);\n                  this.menuData = data;\n                }\n\n                _context23.next = 12;\n                break;\n\n              case 9:\n                _context23.prev = 9;\n                _context23.t0 = _context23[\"catch\"](1);\n                console.log(_context23.t0);\n\n              case 12:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23, this, [[1, 9]]);\n      }));\n\n      function getMenuData(_x32) {\n        return _getMenuData.apply(this, arguments);\n      }\n\n      return getMenuData;\n    }() //数据类型转换(平级数据装换成树结构)\n\n  }, {\n    key: \"clearData\",\n    //销毁数据\n    value: function () {\n      var _clearData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee24() {\n        return _regeneratorRuntime.wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                this.tableData = [];\n                this.columnsType = '1';\n                this.arr = [];\n                this.roleList = [];\n                this.menuData = []; //菜单列表\n\n                this.DepList = []; //部门列表\n\n                this.tagList = []; //筛选数据\n\n                this.SupList = [];\n                this.CumList = [];\n                this.selectedRows = []; //选中表格\n\n                this.PageInfo = {\n                  pageIndex: 1,\n                  pageSize: 10\n                }; //分页信息\n\n                this.formData = {}; //表单数据\n\n                this.treeData = {}; //菜单树数据\n\n                this.modalVisible = false; //模态框显隐\n\n                this.roleName = \"\";\n                this.name = \"\";\n                this.customerName = \"\";\n                this.deptId = \"\";\n                this.innerModalVisible = false;\n\n              case 19:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24, this);\n      }));\n\n      function clearData() {\n        return _clearData.apply(this, arguments);\n      }\n\n      return clearData;\n    }()\n  }]);\n\n  return Order;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"isLoading\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"tableData\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"roleList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"menuData\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"arr\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"DepList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"allDept\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"CumList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"SupList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"tagList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"selectedRows\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"PageInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {\n      pageIndex: 1,\n      pageSize: 10\n    };\n  }\n}), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, \"formData\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor14 = _applyDecoratedDescriptor(_class.prototype, \"treeData\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor15 = _applyDecoratedDescriptor(_class.prototype, \"modalVisible\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor16 = _applyDecoratedDescriptor(_class.prototype, \"roleName\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return \"\";\n  }\n}), _descriptor17 = _applyDecoratedDescriptor(_class.prototype, \"name\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return \"\";\n  }\n}), _descriptor18 = _applyDecoratedDescriptor(_class.prototype, \"customerName\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return \"\";\n  }\n}), _descriptor19 = _applyDecoratedDescriptor(_class.prototype, \"roleIds\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return \"\";\n  }\n}), _descriptor20 = _applyDecoratedDescriptor(_class.prototype, \"deptId\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return \"\";\n  }\n}), _descriptor21 = _applyDecoratedDescriptor(_class.prototype, \"columnsType\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return \"1\";\n  }\n}), _descriptor22 = _applyDecoratedDescriptor(_class.prototype, \"innerModalVisible\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor23 = _applyDecoratedDescriptor(_class.prototype, \"isReview\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"getData\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"getData\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getDeptData\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"getDeptData\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getDept\", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, \"getDept\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getTreeData\", [_dec4], Object.getOwnPropertyDescriptor(_class.prototype, \"getTreeData\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"addNew\", [_dec5], Object.getOwnPropertyDescriptor(_class.prototype, \"addNew\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"addNewRole\", [_dec6], Object.getOwnPropertyDescriptor(_class.prototype, \"addNewRole\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"addNewMenu\", [_dec7], Object.getOwnPropertyDescriptor(_class.prototype, \"addNewMenu\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"addNewUser\", [_dec8], Object.getOwnPropertyDescriptor(_class.prototype, \"addNewUser\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"addNewCustomer\", [_dec9], Object.getOwnPropertyDescriptor(_class.prototype, \"addNewCustomer\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"resetPassword\", [_dec10], Object.getOwnPropertyDescriptor(_class.prototype, \"resetPassword\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"deleteCol\", [_dec11], Object.getOwnPropertyDescriptor(_class.prototype, \"deleteCol\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"deleteCus\", [_dec12], Object.getOwnPropertyDescriptor(_class.prototype, \"deleteCus\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"deleteRole\", [_dec13], Object.getOwnPropertyDescriptor(_class.prototype, \"deleteRole\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"deleteMenu\", [_dec14], Object.getOwnPropertyDescriptor(_class.prototype, \"deleteMenu\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"deleteUser\", [_dec15], Object.getOwnPropertyDescriptor(_class.prototype, \"deleteUser\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getMenuIdsByRole\", [_dec16], Object.getOwnPropertyDescriptor(_class.prototype, \"getMenuIdsByRole\"), _class.prototype), _descriptor24 = _applyDecoratedDescriptor(_class.prototype, \"modalChange\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this2 = this;\n\n    return function (type, record) {\n      // console.log(record)\n      if (type) {\n        _this2.formData = record;\n      } else {\n        _this2.formData = {\n          delFlag: 1,\n          customerStatus: 1\n        };\n      }\n\n      _this2.modalVisible = !_this2.modalVisible;\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"getRoleList\", [_dec17], Object.getOwnPropertyDescriptor(_class.prototype, \"getRoleList\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getDepList\", [_dec18], Object.getOwnPropertyDescriptor(_class.prototype, \"getDepList\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getCumList\", [_dec19], Object.getOwnPropertyDescriptor(_class.prototype, \"getCumList\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getSupList\", [_dec20], Object.getOwnPropertyDescriptor(_class.prototype, \"getSupList\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getUserRole\", [_dec21], Object.getOwnPropertyDescriptor(_class.prototype, \"getUserRole\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"existUsername\", [_dec22], Object.getOwnPropertyDescriptor(_class.prototype, \"existUsername\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getMenuData\", [_dec23], Object.getOwnPropertyDescriptor(_class.prototype, \"getMenuData\"), _class.prototype), _descriptor25 = _applyDecoratedDescriptor(_class.prototype, \"transTreeData\", [_dec24], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this3 = this;\n\n    return function (items) {\n      if (items.length > 0) {\n        var curPid = 0; //pid=0，为最上层节点 ，即无父节点\n\n        var parent = _this3.findChild(curPid); //数组\n        // console.log(parent)\n\n\n        return parent;\n      } else {\n        return [];\n      }\n    };\n  }\n}), _descriptor26 = _applyDecoratedDescriptor(_class.prototype, \"findChild\", [_dec25], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this4 = this;\n\n    return function (curPid) {\n      var _arr = [];\n      var items = _this4.arr;\n      var length = items.length;\n\n      for (var i = 0; i < length; i++) {\n        if (items[i].parentId == curPid) {\n          var _obj = items[i];\n          _obj.children = _this4.findChild(_obj.id);\n\n          _arr.push(_obj);\n        }\n      }\n\n      return _arr;\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"clearData\", [_dec26], Object.getOwnPropertyDescriptor(_class.prototype, \"clearData\"), _class.prototype)), _class));\nvar OrderDefineStore = new Order();\nexport default OrderDefineStore;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage\\src\\stores\\SystemStore.js"],"names":["observable","action","isDataExist","services","Order","bound","type","params","isLoading","url","requestUrl","departmentList","roleList","userList","getRequest","res","tableData","data","items","PageInfo","page","console","log","getCustomer","arr","transTreeData","allDept","treeMenu","treeData","push","saveDepartment","updataDepartment","putRequest","saveRole","updataRole","saveMenu","updateMenu","saveUser","updataUser","addCustomer","updateCustomer","adminResetPwd","removeDepartment","deleteCus","removeRole","batchRemoveRole","removeMenu","removeUser","batchRemoveUser","getMenuIdsByRole","formData","menuIds","allRoleList","map","item","label","roleName","value","id","departmentTree","DepList","text","children","CumList","SupList","getUserRoles","exist","menuList","menuData","columnsType","tagList","selectedRows","pageIndex","pageSize","modalVisible","name","customerName","deptId","innerModalVisible","record","delFlag","customerStatus","length","curPid","parent","findChild","_arr","i","parentId","_obj","OrderDefineStore"],"mappings":"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","sourcesContent":["import { observable, action, } from 'mobx';\nimport { isDataExist } from 'Utils/dataTools';\nimport * as services from '../services/system';\n\n\nclass Order {\n    @observable isLoading = false;\n    @observable tableData = [];//表格数据\n    @observable roleList = [];//角色列表\n    @observable menuData = [];//菜单列表\n    @observable arr = [];\n    @observable DepList = [];//部门树列表\n    @observable allDept = [];//部门列表\n    @observable CumList = [];//客户列表\n    @observable SupList = [];//供应商列表\n    @observable tagList = [];//筛选数据\n    @observable selectedRows = [];//选中表格\n    @observable PageInfo = { pageIndex: 1, pageSize: 10 };//分页信息\n    @observable formData = {};//表单数据\n    @observable treeData = {};//菜单树数据\n    @observable modalVisible = false;//模态框显隐\n    @observable roleName = \"\";\n    @observable name = \"\";\n    @observable customerName = \"\";\n    @observable roleIds = \"\";//用户的角色列表\n    @observable deptId = \"\";\n    @observable columnsType = \"1\";\n    @observable innerModalVisible = false;\n    @observable isReview = false;\n\n    //获取表格数据\n    @action.bound async getData(type, params) {\n        this.isLoading = true\n        //1部门管理，2角色管理，3用户管理\n        const url = type === 1 ? services.requestUrl.departmentList : type === 2 ? services.requestUrl.roleList : services.requestUrl.userList\n        try {\n            let res = await services.getRequest(url, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                if (type === 1) {\n                    this.tableData = res.data.data\n                } else {\n                    this.tableData = res.data.data.items\n                    this.PageInfo = res.data.data.page\n                }\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //获取组织架构列表\n    @action.bound async getDeptData(type, params) {\n        this.isLoading = true\n        //1制造商，2客户\n        const url = type === '1' ? services.requestUrl.departmentList : services.requestUrl.getCustomer\n        try {\n            let res = await services.getRequest(url, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                if (type === '1') {\n                    this.arr = res.data.data\n                    // console.log(this.arr)\n                    const data = this.transTreeData(this.arr)\n                    this.tableData = data\n                    // this.tableData = res.data.data.children\n\n                } else {\n                    this.tableData = res.data.data\n                }\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //获取制造商部门列表\n    @action.bound async getDept(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.departmentList, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.allDept = res.data.data\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //获取菜单树数据\n    @action.bound async getTreeData(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.treeMenu, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.treeData = []\n                this.treeData.push(res.data.data)\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    //保存更新部门信息\n    @action.bound async addNew(type, params) {\n        this.isLoading = true\n        const url = type ? services.requestUrl.saveDepartment : services.requestUrl.updataDepartment\n        try {\n            let res = await services.putRequest(url, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //保存更新角色信息\n    @action.bound async addNewRole(type, params) {\n        this.isLoading = true\n        const url = type ? services.requestUrl.saveRole : services.requestUrl.updataRole\n        try {\n            let res = await services.putRequest(url, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //保存系统菜单\n    @action.bound async addNewMenu(type, params) {\n        this.isLoading = true\n        const url = type ? services.requestUrl.saveMenu : services.requestUrl.updateMenu\n        try {\n            let res = await services.putRequest(url, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //保存系统菜单\n    @action.bound async addNewUser(type, params) {\n        this.isLoading = true\n        const url = type ? services.requestUrl.saveUser : services.requestUrl.updataUser\n        try {\n            let res = await services.putRequest(url, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //保存系统菜单\n    @action.bound async addNewCustomer(type, params) {\n        this.isLoading = true\n        const url = type ? services.requestUrl.addCustomer : services.requestUrl.updateCustomer\n        try {\n            let res = await services.putRequest(url, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //保存系统菜单\n    @action.bound async resetPassword(params) {\n        this.isLoading = true\n        try {\n            let res = await services.putRequest(services.requestUrl.adminResetPwd, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //部门删除\n    @action.bound async deleteCol(params) {\n        this.isLoading = true\n        try {\n            let res = await services.putRequest(services.requestUrl.removeDepartment, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //客户删除\n    @action.bound async deleteCus(params) {\n        this.isLoading = true\n        try {\n            let res = await services.putRequest(services.requestUrl.deleteCus, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //角色删除\n    @action.bound async deleteRole(type, params) {\n        this.isLoading = true\n        const url = type ? services.requestUrl.removeRole : services.requestUrl.batchRemoveRole\n        try {\n            let res = await services.putRequest(url, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //菜单删除\n    @action.bound async deleteMenu(params) {\n        this.isLoading = true\n        try {\n            let res = await services.putRequest(services.requestUrl.removeMenu, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //菜单删除\n    @action.bound async deleteUser(type, params) {\n        this.isLoading = true\n        const url = type ? services.requestUrl.removeUser : services.requestUrl.batchRemoveUser\n        try {\n            let res = await services.putRequest(url, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //获取角色当前菜单权限\n    @action.bound async getMenuIdsByRole(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.getMenuIdsByRole, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.formData.menuIds = res.data.data\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //打开/关闭模态框\n    @action modalChange = (type, record) => {\n        // console.log(record)\n        if (type) {\n            this.formData = record\n        } else {\n            this.formData = { delFlag: 1, customerStatus: 1 }\n        }\n        this.modalVisible = !this.modalVisible\n    }\n    //获取角色列表\n    @action.bound async getRoleList(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.allRoleList, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.roleList = []\n                res.data.data.map(item => {\n                    this.roleList.push({ label: item.roleName, value: item.id })\n                })\n                // console.log(this.roleList);\n\n            }\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //获取部门列表\n    @action.bound async getDepList(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.departmentTree, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.DepList = [{ id: \"-1\", text: '所有部门', children: res.data.data.children }]\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //获取客户列表\n    @action.bound async getCumList(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.getCustomer, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.CumList = res.data.data\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //获取客户列表\n    @action.bound async getSupList(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.getCustomer, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.SupList = res.data.data\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //查询用户的角色\n    @action.bound async getUserRole(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.getUserRoles, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res.data.data\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //查询用户的角色\n    @action.bound async existUsername(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.exist, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res.data.data\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //获取菜单列表\n    @action.bound async getMenuData(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.menuList, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.arr = res.data.data\n                const data = this.transTreeData(this.arr)\n                this.menuData = data\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //数据类型转换(平级数据装换成树结构)\n    @action.bound transTreeData = (items) => {\n        if (items.length > 0) {\n            let curPid = 0 //pid=0，为最上层节点 ，即无父节点\n            let parent = this.findChild(curPid);//数组\n            // console.log(parent)\n            return parent;\n        } else {\n            return [];\n        }\n    }\n    //找子节点\n    @action.bound findChild = (curPid) => {\n        let _arr = [];\n        let items = this.arr;\n        let length = items.length;\n        for (let i = 0; i < length; i++) {\n            if (items[i].parentId == curPid) {\n                let _obj = items[i];\n                _obj.children = this.findChild(_obj.id);\n                _arr.push(_obj);\n            }\n        }\n        return _arr;\n    }\n\n    //销毁数据\n    @action.bound async clearData() {\n        this.tableData = []\n        this.columnsType = '1'\n        this.arr = []\n        this.roleList = [];\n        this.menuData = [];//菜单列表\n        this.DepList = [];//部门列表\n        this.tagList = [];//筛选数据\n        this.SupList = [];\n        this.CumList = [];\n        this.selectedRows = [];//选中表格\n        this.PageInfo = { pageIndex: 1, pageSize: 10 };//分页信息\n        this.formData = {};//表单数据\n        this.treeData = {};//菜单树数据\n        this.modalVisible = false;//模态框显隐\n        this.roleName = \"\";\n        this.name = \"\";\n        this.customerName = \"\";\n        this.deptId = \"\";\n        this.innerModalVisible = false;\n    }\n}\nlet OrderDefineStore = new Order();\nexport default OrderDefineStore;"]},"metadata":{},"sourceType":"module"}