{"ast":null,"code":"var _jsxFileName = \"F:\\\\documents\\\\bl-device-manage-test\\\\src\\\\layouts\\\\FlowManage\\\\Node\\\\Node1.js\";\nimport React, { memo } from 'react';\nimport { Handle } from 'react-flow-renderer';\nexport default memo(function (_ref) {\n  var data = _ref.data,\n      isConnectable = _ref.isConnectable;\n  return React.createElement(React.Fragment, null, React.createElement(Handle, {\n    type: \"target\",\n    position: \"left\",\n    style: {\n      background: '#555'\n    },\n    onConnect: function onConnect(params) {\n      return console.log('handle onConnect', params);\n    },\n    isConnectable: isConnectable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Custom Color Picker Node: \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, data.color)), React.createElement(\"input\", {\n    className: \"nodrag\",\n    type: \"color\",\n    onChange: data.onChange,\n    defaultValue: data.color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(Handle, {\n    type: \"source\",\n    position: \"right\",\n    id: \"a\",\n    style: {\n      top: 10,\n      background: '#555'\n    },\n    isConnectable: isConnectable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(Handle, {\n    type: \"source\",\n    position: \"right\",\n    id: \"b\",\n    style: {\n      bottom: 10,\n      top: 'auto',\n      background: '#555'\n    },\n    isConnectable: isConnectable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["F:\\documents\\bl-device-manage-test\\src\\layouts\\FlowManage\\Node\\Node1.js"],"names":["React","memo","Handle","data","isConnectable","background","params","console","log","color","onChange","top","bottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AAEA,SAASC,MAAT,QAAuB,qBAAvB;AAEA,eAAeD,IAAI,CAAC,gBAA6B;AAAA,MAA1BE,IAA0B,QAA1BA,IAA0B;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;AAC/C,SACE,0CACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,QAAQ,EAAC,MAFX;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAHT;AAIE,IAAA,SAAS,EAAE,mBAACC,MAAD;AAAA,aAAYC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,MAAhC,CAAZ;AAAA,KAJb;AAKE,IAAA,aAAa,EAAEF,aALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAC4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASD,IAAI,CAACM,KAAd,CAD5B,CARF,EAWE;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,QAAQ,EAAEN,IAAI,CAACO,QAHjB;AAIE,IAAA,YAAY,EAAEP,IAAI,CAACM,KAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAiBE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,QAAQ,EAAC,OAFX;AAGE,IAAA,EAAE,EAAC,GAHL;AAIE,IAAA,KAAK,EAAE;AAAEE,MAAAA,GAAG,EAAE,EAAP;AAAWN,MAAAA,UAAU,EAAE;AAAvB,KAJT;AAKE,IAAA,aAAa,EAAED,aALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,EAwBE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,QAAQ,EAAC,OAFX;AAGE,IAAA,EAAE,EAAC,GAHL;AAIE,IAAA,KAAK,EAAE;AAAEQ,MAAAA,MAAM,EAAE,EAAV;AAAcD,MAAAA,GAAG,EAAE,MAAnB;AAA2BN,MAAAA,UAAU,EAAE;AAAvC,KAJT;AAKE,IAAA,aAAa,EAAED,aALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF,CADF;AAkCD,CAnCkB,CAAnB","sourcesContent":["import React, { memo } from 'react';\r\n\r\nimport { Handle } from 'react-flow-renderer';\r\n\r\nexport default memo(({ data, isConnectable }) => {\r\n  return (\r\n    <>\r\n      <Handle\r\n        type=\"target\"\r\n        position=\"left\"\r\n        style={{ background: '#555' }}\r\n        onConnect={(params) => console.log('handle onConnect', params)}\r\n        isConnectable={isConnectable}\r\n      />\r\n      <div>\r\n        Custom Color Picker Node: <strong>{data.color}</strong>\r\n      </div>\r\n      <input\r\n        className=\"nodrag\"\r\n        type=\"color\"\r\n        onChange={data.onChange}\r\n        defaultValue={data.color}\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        position=\"right\"\r\n        id=\"a\"\r\n        style={{ top: 10, background: '#555' }}\r\n        isConnectable={isConnectable}\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        position=\"right\"\r\n        id=\"b\"\r\n        style={{ bottom: 10, top: 'auto', background: '#555' }}\r\n        isConnectable={isConnectable}\r\n      />\r\n    </>\r\n  );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}