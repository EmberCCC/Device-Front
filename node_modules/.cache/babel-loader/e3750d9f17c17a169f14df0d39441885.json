{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\n/*\r\n * @Author: your name\r\n * @Date: 2021-11-02 14:29:58\r\n * @LastEditTime: 2022-05-05 22:31:38\r\n * @LastEditors: EmberCCC 1810888456@qq.com\r\n * @Description: 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n * @FilePath: \\bl-device-manage\\src\\services\\home.js\r\n */\nimport { get, put, getJson } from '../utils/request';\nexport var requestList = {\n  getLog: '/mongo/message/flow/flowLog',\n  getOne: '/mongo/message/get/one'\n};\nexport function gets(type) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(data, options) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return get(requestList[type], data, options);\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}\nexport function getJSON(_x3) {\n  return _getJSON.apply(this, arguments);\n}\n\nfunction _getJSON() {\n  _getJSON = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(type) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\",\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee3(data, options) {\n                return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.next = 2;\n                        return getJson(requestList[type], data, options);\n\n                      case 2:\n                        return _context3.abrupt(\"return\", _context3.sent);\n\n                      case 3:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n\n              return function (_x12, _x13) {\n                return _ref3.apply(this, arguments);\n              };\n            }());\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _getJSON.apply(this, arguments);\n}\n\nexport function posts(type) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(data, options) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return put(requestList[type], data, options);\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x4, _x5) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n}\n/* 测试接口的数据 */\n\nexport function getRequest(_x6, _x7, _x8) {\n  return _getRequest.apply(this, arguments);\n}\n/* 测试接口的数据 */\n\nfunction _getRequest() {\n  _getRequest = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(url, data, options) {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return get(url, data, options);\n\n          case 2:\n            return _context5.abrupt(\"return\", _context5.sent);\n\n          case 3:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _getRequest.apply(this, arguments);\n}\n\nexport function putRequest(_x9, _x10, _x11) {\n  return _putRequest.apply(this, arguments);\n}\n\nfunction _putRequest() {\n  _putRequest = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6(url, data, options) {\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return put(url, data, options);\n\n          case 2:\n            return _context6.abrupt(\"return\", _context6.sent);\n\n          case 3:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _putRequest.apply(this, arguments);\n}","map":{"version":3,"sources":["F:\\documents\\bl-device-manage-test\\src\\services\\message.js"],"names":["get","put","getJson","requestList","getLog","getOne","gets","type","data","options","getJSON","posts","getRequest","url","putRequest"],"mappings":";;;AAAA;;;;;;;;AAQA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,OAAnB,QAAiC,kBAAjC;AAEA,OAAO,IAAMC,WAAW,GAAG;AACzBC,EAAAA,MAAM,EAAC,6BADkB;AAEzBC,EAAAA,MAAM,EAAC;AAFkB,CAApB;AAMP,OAAO,SAASC,IAAT,CAAcC,IAAd,EAAoB;AACzB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAgBC,IAAhB,EAAsBC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACQT,GAAG,CAACG,WAAW,CAACI,IAAD,CAAZ,EAAoBC,IAApB,EAA0BC,OAA1B,CADX;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGD;AAED,gBAAsBC,OAAtB;AAAA;AAAA;;;;;2BAAO,kBAAuBH,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACE,kBAAgBC,IAAhB,EAAsBC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACQP,OAAO,CAACC,WAAW,CAACI,IAAD,CAAZ,EAAoBC,IAApB,EAA0BC,OAA1B,CADf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAKP,OAAO,SAASE,KAAT,CAAeJ,IAAf,EAAqB;AAC1B;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,kBAAgBC,IAAhB,EAAsBC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACQR,GAAG,CAACE,WAAW,CAACI,IAAD,CAAZ,EAAoBC,IAApB,EAA0BC,OAA1B,CADX;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGD;AAID;;AACA,gBAAsBG,UAAtB;AAAA;AAAA;AAIA;;;;;2BAJO,kBAA0BC,GAA1B,EAA+BL,IAA/B,EAAqCC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQT,GAAG,CAACa,GAAD,EAAML,IAAN,EAAYC,OAAZ,CADX;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAKP,gBAAsBK,UAAtB;AAAA;AAAA;;;;;2BAAO,kBAA0BD,GAA1B,EAA+BL,IAA/B,EAAqCC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQR,GAAG,CAACY,GAAD,EAAML,IAAN,EAAYC,OAAZ,CADX;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["/*\r\n * @Author: your name\r\n * @Date: 2021-11-02 14:29:58\r\n * @LastEditTime: 2022-05-05 22:31:38\r\n * @LastEditors: EmberCCC 1810888456@qq.com\r\n * @Description: 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n * @FilePath: \\bl-device-manage\\src\\services\\home.js\r\n */\r\nimport { get, put ,getJson} from '../utils/request';\r\n\r\nexport const requestList = {\r\n  getLog:'/mongo/message/flow/flowLog',\r\n  getOne:'/mongo/message/get/one'\r\n\r\n}\r\n\r\nexport function gets(type) {\r\n  return async function (data, options) {\r\n    return await get(requestList[type], data, options);\r\n  }\r\n}\r\n\r\nexport async function getJSON(type) {\r\n  return async function (data, options) {\r\n    return await getJson(requestList[type], data, options);\r\n  }\r\n}\r\nexport function posts(type) {\r\n  return async function (data, options) {\r\n    return await put(requestList[type], data, options);\r\n  }\r\n}\r\n\r\n\r\n\r\n/* 测试接口的数据 */\r\nexport async function getRequest(url, data, options) {\r\n  return await get(url, data, options);\r\n}\r\n\r\n/* 测试接口的数据 */\r\nexport async function putRequest(url, data, options) {\r\n  return await put(url, data, options);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}