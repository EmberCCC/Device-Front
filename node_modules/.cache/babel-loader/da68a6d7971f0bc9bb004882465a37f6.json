{"ast":null,"code":"import \"antd/es/upload/style\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport _UploadOutlined from \"@ant-design/icons/lib/icons/UploadOutlined\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { get } from 'lodash-es';\nimport React from 'react';\nexport default function FrUpload(_ref) {\n  var action = _ref.action,\n      value = _ref.value,\n      _onChange = _ref.onChange,\n      uploadProps = _ref.uploadProps,\n      buttonProps = _ref.buttonProps,\n      schema = _ref.schema;\n\n  var props = _objectSpread({\n    name: 'file',\n    type: 'file',\n    action: action,\n    // 旧的兼容\n    onChange: function onChange(info) {\n      if (info.file.status === 'done') {\n        _message.success(\"\".concat(info.file.name, \" \\u4E0A\\u4F20\\u6210\\u529F\"));\n\n        var path = get(schema, 'props.path', '');\n        var url = path ? get(info.file.response, path) : info.file.response.url;\n\n        _onChange(url);\n      } else if (info.file.status === 'error') {\n        _message.error(\"\".concat(info.file.name, \" \\u4E0A\\u4F20\\u5931\\u8D25\"));\n      }\n    },\n    onRemove: function onRemove() {\n      _onChange('');\n    }\n  }, uploadProps);\n\n  var defaultBtnProps = {\n    icon: /*#__PURE__*/React.createElement(_UploadOutlined, null),\n    children: '上传'\n  };\n\n  var btnProps = _objectSpread(_objectSpread({}, defaultBtnProps), buttonProps);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fr-upload-mod\"\n  }, /*#__PURE__*/React.createElement(_Upload, _extends({}, props, {\n    className: \"fr-upload-file\"\n  }), /*#__PURE__*/React.createElement(_Button, btnProps)), value && /*#__PURE__*/React.createElement(\"a\", {\n    href: value,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: \"fr-upload-preview\"\n  }, \"\\u5DF2\\u4E0A\\u4F20\\u5730\\u5740\"));\n}","map":null,"metadata":{},"sourceType":"module"}