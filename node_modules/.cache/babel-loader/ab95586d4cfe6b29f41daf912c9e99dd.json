{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport CalendarOutlined from \"@ant-design/icons/es/icons/CalendarOutlined\";\nimport ClockCircleOutlined from \"@ant-design/icons/es/icons/ClockCircleOutlined\";\nimport CloseCircleFilled from \"@ant-design/icons/es/icons/CloseCircleFilled\";\nimport classNames from 'classnames';\nimport RCPicker from 'rc-picker';\nimport * as React from 'react';\nimport { forwardRef, useContext, useImperativeHandle } from 'react';\nimport { Components, getTimeProps } from '.';\nimport { ConfigContext } from '../../config-provider';\nimport DisabledContext from '../../config-provider/DisabledContext';\nimport SizeContext from '../../config-provider/SizeContext';\nimport { FormItemInputContext } from '../../form/context';\nimport LocaleReceiver from '../../locale-provider/LocaleReceiver';\nimport { getMergedStatus, getStatusClassNames } from '../../_util/statusUtils';\nimport warning from '../../_util/warning';\nimport enUS from '../locale/en_US';\nimport { getPlaceholder, transPlacement2DropdownAlign } from '../util';\nexport default function generatePicker(generateConfig) {\n  function getPicker(picker, displayName) {\n    var Picker = /*#__PURE__*/forwardRef(function (props, ref) {\n      var customizePrefixCls = props.prefixCls,\n          customizeGetPopupContainer = props.getPopupContainer,\n          className = props.className,\n          customizeSize = props.size,\n          _props$bordered = props.bordered,\n          bordered = _props$bordered === void 0 ? true : _props$bordered,\n          placement = props.placement,\n          placeholder = props.placeholder,\n          customDisabled = props.disabled,\n          customStatus = props.status,\n          restProps = __rest(props, [\"prefixCls\", \"getPopupContainer\", \"className\", \"size\", \"bordered\", \"placement\", \"placeholder\", \"disabled\", \"status\"]);\n\n      process.env.NODE_ENV !== \"production\" ? warning(picker !== 'quarter', displayName, \"DatePicker.\".concat(displayName, \" is legacy usage. Please use DatePicker[picker='\").concat(picker, \"'] directly.\")) : void 0;\n\n      var _useContext = useContext(ConfigContext),\n          getPrefixCls = _useContext.getPrefixCls,\n          direction = _useContext.direction,\n          getPopupContainer = _useContext.getPopupContainer;\n\n      var prefixCls = getPrefixCls('picker', customizePrefixCls);\n      var innerRef = React.useRef(null);\n      var format = props.format,\n          showTime = props.showTime;\n      useImperativeHandle(ref, function () {\n        return {\n          focus: function focus() {\n            var _a;\n\n            return (_a = innerRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n          },\n          blur: function blur() {\n            var _a;\n\n            return (_a = innerRef.current) === null || _a === void 0 ? void 0 : _a.blur();\n          }\n        };\n      });\n      var additionalProps = {\n        showToday: true\n      };\n      var additionalOverrideProps = {};\n\n      if (picker) {\n        additionalOverrideProps.picker = picker;\n      }\n\n      var mergedPicker = picker || props.picker;\n      additionalOverrideProps = _extends(_extends(_extends({}, additionalOverrideProps), showTime ? getTimeProps(_extends({\n        format: format,\n        picker: mergedPicker\n      }, showTime)) : {}), mergedPicker === 'time' ? getTimeProps(_extends(_extends({\n        format: format\n      }, props), {\n        picker: mergedPicker\n      })) : {});\n      var rootPrefixCls = getPrefixCls(); // ===================== Size =====================\n\n      var size = React.useContext(SizeContext);\n      var mergedSize = customizeSize || size; // ===================== Disabled =====================\n\n      var disabled = React.useContext(DisabledContext);\n      var mergedDisabled = customDisabled || disabled; // ===================== FormItemInput =====================\n\n      var formItemContext = useContext(FormItemInputContext);\n      var hasFeedback = formItemContext.hasFeedback,\n          contextStatus = formItemContext.status,\n          feedbackIcon = formItemContext.feedbackIcon;\n      var suffixNode = /*#__PURE__*/React.createElement(React.Fragment, null, mergedPicker === 'time' ? /*#__PURE__*/React.createElement(ClockCircleOutlined, null) : /*#__PURE__*/React.createElement(CalendarOutlined, null), hasFeedback && feedbackIcon);\n      return /*#__PURE__*/React.createElement(LocaleReceiver, {\n        componentName: \"DatePicker\",\n        defaultLocale: enUS\n      }, function (contextLocale) {\n        var _classNames;\n\n        var locale = _extends(_extends({}, contextLocale), props.locale);\n\n        return /*#__PURE__*/React.createElement(RCPicker, _extends({\n          ref: innerRef,\n          placeholder: getPlaceholder(mergedPicker, locale, placeholder),\n          suffixIcon: suffixNode,\n          dropdownAlign: transPlacement2DropdownAlign(direction, placement),\n          clearIcon: /*#__PURE__*/React.createElement(CloseCircleFilled, null),\n          prevIcon: /*#__PURE__*/React.createElement(\"span\", {\n            className: \"\".concat(prefixCls, \"-prev-icon\")\n          }),\n          nextIcon: /*#__PURE__*/React.createElement(\"span\", {\n            className: \"\".concat(prefixCls, \"-next-icon\")\n          }),\n          superPrevIcon: /*#__PURE__*/React.createElement(\"span\", {\n            className: \"\".concat(prefixCls, \"-super-prev-icon\")\n          }),\n          superNextIcon: /*#__PURE__*/React.createElement(\"span\", {\n            className: \"\".concat(prefixCls, \"-super-next-icon\")\n          }),\n          allowClear: true,\n          transitionName: \"\".concat(rootPrefixCls, \"-slide-up\")\n        }, additionalProps, restProps, additionalOverrideProps, {\n          locale: locale.lang,\n          className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(mergedSize), mergedSize), _defineProperty(_classNames, \"\".concat(prefixCls, \"-borderless\"), !bordered), _classNames), getStatusClassNames(prefixCls, getMergedStatus(contextStatus, customStatus), hasFeedback), className),\n          prefixCls: prefixCls,\n          getPopupContainer: customizeGetPopupContainer || getPopupContainer,\n          generateConfig: generateConfig,\n          components: Components,\n          direction: direction,\n          disabled: mergedDisabled\n        }));\n      });\n    });\n\n    if (displayName) {\n      Picker.displayName = displayName;\n    }\n\n    return Picker;\n  }\n\n  var DatePicker = getPicker();\n  var WeekPicker = getPicker('week', 'WeekPicker');\n  var MonthPicker = getPicker('month', 'MonthPicker');\n  var YearPicker = getPicker('year', 'YearPicker');\n  var TimePicker = getPicker('time', 'TimePicker');\n  var QuarterPicker = getPicker('quarter', 'QuarterPicker');\n  return {\n    DatePicker: DatePicker,\n    WeekPicker: WeekPicker,\n    MonthPicker: MonthPicker,\n    YearPicker: YearPicker,\n    TimePicker: TimePicker,\n    QuarterPicker: QuarterPicker\n  };\n}","map":null,"metadata":{},"sourceType":"module"}