{"ast":null,"code":"import _classCallCheck from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport { observable, action } from 'mobx';\nimport { isDataExist } from 'Utils/dataTools';\nimport * as services from '../services/basic'; // import { omit } from 'lodash'\n\nvar DeviceDefine = function DeviceDefine() {\n  _classCallCheck(this, DeviceDefine);\n};\n\nvar DeviceDefineStore = new DeviceDefine();\nexport default DeviceDefineStore;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage-test\\src\\stores\\DeviceDefineStore.js"],"names":["observable","action","isDataExist","services","DeviceDefine","DeviceDefineStore"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,MAArB,QAAoC,MAApC;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAO,KAAKC,QAAZ,MAA0B,mBAA1B,C,CACA;;IAGMC,Y;;;;AA4ZN,IAAIC,iBAAiB,GAAG,IAAID,YAAJ,EAAxB;AACA,eAAeC,iBAAf","sourcesContent":["import { observable, action, } from 'mobx';\nimport { isDataExist } from 'Utils/dataTools';\nimport * as services from '../services/basic';\n// import { omit } from 'lodash'\nimport { message } from 'antd';\n\nclass DeviceDefine {\n  // @observable typeList = []\n  // @observable typePage = {}\n  // @observable current = '1'\n  // @observable stepList = [\n  //   { id: 1, title: \"类型管理\", status: 'process' },\n  //   { id: 2, title: \"型号管理\", status: 'wait' },\n  //   { id: 3, title: \"设备列表\", status: 'wait' },\n  // ]\n  // @observable status = 'add'\n  // @observable visible = false\n  // @observable codeVisible = false\n  // @observable devTypeList = []\n  // @observable currentMain = {}\n  // @observable fileList = []\n  // @observable selectModel = []\n  // @observable selectType = []\n  // @observable selectDevice = []\n  // @observable selectedRowKeys = []\n  // @observable isLoading = false\n  // @observable searchName = ''\n\n  // /* ------------设备定义------获取设备类型列表 */\n  // @action async getType(params = {}) {\n  //   this.isLoading = true;\n  //   try {\n  //     let data = {\n  //       pageIndex: 1, pageSize: 10,\n  //       ...params,\n  //     };\n  //     if (params) {\n  //       if (this.current === '2') {\n  //         data.modelName = this.searchName\n  //       } else {\n  //         data.typeName = this.searchName\n  //       }\n  //     }\n  //     let req = this.current === '1' ? 'getType' : 'getModel';\n  //     let res = await services.gets(req)(data);\n  //     this.isLoading = false;\n  //     if (isDataExist(res)) {\n  //       this.typeList = res.data.data.items;\n  //       this.typePage = res.data.data.page;\n  //     }\n\n  //   } catch (error) {\n  //     console.log(error)\n  //   }\n  // }\n  // @action async saveType(params) {\n\n  //   try {\n  //     let req = this.current === '1' ? 'saveType' : 'saveModel';\n  //     let res = await services.posts(req)(params)\n  //     if (isDataExist(res)) {\n  //       message.success('保存成功')\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  //   this.getType();\n  //   this.getSelectType();\n  //   // this.getSelectModel();\n  // }\n  // @action async delType(params, type) {\n  //   try {\n  //     let req = this.current === '1' ? type === 'batch' ? 'batchDeleteType' : 'deleteType' :\n  //       type === 'batch' ? 'deleteBatchModal' : 'deleteModal';\n  //     let res = await services.posts(req)(params)\n  //     if (isDataExist(res)) {\n  //       message.success('删除成功')\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  //   this.getType();\n  // }\n  // /* 删除文件类型 */\n  // @action async delFile(params) {\n  //   try {\n  //     let res = await services.posts('deleteFile')(params)\n  //     if (isDataExist(res)) {\n  //       message.success('删除成功')\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n  // /* 获取设备文件 */\n  // @action async getDeviceFileList(params) {\n  //   this.isLoading = true;\n  //   try {\n  //     let res = await services.gets('getDeviceFileList')(params)\n  //     this.isLoading = false;\n  //     if (isDataExist(res)) {\n  //       this.fileList = res.data.data;\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n  // @action async downloadFile(params) {\n  //   try {\n  //     let res = await services.gets('downloadFile')(params);\n  //     if (isDataExist(res)) {\n  //       message.success('下载成功！')\n  //     }\n  //   } catch (e) { }\n  // }\n  // /* 获取所有的设备类型 */\n  // @action async getSelectType(params) {\n  //   try {\n  //     let res = await services.gets('getSelectType')(params)\n  //     if (isDataExist(res)) {\n  //       this.selectType = res.data.data;\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n  // /* 获取设备型号 */\n  // @action async getSelectModel(params) {\n  //   this.isLoading = true;\n  //   try {\n  //     let res = await services.gets('getSelectModel')(params)\n  //     this.isLoading = false;\n  //     if (isDataExist(res)) {\n  //       this.selectModel = res.data.data;\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n  // /* 获取设备 */\n  // @action async getSelectDevice(params) {\n  //   console.log(params)\n  //   this.isLoading = true;\n  //   try {\n  //     let res = await services.gets('getSelectDevice')(params)\n  //     this.isLoading = false;\n  //     if (isDataExist(res)) {\n  //       this.selectDevice = res.data.data;\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n\n  // @action changeStep() {\n  //   this.stepList.map((item, index) => {\n  //     if (index === this.current) {\n  //       Object.assign(item, {\n  //         status: 'process'\n  //       })\n  //     } else {\n  //       Object.assign(item, {\n  //         status: 'wait'\n  //       })\n  //     }\n  //   })\n  // }\n\n\n  // /* --------------设备列表 */\n  // @observable devList = []\n  // @observable devPage = {}\n  // @observable codeInfo = {}\n  // @observable sortList = []\n  // @observable listVisible = false\n  // @observable listStatus = 'add'\n  // @observable isDevLoading = false\n  // @observable devCurrent = {}\n  // @observable devListSelectedRowKeys = []\n  // @observable queryType = 1\n  // @observable employeeList = []\n  // @observable searchCondition = {}\n  // @observable devStandList = []\n  // @observable devStandPage = []\n  // @observable devStandCols = []\n  // @observable qrcodeInfo = {\n  //   \"id\": 1,\n  //   \"backgroundUrl\": \"/img.png\",\n  //   \"codePosition\":1,\n  //   \"info\": [\n  //     {\n  //       \"key\": \"deviceName\",\n  //       \"title\": \"设备名称\",\n  //       \"sort\": 1,\n  //       \"id\": 1\n  //     },\n  //     {\n  //       \"key\": \"deviceName\",\n  //       \"title\": \"设备名称\",\n  //       \"sort\": 1,\n  //       \"id\": 1\n  //     },\n  //     {\n  //       \"key\": \"deviceName\",\n  //       \"title\": \"设备名称\",\n  //       \"sort\": 1,\n  //       \"id\": 1\n  //     },\n  //     {\n  //       \"key\": \"deviceName\",\n  //       \"title\": \"设备名称\",\n  //       \"sort\": 1,\n  //       \"id\": 1\n  //     }\n  //   ]\n  // }\n\n  // /* 查询设备台账 */\n  // @action async getDevStanding(params) {\n  //   this.isDevLoading = true\n  //   try {\n  //     let data = {\n  //       pageIndex: 1,\n  //       pageSize: 10,\n  //       queryType: this.queryType,\n  //       deviceType: '',\n  //       deviceName: '',\n  //       startTime: '', endTime: '', customerId: '',\n  //       ...this.searchCondition,\n  //       ...params\n  //     }\n  //     let res = await services.gets('getDevStanding')(data)\n  //     this.isDevLoading = false\n  //     if (isDataExist(res)) {\n  //       this.devStandList = res.data.data.items;\n  //       this.devStandPage = res.data.data.page;\n  //       this.devStandCols = res.data.dataExt;\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n\n  //   }\n  // }\n\n  // /* 查询设备列表 */\n  // @action async getDevList(params) {\n  //   this.isDevLoading = true\n  //   try {\n  //     let data = {\n  //       pageIndex: 1,\n  //       pageSize: 10,\n  //       queryType: this.queryType,\n  //       deviceType: '',\n  //       deviceName: '',\n  //       startTime: '', endTime: '', customerId: '',\n  //       ...this.searchCondition,\n  //       ...params\n  //     }\n  //     let res = await services.gets('getDevList')(data)\n  //     this.isDevLoading = false\n  //     if (isDataExist(res)) {\n  //       this.devList = res.data.data.items;\n  //       this.devPage = res.data.data.page;\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n\n  //   }\n  // }\n  // /* 铭牌框 */\n  // @action.bound async codeChange() {\n  //   this.codeVisible = !this.codeVisible\n  //   if (!this.codeVisible) {\n  //     this.codeInfo = {}\n  //   }\n  //   // console.log(this.codeVisible)\n  // }\n  // /* 获取铭牌设置*/\n  // @action async getSortList(params) {\n  //   try {\n  //     let res = await services.gets('getQrcode')(params);\n  //     if (isDataExist(res)) {\n  //       this.sortList = []\n  //       this.sortList = res.data.data;\n  //       // console.log(this.sortList, '获取排序列表')\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n  // /* 保存名牌设置 */\n  // @action async saveSortList(params) {\n  //   try {\n  //     let res = await services.posts('saveQrcode')(params);\n  //     if (isDataExist(res)) {\n  //       message.success('设置成功')\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n  // /* 获取设备列表详细信息 */\n  // @action async getDevInfo(params) {\n  //   try {\n  //     let res = await services.gets('getDevInfo')(params);\n  //     if (isDataExist(res)) {\n  //       this.devCurrent = res.data.data;\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n  // @action async getUsersByRoles(params) {\n  //   try {\n  //     let res = await services.gets('getUsersByRoles')(params);\n  //     if (isDataExist(res)) {\n  //       this.employeeList = res.data.data;\n  //     }\n  //   } catch (error) {\n  //     console.log(error)\n  //   }\n  // }\n  // @action async saveDevice(params) {\n  //   try {\n  //     let res = await services.posts('saveDevice')(params)\n  //     if (isDataExist(res)) {\n  //       message.success('保存成功！');\n  //     }\n  //   } catch (error) {\n\n  //   }\n  //   this.getDevList()\n  // }\n  // @action async deleteDevice(params) {\n  //   try {\n  //     let res = await services.posts('deleteDevice')(params)\n  //     if (isDataExist(res)) {\n  //       message.success('删除成功！');\n  //     }\n  //   } catch (error) {\n\n  //   }\n  //   this.getDevList()\n  // }\n\n  // @action async downloadModule() {\n  //   try {\n  //     let res = await services.gets('downloadModule')()\n  //     if (isDataExist(res)) {\n  //       message.success('下载成功')\n  //     }\n  //   } catch (error) {\n  //     console.log(error)\n  //   }\n  // }\n\n\n  // /* 修改value */\n  // @action changeValue(key, value) {\n  //   this[key] = value;\n  // }\n\n  // /* -------------设备配置 */\n  // @observable customerList = []\n  // @observable configVisible = false;\n  // @observable configStatus = 'add';\n\n  // @action async getCustomerList(params) {\n  //   try {\n  //     let res = await services.gets('getCustomerList')(params);\n  //     if (isDataExist(res)) {\n  //       this.customerList = res.data.data;\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n\n  // /* --------------设备日志 */\n  // @observable deviceLog = []\n  // @observable deviceLogPage = {}\n  // @observable pageIndex = 1\n  // @observable dailyDeviceId = ''\n  // @observable dailyTypeId = ''\n  // @observable dailyModelId = ''\n  // @observable isDaily = false\n  // @observable currentDaily = {}\n  // @observable logDetailList = []\n\n  // @action async getDeviceLog(params) {\n  //   this.pageIndex = params.pageIndex\n  //   try {\n  //     if (this.pageIndex === 1) {\n  //       this.deviceLog = []\n  //     }\n  //     let res = await services.gets('getDeviceLog')(params);\n  //     if (isDataExist(res)) {\n  //       let deviceLog = JSON.parse(JSON.stringify(this.deviceLog))\n  //       deviceLog = deviceLog.concat(res.data.data.items);\n  //       this.deviceLog = deviceLog\n  //       this.deviceLogPage = res.data.data.page\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n\n  //   }\n  // }\n  // @action async getDetailLog(params) {\n  //   try {\n  //     let res = await services.gets('getDetailLog')(params)\n  //     if (isDataExist(res)) {\n  //       this.logDetailList = res.data.data;\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n}\nlet DeviceDefineStore = new DeviceDefine();\nexport default DeviceDefineStore;"]},"metadata":{},"sourceType":"module"}