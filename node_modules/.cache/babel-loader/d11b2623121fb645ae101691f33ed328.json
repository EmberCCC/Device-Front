{"ast":null,"code":"import \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _temp;\n\nimport { observable, action } from 'mobx';\nimport { isDataExist } from 'Utils/dataTools';\nimport * as services from '../services/spareparts';\nvar Spareparts = (_dec = action.bound, _dec2 = action.bound, _dec3 = action.bound, _dec4 = action.bound, _dec5 = action.bound, _dec6 = action.bound, _dec7 = action.bound, _dec8 = action.bound, _dec9 = action.bound, _dec10 = action.bound, _dec11 = action.bound, _dec12 = action.bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function Spareparts() {\n    _classCallCheck(this, Spareparts);\n\n    _initializerDefineProperty(this, \"isLoading\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"modalTitle\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"tableData\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"inPutLogData\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"columnsType\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"PageInfo\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"id\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"formData\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"searchDate\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"modalVisible\", _descriptor10, this);\n\n    _initializerDefineProperty(this, \"modalType\", _descriptor11, this);\n\n    _initializerDefineProperty(this, \"typeName\", _descriptor12, this);\n\n    _initializerDefineProperty(this, \"spareName\", _descriptor13, this);\n\n    _initializerDefineProperty(this, \"typeList\", _descriptor14, this);\n\n    _initializerDefineProperty(this, \"devTypeList\", _descriptor15, this);\n\n    _initializerDefineProperty(this, \"oddList\", _descriptor16, this);\n\n    _initializerDefineProperty(this, \"spareList\", _descriptor17, this);\n\n    _initializerDefineProperty(this, \"workList\", _descriptor18, this);\n\n    _initializerDefineProperty(this, \"modalChange\", _descriptor19, this);\n\n    _initializerDefineProperty(this, \"clearData\", _descriptor20, this);\n  }\n\n  _createClass(Spareparts, [{\n    key: \"getData\",\n    //获取表格数据\n    value: function () {\n      var _getData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(type, params) {\n        var url, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.isLoading = true; //1.备件类型，2.备件列表，3.库存预警\n\n                url = type === 1 ? services.requestUrl.getSpareType : type === 2 ? services.requestUrl.getSpare : services.requestUrl.warnList;\n                _context.prev = 2;\n                _context.next = 5;\n                return services.getRequest(url, params);\n\n              case 5:\n                res = _context.sent;\n                this.isLoading = false;\n\n                if (isDataExist(res)) {\n                  this.tableData = res.data.data.items;\n                  this.PageInfo = res.data.data.page;\n                }\n\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 10]]);\n      }));\n\n      function getData(_x, _x2) {\n        return _getData.apply(this, arguments);\n      }\n\n      return getData;\n    }() //获取库存数据\n\n  }, {\n    key: \"getLogData\",\n    value: function () {\n      var _getLogData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.isLoading = true;\n                _context2.prev = 1;\n                _context2.next = 4;\n                return services.getRequest(services.requestUrl.spareRecordList, params);\n\n              case 4:\n                res = _context2.sent;\n                this.isLoading = false;\n\n                if (isDataExist(res)) {\n                  this.inPutLogData = res.data.data.items;\n                  this.PageInfo = res.data.data.page;\n                }\n\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.log(_context2.t0);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 9]]);\n      }));\n\n      function getLogData(_x3) {\n        return _getLogData.apply(this, arguments);\n      }\n\n      return getLogData;\n    }() //获取工单信息\n\n  }, {\n    key: \"getworkData\",\n    value: function () {\n      var _getworkData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.isLoading = true;\n                _context3.prev = 1;\n                _context3.next = 4;\n                return services.getRequest(services.requestUrl.getByType, params);\n\n              case 4:\n                res = _context3.sent;\n                this.isLoading = false;\n\n                if (isDataExist(res)) {\n                  this.workList = res.data.data;\n                }\n\n                _context3.next = 12;\n                break;\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](1);\n                console.log(_context3.t0);\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[1, 9]]);\n      }));\n\n      function getworkData(_x4) {\n        return _getworkData.apply(this, arguments);\n      }\n\n      return getworkData;\n    }() //新增备件类型\n\n  }, {\n    key: \"addNewType\",\n    value: function () {\n      var _addNewType = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.isLoading = true;\n                _context4.prev = 1;\n                _context4.next = 4;\n                return services.putRequest(services.requestUrl.saveSpareType, params);\n\n              case 4:\n                res = _context4.sent;\n                this.isLoading = false;\n\n                if (!isDataExist(res)) {\n                  _context4.next = 8;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", res);\n\n              case 8:\n                _context4.next = 13;\n                break;\n\n              case 10:\n                _context4.prev = 10;\n                _context4.t0 = _context4[\"catch\"](1);\n                console.log(_context4.t0);\n\n              case 13:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[1, 10]]);\n      }));\n\n      function addNewType(_x5) {\n        return _addNewType.apply(this, arguments);\n      }\n\n      return addNewType;\n    }() //新增备件\n\n  }, {\n    key: \"addNewSpa\",\n    value: function () {\n      var _addNewSpa = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.isLoading = true;\n                _context5.prev = 1;\n                _context5.next = 4;\n                return services.putRequest(services.requestUrl.saveSpare, params);\n\n              case 4:\n                res = _context5.sent;\n                this.isLoading = false;\n\n                if (!isDataExist(res)) {\n                  _context5.next = 8;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", res);\n\n              case 8:\n                _context5.next = 13;\n                break;\n\n              case 10:\n                _context5.prev = 10;\n                _context5.t0 = _context5[\"catch\"](1);\n                console.log(_context5.t0);\n\n              case 13:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[1, 10]]);\n      }));\n\n      function addNewSpa(_x6) {\n        return _addNewSpa.apply(this, arguments);\n      }\n\n      return addNewSpa;\n    }() //删除备件类型\n\n  }, {\n    key: \"deleteType\",\n    value: function () {\n      var _deleteType = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                this.isLoading = true;\n                _context6.prev = 1;\n                _context6.next = 4;\n                return services.putRequest(services.requestUrl.deleteSpareType, params);\n\n              case 4:\n                res = _context6.sent;\n                this.isLoading = false;\n\n                if (!isDataExist(res)) {\n                  _context6.next = 8;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", res);\n\n              case 8:\n                _context6.next = 13;\n                break;\n\n              case 10:\n                _context6.prev = 10;\n                _context6.t0 = _context6[\"catch\"](1);\n                console.log(_context6.t0);\n\n              case 13:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[1, 10]]);\n      }));\n\n      function deleteType(_x7) {\n        return _deleteType.apply(this, arguments);\n      }\n\n      return deleteType;\n    }() //删除备件\n\n  }, {\n    key: \"deleteSpa\",\n    value: function () {\n      var _deleteSpa = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                this.isLoading = true;\n                _context7.prev = 1;\n                _context7.next = 4;\n                return services.putRequest(services.requestUrl.deleteSpare, params);\n\n              case 4:\n                res = _context7.sent;\n                this.isLoading = false;\n\n                if (!isDataExist(res)) {\n                  _context7.next = 8;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", res);\n\n              case 8:\n                _context7.next = 13;\n                break;\n\n              case 10:\n                _context7.prev = 10;\n                _context7.t0 = _context7[\"catch\"](1);\n                console.log(_context7.t0);\n\n              case 13:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[1, 10]]);\n      }));\n\n      function deleteSpa(_x8) {\n        return _deleteSpa.apply(this, arguments);\n      }\n\n      return deleteSpa;\n    }() // 备件导出\n\n  }, {\n    key: \"export\",\n    value: function () {\n      var _export2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8(params) {\n        var data, res;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                this.isLoading = true;\n                data = {\n                  ids: params.ids.join(',')\n                };\n                _context8.prev = 2;\n                _context8.next = 5;\n                return services.getRequest(services.requestUrl.export, data);\n\n              case 5:\n                res = _context8.sent;\n                this.isLoading = false;\n\n                if (isDataExist(res)) {\n                  _message.success('导出成功');\n                }\n\n                _context8.next = 13;\n                break;\n\n              case 10:\n                _context8.prev = 10;\n                _context8.t0 = _context8[\"catch\"](2);\n                console.log(_context8.t0);\n\n              case 13:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[2, 10]]);\n      }));\n\n      function _export(_x9) {\n        return _export2.apply(this, arguments);\n      }\n\n      return _export;\n    }() //备件出入库\n\n  }, {\n    key: \"inPutStorage\",\n    value: function () {\n      var _inPutStorage = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                this.isLoading = true;\n                _context9.prev = 1;\n                _context9.next = 4;\n                return services.putRequest(services.requestUrl.operationSpare, params);\n\n              case 4:\n                res = _context9.sent;\n                this.isLoading = false;\n\n                if (!isDataExist(res)) {\n                  _context9.next = 8;\n                  break;\n                }\n\n                return _context9.abrupt(\"return\", res);\n\n              case 8:\n                _context9.next = 13;\n                break;\n\n              case 10:\n                _context9.prev = 10;\n                _context9.t0 = _context9[\"catch\"](1);\n                console.log(_context9.t0);\n\n              case 13:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this, [[1, 10]]);\n      }));\n\n      function inPutStorage(_x10) {\n        return _inPutStorage.apply(this, arguments);\n      }\n\n      return inPutStorage;\n    }() //所有备件类型\n\n  }, {\n    key: \"getAllType\",\n    value: function () {\n      var _getAllType = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee10(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                this.isLoading = true;\n                _context10.prev = 1;\n                _context10.next = 4;\n                return services.getRequest(services.requestUrl.allSpareType, params);\n\n              case 4:\n                res = _context10.sent;\n                this.isLoading = false;\n\n                if (isDataExist(res)) {\n                  this.typeList = res.data.data;\n                }\n\n                _context10.next = 12;\n                break;\n\n              case 9:\n                _context10.prev = 9;\n                _context10.t0 = _context10[\"catch\"](1);\n                console.log(_context10.t0);\n\n              case 12:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this, [[1, 9]]);\n      }));\n\n      function getAllType(_x11) {\n        return _getAllType.apply(this, arguments);\n      }\n\n      return getAllType;\n    }() //所有备件\n\n  }, {\n    key: \"getAllSpare\",\n    value: function () {\n      var _getAllSpare = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee11(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                this.isLoading = true;\n                _context11.prev = 1;\n                _context11.next = 4;\n                return services.getRequest(services.requestUrl.spareAll, params);\n\n              case 4:\n                res = _context11.sent;\n                this.isLoading = false;\n\n                if (isDataExist(res)) {\n                  this.spareList = res.data.data;\n                }\n\n                _context11.next = 12;\n                break;\n\n              case 9:\n                _context11.prev = 9;\n                _context11.t0 = _context11[\"catch\"](1);\n                console.log(_context11.t0);\n\n              case 12:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this, [[1, 9]]);\n      }));\n\n      function getAllSpare(_x12) {\n        return _getAllSpare.apply(this, arguments);\n      }\n\n      return getAllSpare;\n    }() //所有设备类型\n\n  }, {\n    key: \"getAllDeviceType\",\n    value: function () {\n      var _getAllDeviceType = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee12(params) {\n        var _this = this;\n\n        var res;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                this.isLoading = true;\n                _context12.prev = 1;\n                _context12.next = 4;\n                return services.getRequest(services.requestUrl.getDeviceType, params);\n\n              case 4:\n                res = _context12.sent;\n                this.isLoading = false;\n\n                if (isDataExist(res)) {\n                  this.devTypeList = [];\n                  res.data.data.map(function (item) {\n                    _this.devTypeList.push({\n                      label: item.modelName,\n                      value: item.id.toString()\n                    });\n                  });\n                }\n\n                _context12.next = 12;\n                break;\n\n              case 9:\n                _context12.prev = 9;\n                _context12.t0 = _context12[\"catch\"](1);\n                console.log(_context12.t0);\n\n              case 12:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this, [[1, 9]]);\n      }));\n\n      function getAllDeviceType(_x13) {\n        return _getAllDeviceType.apply(this, arguments);\n      }\n\n      return getAllDeviceType;\n    }() //所有工单\n\n  }, {\n    key: \"getAllOdd\",\n    value: function () {\n      var _getAllOdd = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee13(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                this.isLoading = true;\n                _context13.prev = 1;\n                _context13.next = 4;\n                return services.getRequest(services.requestUrl.getAllOdd, params);\n\n              case 4:\n                res = _context13.sent;\n                this.isLoading = false;\n\n                if (isDataExist(res)) {\n                  this.oddList = res.data.data;\n                }\n\n                _context13.next = 12;\n                break;\n\n              case 9:\n                _context13.prev = 9;\n                _context13.t0 = _context13[\"catch\"](1);\n                console.log(_context13.t0);\n\n              case 12:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this, [[1, 9]]);\n      }));\n\n      function getAllOdd(_x14) {\n        return _getAllOdd.apply(this, arguments);\n      }\n\n      return getAllOdd;\n    }() //打开/关闭模态框\n\n  }]);\n\n  return Spareparts;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"isLoading\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"modalTitle\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 1;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"tableData\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"inPutLogData\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"columnsType\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '1';\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"PageInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"id\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return \"\";\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"formData\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"searchDate\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"modalVisible\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"modalType\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 0;\n  }\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"typeName\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, \"spareName\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return undefined;\n  }\n}), _descriptor14 = _applyDecoratedDescriptor(_class.prototype, \"typeList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor15 = _applyDecoratedDescriptor(_class.prototype, \"devTypeList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor16 = _applyDecoratedDescriptor(_class.prototype, \"oddList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor17 = _applyDecoratedDescriptor(_class.prototype, \"spareList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor18 = _applyDecoratedDescriptor(_class.prototype, \"workList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"getData\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"getData\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getLogData\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"getLogData\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getworkData\", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, \"getworkData\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"addNewType\", [_dec4], Object.getOwnPropertyDescriptor(_class.prototype, \"addNewType\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"addNewSpa\", [_dec5], Object.getOwnPropertyDescriptor(_class.prototype, \"addNewSpa\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"deleteType\", [_dec6], Object.getOwnPropertyDescriptor(_class.prototype, \"deleteType\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"deleteSpa\", [_dec7], Object.getOwnPropertyDescriptor(_class.prototype, \"deleteSpa\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"export\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"export\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"inPutStorage\", [_dec8], Object.getOwnPropertyDescriptor(_class.prototype, \"inPutStorage\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getAllType\", [_dec9], Object.getOwnPropertyDescriptor(_class.prototype, \"getAllType\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getAllSpare\", [_dec10], Object.getOwnPropertyDescriptor(_class.prototype, \"getAllSpare\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getAllDeviceType\", [_dec11], Object.getOwnPropertyDescriptor(_class.prototype, \"getAllDeviceType\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getAllOdd\", [_dec12], Object.getOwnPropertyDescriptor(_class.prototype, \"getAllOdd\"), _class.prototype), _descriptor19 = _applyDecoratedDescriptor(_class.prototype, \"modalChange\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this2 = this;\n\n    return function (type, record) {\n      if (type) {\n        _this2.formData = record;\n      } else {\n        _this2.formData = {};\n      }\n\n      _this2.modalType = type;\n      _this2.modalVisible = !_this2.modalVisible;\n    };\n  }\n}), _descriptor20 = _applyDecoratedDescriptor(_class.prototype, \"clearData\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this3 = this;\n\n    return function () {\n      _this3.isLoading = false;\n      _this3.modalTitle = 1;\n      _this3.tableData = [];\n      _this3.inPutLogData = [];\n      _this3.columnsType = '1';\n      _this3.PageInfo = {\n        pageIndex: 1,\n        pageSize: 10\n      };\n      _this3.formData = {};\n      _this3.searchDate = [];\n      _this3.modalVisible = false;\n      _this3.typeName = '';\n      _this3.spareName = undefined;\n      _this3.typeList = [];\n      _this3.devTypeList = [];\n      _this3.oddList = [];\n      _this3.workList = [];\n    };\n  }\n})), _class));\nvar SparepartsStore = new Spareparts();\nexport default SparepartsStore;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage\\src\\stores\\SparepartsStore.js"],"names":["observable","action","isDataExist","services","Spareparts","bound","type","params","isLoading","url","requestUrl","getSpareType","getSpare","warnList","getRequest","res","tableData","data","items","PageInfo","page","console","log","spareRecordList","inPutLogData","getByType","workList","putRequest","saveSpareType","saveSpare","deleteSpareType","deleteSpare","ids","join","export","success","operationSpare","allSpareType","typeList","spareAll","spareList","getDeviceType","devTypeList","map","item","push","label","modelName","value","id","toString","getAllOdd","oddList","undefined","record","formData","modalType","modalVisible","modalTitle","columnsType","pageIndex","pageSize","searchDate","typeName","spareName","SparepartsStore"],"mappings":";;;;;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,QAAmC,MAAnC;AACA,SAASC,WAAT,QAA4B,iBAA5B;AAEA,OAAO,KAAKC,QAAZ,MAA0B,wBAA1B;IAEMC,U,WAqBDH,MAAM,CAACI,K,UAgBPJ,MAAM,CAACI,K,UAcPJ,MAAM,CAACI,K,UAaPJ,MAAM,CAACI,K,UAaPJ,MAAM,CAACI,K,UAaPJ,MAAM,CAACI,K,UAaPJ,MAAM,CAACI,K,UA6BPJ,MAAM,CAACI,K,UAaPJ,MAAM,CAACI,K,WAcPJ,MAAM,CAACI,K,WAcPJ,MAAM,CAACI,K,WAgBPJ,MAAM,CAACI,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAzKR;;;;gDAC4BC,I,EAAMC,M;;;;;;AAC9B,qBAAKC,SAAL,GAAiB,IAAjB,C,CACA;;AACMC,gBAAAA,G,GAAMH,IAAI,KAAK,CAAT,GAAaH,QAAQ,CAACO,UAAT,CAAoBC,YAAjC,GAAgDL,IAAI,KAAK,CAAT,GAAaH,QAAQ,CAACO,UAAT,CAAoBE,QAAjC,GAA4CT,QAAQ,CAACO,UAAT,CAAoBG,Q;;;uBAExGV,QAAQ,CAACW,UAAT,CAAoBL,GAApB,EAAyBF,MAAzB,C;;;AAAZQ,gBAAAA,G;AACJ,qBAAKP,SAAL,GAAiB,KAAjB;;AACA,oBAAIN,WAAW,CAACa,GAAD,CAAf,EAAsB;AAClB,uBAAKC,SAAL,GAAiBD,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcC,KAA/B;AACA,uBAAKC,QAAL,GAAgBJ,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcG,IAA9B;AACH;;;;;;;;AAEDC,gBAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;;;;;QAGR;;;;;;;iDAC+Bf,M;;;;;;AAC3B,qBAAKC,SAAL,GAAiB,IAAjB;;;uBAEoBL,QAAQ,CAACW,UAAT,CAAoBX,QAAQ,CAACO,UAAT,CAAoBa,eAAxC,EAAyDhB,MAAzD,C;;;AAAZQ,gBAAAA,G;AACJ,qBAAKP,SAAL,GAAiB,KAAjB;;AACA,oBAAIN,WAAW,CAACa,GAAD,CAAf,EAAsB;AAClB,uBAAKS,YAAL,GAAoBT,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcC,KAAlC;AACA,uBAAKC,QAAL,GAAgBJ,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcG,IAA9B;AACH;;;;;;;;AAEDC,gBAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;;;;;QAGR;;;;;;;iDACgCf,M;;;;;;AAC5B,qBAAKC,SAAL,GAAiB,IAAjB;;;uBAEoBL,QAAQ,CAACW,UAAT,CAAoBX,QAAQ,CAACO,UAAT,CAAoBe,SAAxC,EAAmDlB,MAAnD,C;;;AAAZQ,gBAAAA,G;AACJ,qBAAKP,SAAL,GAAiB,KAAjB;;AACA,oBAAIN,WAAW,CAACa,GAAD,CAAf,EAAsB;AAClB,uBAAKW,QAAL,GAAgBX,GAAG,CAACE,IAAJ,CAASA,IAAzB;AACH;;;;;;;;AAEDI,gBAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;;;;;QAGR;;;;;;;iDAC+Bf,M;;;;;;AAC3B,qBAAKC,SAAL,GAAiB,IAAjB;;;uBAEoBL,QAAQ,CAACwB,UAAT,CAAoBxB,QAAQ,CAACO,UAAT,CAAoBkB,aAAxC,EAAuDrB,MAAvD,C;;;AAAZQ,gBAAAA,G;AACJ,qBAAKP,SAAL,GAAiB,KAAjB;;qBACIN,WAAW,CAACa,GAAD,C;;;;;kDACJA,G;;;;;;;;;AAGXM,gBAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;;;;;QAGR;;;;;;;iDAC8Bf,M;;;;;;AAC1B,qBAAKC,SAAL,GAAiB,IAAjB;;;uBAEoBL,QAAQ,CAACwB,UAAT,CAAoBxB,QAAQ,CAACO,UAAT,CAAoBmB,SAAxC,EAAmDtB,MAAnD,C;;;AAAZQ,gBAAAA,G;AACJ,qBAAKP,SAAL,GAAiB,KAAjB;;qBACIN,WAAW,CAACa,GAAD,C;;;;;kDACJA,G;;;;;;;;;AAGXM,gBAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;;;;;QAGR;;;;;;;iDAC+Bf,M;;;;;;AAC3B,qBAAKC,SAAL,GAAiB,IAAjB;;;uBAEoBL,QAAQ,CAACwB,UAAT,CAAoBxB,QAAQ,CAACO,UAAT,CAAoBoB,eAAxC,EAAyDvB,MAAzD,C;;;AAAZQ,gBAAAA,G;AACJ,qBAAKP,SAAL,GAAiB,KAAjB;;qBACIN,WAAW,CAACa,GAAD,C;;;;;kDACJA,G;;;;;;;;;AAGXM,gBAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;;;;;QAGR;;;;;;;iDAC8Bf,M;;;;;;AAC1B,qBAAKC,SAAL,GAAiB,IAAjB;;;uBAEoBL,QAAQ,CAACwB,UAAT,CAAoBxB,QAAQ,CAACO,UAAT,CAAoBqB,WAAxC,EAAqDxB,MAArD,C;;;AAAZQ,gBAAAA,G;AACJ,qBAAKP,SAAL,GAAiB,KAAjB;;qBACIN,WAAW,CAACa,GAAD,C;;;;;kDACJA,G;;;;;;;;;AAGXM,gBAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;;;;;QAGR;;;;;;;iDACqBf,M;;;;;;AACjB,qBAAKC,SAAL,GAAiB,IAAjB;AACIS,gBAAAA,I,GAAO;AACPe,kBAAAA,GAAG,EAACzB,MAAM,CAACyB,GAAP,CAAWC,IAAX,CAAgB,GAAhB;AADG,iB;;;uBAIS9B,QAAQ,CAACW,UAAT,CAAoBX,QAAQ,CAACO,UAAT,CAAoBwB,MAAxC,EAAgDjB,IAAhD,C;;;AAAZF,gBAAAA,G;AACJ,qBAAKP,SAAL,GAAiB,KAAjB;;AACA,oBAAIN,WAAW,CAACa,GAAD,CAAf,EAAsB;AAClB,2BAAQoB,OAAR,CAAgB,MAAhB;AACH;;;;;;;;AAEDd,gBAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;;;;;QAGR;;;;;;;iDACiCf,M;;;;;;AAC7B,qBAAKC,SAAL,GAAiB,IAAjB;;;uBAEoBL,QAAQ,CAACwB,UAAT,CAAoBxB,QAAQ,CAACO,UAAT,CAAoB0B,cAAxC,EAAwD7B,MAAxD,C;;;AAAZQ,gBAAAA,G;AACJ,qBAAKP,SAAL,GAAiB,KAAjB;;qBACIN,WAAW,CAACa,GAAD,C;;;;;kDACJA,G;;;;;;;;;AAGXM,gBAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;;;;;QAGR;;;;;;;kDAC+Bf,M;;;;;;AAC3B,qBAAKC,SAAL,GAAiB,IAAjB;;;uBAEoBL,QAAQ,CAACW,UAAT,CAAoBX,QAAQ,CAACO,UAAT,CAAoB2B,YAAxC,EAAsD9B,MAAtD,C;;;AAAZQ,gBAAAA,G;AACJ,qBAAKP,SAAL,GAAiB,KAAjB;;AACA,oBAAIN,WAAW,CAACa,GAAD,CAAf,EAAsB;AAClB,uBAAKuB,QAAL,GAAgBvB,GAAG,CAACE,IAAJ,CAASA,IAAzB;AAEH;;;;;;;;AAEDI,gBAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;;;;;QAGR;;;;;;;kDACgCf,M;;;;;;AAC5B,qBAAKC,SAAL,GAAiB,IAAjB;;;uBAEoBL,QAAQ,CAACW,UAAT,CAAoBX,QAAQ,CAACO,UAAT,CAAoB6B,QAAxC,EAAkDhC,MAAlD,C;;;AAAZQ,gBAAAA,G;AACJ,qBAAKP,SAAL,GAAiB,KAAjB;;AACA,oBAAIN,WAAW,CAACa,GAAD,CAAf,EAAsB;AAClB,uBAAKyB,SAAL,GAAiBzB,GAAG,CAACE,IAAJ,CAASA,IAA1B;AAEH;;;;;;;;AAEDI,gBAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;;;;;QAGR;;;;;;;kDACqCf,M;;;;;;;;AACjC,qBAAKC,SAAL,GAAiB,IAAjB;;;uBAEoBL,QAAQ,CAACW,UAAT,CAAoBX,QAAQ,CAACO,UAAT,CAAoB+B,aAAxC,EAAuDlC,MAAvD,C;;;AAAZQ,gBAAAA,G;AACJ,qBAAKP,SAAL,GAAiB,KAAjB;;AACA,oBAAIN,WAAW,CAACa,GAAD,CAAf,EAAsB;AAClB,uBAAK2B,WAAL,GAAmB,EAAnB;AACA3B,kBAAAA,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAc0B,GAAd,CAAkB,UAAAC,IAAI,EAAI;AACtB,oBAAA,KAAI,CAACF,WAAL,CAAiBG,IAAjB,CAAsB;AAAEC,sBAAAA,KAAK,EAAEF,IAAI,CAACG,SAAd;AAAyBC,sBAAAA,KAAK,EAAEJ,IAAI,CAACK,EAAL,CAAQC,QAAR;AAAhC,qBAAtB;AACH,mBAFD;AAGH;;;;;;;;AAED7B,gBAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;;;;;QAGR;;;;;;;kDAC8Bf,M;;;;;;AAC1B,qBAAKC,SAAL,GAAiB,IAAjB;;;uBAEoBL,QAAQ,CAACW,UAAT,CAAoBX,QAAQ,CAACO,UAAT,CAAoByC,SAAxC,EAAmD5C,MAAnD,C;;;AAAZQ,gBAAAA,G;AACJ,qBAAKP,SAAL,GAAiB,KAAjB;;AACA,oBAAIN,WAAW,CAACa,GAAD,CAAf,EAAsB;AAClB,uBAAKqC,OAAL,GAAerC,GAAG,CAACE,IAAJ,CAASA,IAAxB;AACH;;;;;;;;AAEDI,gBAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;;;;;QAIR;;;;;sFAzMCtB,U;;;;;WAAuB,K;;8EACvBA,U;;;;;WAAwB,C;;6EACxBA,U;;;;;WAAuB,E;;gFACvBA,U;;;;;WAA0B,E;;+EAC1BA,U;;;;;WAAyB,G;;4EACzBA,U;;;;;WAAsB,E;;sEACtBA,U;;;;;WAAgB,E;;4EAChBA,U;;;;;WAAsB,E;;8EACtBA,U;;;;;WAAwB,E;;iFACxBA,U;;;;;WAA0B,K;;8EAC1BA,U;;;;;WAAuB,C;;6EACvBA,U;;;;;WAAsB,E;;8EACtBA,U;;;;;WAAuBqD,S;;6EACvBrD,U;;;;;WAAsB,E;;gFACtBA,U;;;;;WAAyB,E;;4EACzBA,U;;;;;WAAqB,E;;8EACrBA,U;;;;;WAAuB,E;;6EACvBA,U;;;;;WAAsB,E;;mlCAkGtBC,M,q6BAuFAA,M;;;;;;;WAAqB,UAACK,IAAD,EAAOgD,MAAP,EAAkB;AACpC,UAAIhD,IAAJ,EAAU;AACN,QAAA,MAAI,CAACiD,QAAL,GAAgBD,MAAhB;AACH,OAFD,MAEO;AACH,QAAA,MAAI,CAACC,QAAL,GAAgB,EAAhB;AACH;;AACD,MAAA,MAAI,CAACC,SAAL,GAAiBlD,IAAjB;AACA,MAAA,MAAI,CAACmD,YAAL,GAAoB,CAAC,MAAI,CAACA,YAA1B;AACH,K;;8EAEAxD,M;;;;;;;WAAmB,YAAM;AACtB,MAAA,MAAI,CAACO,SAAL,GAAiB,KAAjB;AACA,MAAA,MAAI,CAACkD,UAAL,GAAkB,CAAlB;AACA,MAAA,MAAI,CAAC1C,SAAL,GAAiB,EAAjB;AACA,MAAA,MAAI,CAACQ,YAAL,GAAoB,EAApB;AACA,MAAA,MAAI,CAACmC,WAAL,GAAmB,GAAnB;AACA,MAAA,MAAI,CAACxC,QAAL,GAAgB;AAAEyC,QAAAA,SAAS,EAAE,CAAb;AAAgBC,QAAAA,QAAQ,EAAE;AAA1B,OAAhB;AACA,MAAA,MAAI,CAACN,QAAL,GAAgB,EAAhB;AACA,MAAA,MAAI,CAACO,UAAL,GAAkB,EAAlB;AACA,MAAA,MAAI,CAACL,YAAL,GAAoB,KAApB;AACA,MAAA,MAAI,CAACM,QAAL,GAAgB,EAAhB;AACA,MAAA,MAAI,CAACC,SAAL,GAAiBX,SAAjB;AACA,MAAA,MAAI,CAACf,QAAL,GAAgB,EAAhB;AACA,MAAA,MAAI,CAACI,WAAL,GAAmB,EAAnB;AACA,MAAA,MAAI,CAACU,OAAL,GAAe,EAAf;AACA,MAAA,MAAI,CAAC1B,QAAL,GAAgB,EAAhB;AACH,K;;;AAGL,IAAIuC,eAAe,GAAG,IAAI7D,UAAJ,EAAtB;AACA,eAAe6D,eAAf","sourcesContent":["import { observable, action } from 'mobx';\nimport { isDataExist } from 'Utils/dataTools';\nimport { message } from 'antd';\nimport * as services from '../services/spareparts';\n\nclass Spareparts {\n    @observable isLoading = false;\n    @observable modalTitle = 1;\n    @observable tableData = [];\n    @observable inPutLogData = [];\n    @observable columnsType = '1';\n    @observable PageInfo = {};\n    @observable id = \"\";\n    @observable formData = {};\n    @observable searchDate = [];//搜索时间\n    @observable modalVisible = false;\n    @observable modalType = 0;\n    @observable typeName = '';\n    @observable spareName = undefined;\n    @observable typeList = [];\n    @observable devTypeList = [];\n    @observable oddList = [];\n    @observable spareList = [];\n    @observable workList = [];\n\n    //获取表格数据\n    @action.bound async getData(type, params) {\n        this.isLoading = true\n        //1.备件类型，2.备件列表，3.库存预警\n        const url = type === 1 ? services.requestUrl.getSpareType : type === 2 ? services.requestUrl.getSpare : services.requestUrl.warnList\n        try {\n            let res = await services.getRequest(url, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.tableData = res.data.data.items\n                this.PageInfo = res.data.data.page\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //获取库存数据\n    @action.bound async getLogData(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.spareRecordList, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.inPutLogData = res.data.data.items\n                this.PageInfo = res.data.data.page\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //获取工单信息\n    @action.bound async getworkData(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.getByType, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.workList = res.data.data\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //新增备件类型\n    @action.bound async addNewType(params) {\n        this.isLoading = true\n        try {\n            let res = await services.putRequest(services.requestUrl.saveSpareType, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //新增备件\n    @action.bound async addNewSpa(params) {\n        this.isLoading = true\n        try {\n            let res = await services.putRequest(services.requestUrl.saveSpare, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //删除备件类型\n    @action.bound async deleteType(params) {\n        this.isLoading = true\n        try {\n            let res = await services.putRequest(services.requestUrl.deleteSpareType, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //删除备件\n    @action.bound async deleteSpa(params) {\n        this.isLoading = true\n        try {\n            let res = await services.putRequest(services.requestUrl.deleteSpare, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    // 备件导出\n    @action async export(params){\n        this.isLoading = true\n        let data = {\n            ids:params.ids.join(',')\n        }\n        try {\n            let res = await services.getRequest(services.requestUrl.export, data)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                message.success('导出成功')\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //备件出入库\n    @action.bound async inPutStorage(params) {\n        this.isLoading = true\n        try {\n            let res = await services.putRequest(services.requestUrl.operationSpare, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                return res\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //所有备件类型\n    @action.bound async getAllType(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.allSpareType, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.typeList = res.data.data\n\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //所有备件\n    @action.bound async getAllSpare(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.spareAll, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.spareList = res.data.data\n\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //所有设备类型\n    @action.bound async getAllDeviceType(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.getDeviceType, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.devTypeList = []\n                res.data.data.map(item => {\n                    this.devTypeList.push({ label: item.modelName, value: item.id.toString() })\n                })\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //所有工单\n    @action.bound async getAllOdd(params) {\n        this.isLoading = true\n        try {\n            let res = await services.getRequest(services.requestUrl.getAllOdd, params)\n            this.isLoading = false\n            if (isDataExist(res)) {\n                this.oddList = res.data.data\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    //打开/关闭模态框\n    @action modalChange = (type, record) => {\n        if (type) {\n            this.formData = record\n        } else {\n            this.formData = {}\n        }\n        this.modalType = type\n        this.modalVisible = !this.modalVisible\n    }\n    //打开/关闭模态框\n    @action clearData = () => {\n        this.isLoading = false;\n        this.modalTitle = 1;\n        this.tableData = [];\n        this.inPutLogData = [];\n        this.columnsType = '1';\n        this.PageInfo = { pageIndex: 1, pageSize: 10 };\n        this.formData = {};\n        this.searchDate = [];\n        this.modalVisible = false;\n        this.typeName = '';\n        this.spareName = undefined;\n        this.typeList = [];\n        this.devTypeList = [];\n        this.oddList = [];\n        this.workList = [];\n    }\n}\n\nlet SparepartsStore = new Spareparts();\nexport default SparepartsStore;"]},"metadata":{},"sourceType":"module"}