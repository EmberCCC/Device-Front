{"ast":null,"code":"import _toConsumableArray from \"/Users/shoen/Desktop/\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF/bl-device-manage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/shoen/Desktop/\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF/bl-device-manage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shoen/Desktop/\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF/bl-device-manage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/shoen/Desktop/\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF/bl-device-manage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/shoen/Desktop/\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF/bl-device-manage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shoen/Desktop/\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF/bl-device-manage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/shoen/Desktop/\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF/bl-device-manage/src/layouts/ZDeviceMonitor/GroupColumn.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { Chart, Geom, Axis, Tooltip, Legend } from \"bizcharts\";\nimport DataSet from \"@antv/data-set\";\n\nvar Groupedcolumn = /*#__PURE__*/function (_React$Component) {\n  _inherits(Groupedcolumn, _React$Component);\n\n  var _super = _createSuper(Groupedcolumn);\n\n  function Groupedcolumn() {\n    var _this;\n\n    _classCallCheck(this, Groupedcolumn);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      dataValue: []\n    };\n\n    _this.getDay = function (day) {\n      var today = new Date();\n      var targetday_milliseconds = today.getTime() + 1000 * 60 * 60 * 24 * day;\n      today.setTime(targetday_milliseconds); //注意，这行是关键代码\n\n      var tYear = today.getFullYear();\n      var tMonth = today.getMonth();\n      var tDate = today.getDate();\n\n      var doHandleMonth = function doHandleMonth(month) {\n        var m = month;\n\n        if (month.toString().length == 1) {\n          m = '0' + month;\n        }\n\n        return m;\n      };\n\n      tMonth = doHandleMonth(tMonth + 1);\n      tDate = doHandleMonth(tDate);\n      return (tYear + '' + tMonth + '' + tDate).toString();\n    };\n\n    return _this;\n  }\n\n  _createClass(Groupedcolumn, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var dataValue = [];\n\n      for (var key = -1; key > -6; key--) {\n        dataValue.push(\"\".concat(this.getDay(key)));\n      }\n\n      dataValue = dataValue.reverse();\n      this.setState({\n        dataValue: dataValue\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = this.props.data;\n      var ds = new DataSet();\n      var dv = ds.createView().source(data); // `${this.state.dataValue[0]}`,`${this.state.dataValue[1]}`,`${this.state.dataValue[2]}`,`${this.state.dataValue[3]}`,`${this.state.dataValue[4]}`\n\n      dv.transform({\n        type: \"fold\",\n        fields: _toConsumableArray(this.state.dataValue),\n        // 展开字段集\n        key: \"月份\",\n        // key字段\n        value: \"月均降雨量\" // value字段\n\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Chart, {\n        height: 200,\n        data: dv,\n        forceFit: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Axis, {\n        name: \"\\u6708\\u4EFD\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Axis, {\n        name: \"\\u6708\\u5747\\u964D\\u96E8\\u91CF\",\n        label: {\n          formatter: function formatter(val) {\n            return val !== '0' ? \"\".concat(val, \"%\") : val;\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Legend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Tooltip, {\n        crosshairs: {\n          type: \"y\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Geom, {\n        type: \"interval\",\n        position: \"\\u6708\\u4EFD*\\u6708\\u5747\\u964D\\u96E8\\u91CF\",\n        color: [\"name\", ['#6236FF', '#997CFF', '#32C5FF', '#89DEFF', '#FF2A8E', '#FF2A8E4d']],\n        adjust: [{\n          type: \"dodge\",\n          marginRatio: 1 / 32\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return Groupedcolumn;\n}(React.Component);\n\nexport default Groupedcolumn;","map":{"version":3,"sources":["/Users/shoen/Desktop/设备运维前端/bl-device-manage/src/layouts/ZDeviceMonitor/GroupColumn.js"],"names":["React","Chart","Geom","Axis","Tooltip","Legend","DataSet","Groupedcolumn","state","dataValue","getDay","day","today","Date","targetday_milliseconds","getTime","setTime","tYear","getFullYear","tMonth","getMonth","tDate","getDate","doHandleMonth","month","m","toString","length","key","push","reverse","setState","data","props","ds","dv","createView","source","transform","type","fields","value","formatter","val","marginRatio","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Chart,\n  Geom,\n  Axis,\n  Tooltip,\n  Legend,\n} from \"bizcharts\";\nimport DataSet from \"@antv/data-set\";\n\nclass Groupedcolumn extends React.Component {\n  state = {\n    dataValue : []\n  }\n  componentDidMount(){\n    let dataValue = []\n    for (let key = -1; key > -6; key--) {\n\t\t\tdataValue.push(`${this.getDay(key)}`);\n    }\n    dataValue = dataValue.reverse()\n    this.setState({dataValue})\n  }\n  getDay = day => {\n\t\tlet today = new Date();\n\t\tlet targetday_milliseconds = today.getTime() + 1000 * 60 * 60 * 24 * day;\n\t\ttoday.setTime(targetday_milliseconds); //注意，这行是关键代码\n\t\tlet tYear = today.getFullYear();\n\t\tlet tMonth = today.getMonth();\n\t\tlet tDate = today.getDate();\n\t\tconst doHandleMonth = month => {\n\t\t\tlet m = month;\n\t\t\tif (month.toString().length == 1) {\n\t\t\t\tm = '0' + month;\n\t\t\t}\n\t\t\treturn m;\n\t\t};\n\t\ttMonth = doHandleMonth(tMonth + 1);\n\t\ttDate = doHandleMonth(tDate);\n\t\treturn (tYear + '' + tMonth + '' + tDate).toString();\n\t};\n  render() {\n    const data = this.props.data;\n    const ds = new DataSet();\n    const dv = ds.createView().source(data);\n    // `${this.state.dataValue[0]}`,`${this.state.dataValue[1]}`,`${this.state.dataValue[2]}`,`${this.state.dataValue[3]}`,`${this.state.dataValue[4]}`\n    dv.transform({\n      type: \"fold\",\n      fields: [...this.state.dataValue],\n      // 展开字段集\n      key: \"月份\",\n      // key字段\n      value: \"月均降雨量\" // value字段\n    });\n    return (\n      <div>\n        <Chart height={200} data={dv} forceFit>\n          <Axis name=\"月份\" />\n          <Axis name=\"月均降雨量\" \n            label={{\n              formatter: val => val !== '0' ? `${val}%` : val\n            }} \n          />\n          <Legend />\n          <Tooltip\n            crosshairs={{\n              type: \"y\"\n            }}\n          />\n          <Geom\n            type=\"interval\"\n            position=\"月份*月均降雨量\"\n            color={[\"name\",['#6236FF','#997CFF','#32C5FF','#89DEFF','#FF2A8E','#FF2A8E4d']]}\n            adjust={[\n              {\n                type: \"dodge\",\n                marginRatio: 1 / 32\n              }\n            ]}\n          />\n        </Chart>\n      </div>\n    );\n  }\n}\nexport default Groupedcolumn\n"]},"metadata":{},"sourceType":"module"}