{"ast":null,"code":"import React from 'react';\nimport Input from './Input';\n\nvar SingleSelector = function SingleSelector(_ref) {\n  var inputElement = _ref.inputElement,\n      prefixCls = _ref.prefixCls,\n      id = _ref.id,\n      inputRef = _ref.inputRef,\n      disabled = _ref.disabled,\n      autoFocus = _ref.autoFocus,\n      accessibilityIndex = _ref.accessibilityIndex,\n      mode = _ref.mode,\n      open = _ref.open,\n      values = _ref.values,\n      placeholder = _ref.placeholder,\n      tabIndex = _ref.tabIndex,\n      showSearch = _ref.showSearch,\n      searchValue = _ref.searchValue,\n      activeValue = _ref.activeValue,\n      onInputKeyDown = _ref.onInputKeyDown,\n      onInputMouseDown = _ref.onInputMouseDown,\n      onInputChange = _ref.onInputChange;\n  var combobox = mode === 'combobox';\n  var inputEditable = combobox || showSearch && open;\n  var item = values[0];\n  var inputValue = searchValue;\n\n  if (combobox) {\n    inputValue = item ? String(item.value) : activeValue || searchValue;\n  }\n\n  var hasTextInput = !!inputValue;\n  return React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-search\")\n  }, React.createElement(Input, {\n    ref: inputRef,\n    prefixCls: prefixCls,\n    id: id,\n    open: open,\n    inputElement: inputElement,\n    disabled: disabled,\n    autoFocus: autoFocus,\n    editable: inputEditable,\n    accessibilityIndex: accessibilityIndex,\n    value: inputValue,\n    onKeyDown: onInputKeyDown,\n    onMouseDown: onInputMouseDown,\n    onChange: onInputChange,\n    tabIndex: tabIndex\n  })), !combobox && item && !hasTextInput && React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-item\")\n  }, item.label), !item && !hasTextInput && React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-placeholder\")\n  }, placeholder));\n};\n\nexport default SingleSelector;","map":null,"metadata":{},"sourceType":"module"}