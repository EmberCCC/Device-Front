{"ast":null,"code":"import \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport _objectSpread from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\src\\\\layouts\\\\ZCloudDevice\\\\DeviceMaintain\\\\Schema.js\";\n\nimport React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport './index.less';\nimport GlobalList from 'components/GlobalList';\nimport ModalS from './cell/ModalS';\nimport { setSchemaColumns, setSchemaFormColumns, setSchemaModalColumns } from './methods';\nvar CheckScheme = (_dec = inject('ZCloudDeviceStore'), _dec(_class = observer(_class = (_temp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CheckScheme, _Component);\n\n  function CheckScheme(props) {\n    var _this;\n\n    _classCallCheck(this, CheckScheme);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CheckScheme).call(this, props));\n\n    _this.handleVisible = function () {\n      /* 每次打开弹窗 获取所有的点检列表 */\n      if (_this.state.visible) {\n        _this.store.getMaintain({\n          pageSize: 100\n        });\n\n        _this.setState({\n          modalSelectedRowKeys: [],\n          contentIds: []\n        });\n      }\n\n      _this.setState({\n        visible: !_this.state.visible\n      });\n    };\n\n    _this.onModalItemSelect = function (selectedRowKey, selectedRowKeys) {\n      // console.log(selectedRowKeys)\n      var arr = [];\n      selectedRowKeys.map(function (item) {\n        arr.push(item.maintainId);\n      });\n\n      _this.setState({\n        modalSelectedRowKeys: selectedRowKey,\n        contentIds: arr\n      });\n    };\n\n    _this.handleSubmit = function (values) {\n      console.log(values, '提交');\n      var _this$store = _this.store,\n          deviceType = _this$store.deviceType,\n          status = _this$store.status,\n          currentMain = _this$store.currentMain;\n\n      var params = _objectSpread({\n        deviceType: deviceType,\n        contentIds: _this.state.contentIds.join(','),\n        planType: _this.store.planType,\n        maintainType: _this.store.maintainType\n      }, values);\n\n      if (status === 'edit') {\n        params.id = currentMain.id;\n      }\n\n      _this.store.saveSchema(params);\n\n      _this.handleVisible();\n    };\n\n    _this.handleEdit = function (value) {\n      _this.store.status = 'edit';\n\n      _this.store.getSchemaInfo({\n        id: value\n      }).then(function () {\n        var data = _this.store.currentMain.contentIds.split(','),\n            newDs = [];\n\n        data.map(function (item) {\n          newDs.push(parseFloat(item));\n        });\n\n        _this.setState({\n          modalSelectedRowKeys: newDs\n        });\n      });\n\n      _this.handleVisible();\n    };\n\n    _this.handleDelete = function (_ref) {\n      var type = _ref.type,\n          value = _ref.value;\n\n      if (type === 'batch') {\n        if (_this.state.selectedRowKeys.length < 1) {\n          _Modal.warn({\n            title: '提示',\n            content: '请选择需要删除的内容'\n          });\n        } else {\n          _Modal.confirm({\n            title: '提示',\n            content: '确定删除选中的' + _this.state.selectedRowKeys.length + '条内容？',\n            okText: '确定',\n            cancelText: '取消',\n            onOk: function onOk() {\n              _this.store.delSchema({\n                ids: _this.state.selectedRowKeys\n              }, 'batch');\n            }\n          });\n        }\n      } else {\n        _Modal.confirm({\n          title: '提示',\n          content: '确定删除当前内容？',\n          okText: '确定',\n          cancelText: '取消',\n          onOk: function onOk() {\n            _this.store.delSchema({\n              id: value\n            }, 'single');\n          }\n        });\n      }\n    };\n\n    _this.handleSelect = function (selectedRowKeys) {\n      _this.setState({\n        selectedRowKeys: selectedRowKeys\n      });\n    };\n\n    _this.handleCheckTag = function (tag) {\n      console.log(tag.typeName, 'name');\n      _this.store.deviceType = tag.typeName;\n\n      _this.store.getMaintain({\n        pageIndex: 1,\n        pageSize: 10,\n        deviceType: tag.typeName === '全部' ? '' : tag.typeName\n      });\n\n      _this.store.getScheme({\n        deviceType: tag.typeName === '全部' ? '' : tag.typeName\n      });\n    };\n\n    _this.store = _this.props.ZCloudDeviceStore;\n    _this.state = {\n      selectedRowKeys: [],\n      modalSelectedRowKeys: [],\n      //弹窗内部的选项\n      contentIds: [],\n      //弹窗内部的选项\n      visible: false\n    };\n    return _this;\n  }\n\n  _createClass(CheckScheme, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$store2 = this.store,\n          schemeList = _this$store2.schemeList,\n          schemePage = _this$store2.schemePage,\n          maintainList = _this$store2.maintainList,\n          deviceList = _this$store2.deviceList,\n          isLoading = _this$store2.isLoading,\n          status = _this$store2.status,\n          currentMain = _this$store2.currentMain;\n      var type = this.props.type;\n      var rowSelection = {\n        selectedRowKeys: this.state.selectedRowKeys,\n        onChange: this.handleSelect\n      };\n      var modal = {\n        visible: this.state.visible,\n        title: status === 'add' ? '新增' : '编辑',\n        onCancel: this.handleVisible,\n        onOk: this.handleSubmit,\n        isForm: true,\n        okText: '确定',\n        cancelText: '取消',\n        formColumns: setSchemaFormColumns({\n          status: status,\n          currentMain: currentMain,\n          type: type\n        }),\n        otherContent: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(_Table, {\n          scroll: {\n            y: 300\n          },\n          rowKey: \"maintainID\",\n          columns: setSchemaModalColumns({\n            type: type\n          }),\n          dataSource: maintainList,\n          rowSelection: {\n            selectedRowKeys: this.state.modalSelectedRowKeys,\n            onChange: this.onModalItemSelect\n          },\n          pagination: false,\n          size: \"small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }))\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(GlobalList, {\n        checkedTag: {\n          dataSource: deviceList,\n          title: '设备类型',\n          PopoVisible: false,\n          keyName: 'typeName',\n          defaultActiveKey: deviceList[0],\n          content: deviceList,\n          onClick: this.handleCheckTag\n        },\n        table: {\n          rowKey: 'id',\n          columns: setSchemaColumns({\n            type: type,\n            handleDelete: this.handleDelete,\n            handleEdit: this.handleEdit\n          }),\n          dataSource: schemeList,\n          pagination: _objectSpread({}, schemePage, {\n            onChange: function onChange(pageIndex, pageSize) {\n              _this2.store.getScheme({\n                pageIndex: pageIndex,\n                pageSize: pageSize,\n                planType: 2\n              });\n            }\n          }),\n          loading: isLoading,\n          rowSelection: rowSelection,\n          btns: [{\n            name: '新增',\n            onClick: function onClick() {\n              if (_this2.store.deviceType) {\n                _this2.store.status = 'add';\n\n                _this2.handleVisible();\n              } else {\n                _message.warn('请选择设备类型');\n              }\n            },\n            type: 'primary'\n          }, {\n            name: '删除',\n            onClick: function onClick() {\n              return _this2.handleDelete({\n                type: 'batch'\n              });\n            }\n          }]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), this.state.visible && React.createElement(ModalS, {\n        modal: modal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }));\n    }\n    /* modal - operate */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.store.deviceType = '';\n      this.store.getMaintain({\n        pageIndex: 1,\n        pageSize: 10\n      });\n      this.store.getScheme({\n        deviceType: this.store.deviceType\n      });\n    }\n  }]);\n\n  return CheckScheme;\n}(Component), _temp)) || _class) || _class);\nexport default CheckScheme;","map":{"version":3,"sources":["D:\\GGdownload\\设备运维前端\\bl-device-manage\\src\\layouts\\ZCloudDevice\\DeviceMaintain\\Schema.js"],"names":["React","Component","inject","observer","GlobalList","ModalS","setSchemaColumns","setSchemaFormColumns","setSchemaModalColumns","CheckScheme","props","handleVisible","state","visible","store","getMaintain","pageSize","setState","modalSelectedRowKeys","contentIds","onModalItemSelect","selectedRowKey","selectedRowKeys","arr","map","item","push","maintainId","handleSubmit","values","console","log","deviceType","status","currentMain","params","join","planType","maintainType","id","saveSchema","handleEdit","value","getSchemaInfo","then","data","split","newDs","parseFloat","handleDelete","type","length","warn","title","content","confirm","okText","cancelText","onOk","delSchema","ids","handleSelect","handleCheckTag","tag","typeName","pageIndex","getScheme","ZCloudDeviceStore","schemeList","schemePage","maintainList","deviceList","isLoading","rowSelection","onChange","modal","onCancel","isForm","formColumns","otherContent","y","dataSource","PopoVisible","keyName","defaultActiveKey","onClick","rowKey","columns","pagination","loading","btns","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport './index.less';\nimport GlobalList from 'components/GlobalList';\nimport { Modal, Table, message } from 'antd';\nimport ModalS from './cell/ModalS'\nimport { setSchemaColumns, setSchemaFormColumns, setSchemaModalColumns, } from './methods';\n\n@inject('ZCloudDeviceStore')\n@observer\nclass CheckScheme extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.store = this.props.ZCloudDeviceStore;\n\t\tthis.state = {\n\t\t\tselectedRowKeys: [],\n\t\t\tmodalSelectedRowKeys: [], //弹窗内部的选项\n\t\t\tcontentIds: [], //弹窗内部的选项\n\t\t\tvisible: false,\n\t\t};\n\t}\n\trender() {\n\t\tconst {\n\t\t\tschemeList,\n\t\t\tschemePage,\n\t\t\tmaintainList,\n\t\t\tdeviceList,\n\t\t\tisLoading,\n\t\t\tstatus,\n\t\t\tcurrentMain\n\t\t} = this.store;\n\t\tconst { type } = this.props;\n\t\tconst rowSelection = {\n\t\t\tselectedRowKeys: this.state.selectedRowKeys,\n\t\t\tonChange: this.handleSelect\n\t\t};\n\t\tconst modal = {\n\t\t\tvisible: this.state.visible,\n\t\t\ttitle: status === 'add' ? '新增' : '编辑',\n\t\t\tonCancel: this.handleVisible,\n\t\t\tonOk: this.handleSubmit,\n\t\t\tisForm: true,\n\t\t\tokText: '确定',\n\t\t\tcancelText: '取消',\n\t\t\tformColumns: setSchemaFormColumns({\n\t\t\t\tstatus, currentMain, type\n\t\t\t}),\n\t\t\totherContent: <div>\n\t\t\t\t<Table\n\t\t\t\t\tscroll={{ y: 300 }}\n\t\t\t\t\trowKey='maintainID'\n\t\t\t\t\tcolumns={setSchemaModalColumns({ type })}\n\t\t\t\t\tdataSource={maintainList}\n\t\t\t\t\trowSelection={{\n\t\t\t\t\t\tselectedRowKeys: this.state.modalSelectedRowKeys,\n\t\t\t\t\t\tonChange: this.onModalItemSelect\n\t\t\t\t\t}}\n\t\t\t\t\tpagination={false}\n\t\t\t\t\tsize='small'\n\t\t\t\t/>\n\t\t\t</div>\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<GlobalList\n\t\t\t\t\tcheckedTag={{\n\t\t\t\t\t\tdataSource: deviceList,\n\t\t\t\t\t\ttitle: '设备类型',\n\t\t\t\t\t\tPopoVisible: false,\n\t\t\t\t\t\tkeyName: 'typeName',\n\t\t\t\t\t\tdefaultActiveKey: deviceList[0],\n\t\t\t\t\t\tcontent: deviceList,\n\t\t\t\t\t\tonClick: this.handleCheckTag\n\t\t\t\t\t}}\n\t\t\t\t\ttable={{\n\t\t\t\t\t\trowKey: 'id',\n\t\t\t\t\t\tcolumns: setSchemaColumns({\n\t\t\t\t\t\t\ttype, handleDelete: this.handleDelete, handleEdit: this.handleEdit\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tdataSource: schemeList,\n\t\t\t\t\t\tpagination: {\n\t\t\t\t\t\t\t...schemePage,\n\t\t\t\t\t\t\tonChange: (pageIndex, pageSize) => {\n\t\t\t\t\t\t\t\tthis.store.getScheme({\n\t\t\t\t\t\t\t\t\tpageIndex,\n\t\t\t\t\t\t\t\t\tpageSize,\n\t\t\t\t\t\t\t\t\tplanType: 2,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tloading: isLoading,\n\t\t\t\t\t\trowSelection,\n\t\t\t\t\t\tbtns: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: '新增',\n\t\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\t\tif (this.store.deviceType) {\n\t\t\t\t\t\t\t\t\t\tthis.store.status = 'add';\n\t\t\t\t\t\t\t\t\t\tthis.handleVisible();\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tmessage.warn('请选择设备类型')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ttype: 'primary'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: '删除',\n\t\t\t\t\t\t\t\tonClick: () => this.handleDelete({ type: 'batch' })\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t{\n\t\t\t\t\tthis.state.visible && <ModalS\n\t\t\t\t\t\tmodal={modal}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n\t/* modal - operate */\n\thandleVisible = () => {\n\t\t/* 每次打开弹窗 获取所有的点检列表 */\n\t\tif (this.state.visible) {\n\t\t\tthis.store.getMaintain({\n\t\t\t\tpageSize: 100\n\t\t\t});\n\t\t\tthis.setState({\n\t\t\t\tmodalSelectedRowKeys: [],\n\t\t\t\tcontentIds: []\n\t\t\t})\n\t\t}\n\t\tthis.setState({\n\t\t\tvisible: !this.state.visible\n\t\t});\n\t};\n\t/* 弹窗内表格的操作 */\n\tonModalItemSelect = (selectedRowKey, selectedRowKeys) => {\n\t\t// console.log(selectedRowKeys)\n\t\tlet arr = []\n\t\tselectedRowKeys.map(item => {\n\t\t\tarr.push(item.maintainId)\n\t\t})\n\t\tthis.setState({\n\t\t\tmodalSelectedRowKeys: selectedRowKey,\n\t\t\tcontentIds: arr\n\t\t})\n\t}\n\t/* 弹窗提交操作 */\n\thandleSubmit = values => {\n\t\tconsole.log(values, '提交')\n\t\tconst { deviceType, status, currentMain } = this.store;\n\t\tlet params = {\n\t\t\tdeviceType,\n\t\t\tcontentIds: this.state.contentIds.join(','),\n\t\t\tplanType: this.store.planType,\n\t\t\tmaintainType: this.store.maintainType,\n\t\t\t...values\n\t\t}\n\t\tif (status === 'edit') {\n\t\t\tparams.id = currentMain.id\n\t\t}\n\t\tthis.store.saveSchema(params);\n\t\tthis.handleVisible();\n\t};\n\t/* 编辑弹窗 */\n\thandleEdit = value => {\n\t\tthis.store.status = 'edit';\n\t\tthis.store.getSchemaInfo({ id: value }).then(() => {\n\t\t\tlet data = this.store.currentMain.contentIds.split(','), newDs = [];\n\t\t\tdata.map(item => {\n\t\t\t\tnewDs.push(parseFloat(item))\n\t\t\t})\n\t\t\tthis.setState({\n\t\t\t\tmodalSelectedRowKeys: newDs\n\t\t\t})\n\t\t})\n\t\tthis.handleVisible();\n\t};\n\t/* 删除 点检方案 */\n\thandleDelete = ({ type, value }) => {\n\t\tif (type === 'batch') {\n\t\t\tif (this.state.selectedRowKeys.length < 1) {\n\t\t\t\tModal.warn({\n\t\t\t\t\ttitle: '提示',\n\t\t\t\t\tcontent: '请选择需要删除的内容'\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tModal.confirm({\n\t\t\t\t\ttitle: '提示',\n\t\t\t\t\tcontent:\n\t\t\t\t\t\t'确定删除选中的' +\n\t\t\t\t\t\tthis.state.selectedRowKeys.length +\n\t\t\t\t\t\t'条内容？',\n\t\t\t\t\tokText: '确定',\n\t\t\t\t\tcancelText: '取消',\n\t\t\t\t\tonOk: () => {\n\t\t\t\t\t\tthis.store.delSchema(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tids: this.state.selectedRowKeys\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'batch'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tModal.confirm({\n\t\t\t\ttitle: '提示',\n\t\t\t\tcontent: '确定删除当前内容？',\n\t\t\t\tokText: '确定',\n\t\t\t\tcancelText: '取消',\n\t\t\t\tonOk: () => {\n\t\t\t\t\tthis.store.delSchema(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: value\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'single'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\thandleSelect = selectedRowKeys => {\n\t\tthis.setState({ selectedRowKeys });\n\t};\n\t/* check - tag */\n\thandleCheckTag = tag => {\n\t\tconsole.log(tag.typeName, 'name')\n\t\tthis.store.deviceType = tag.typeName\n\t\tthis.store.getMaintain({\n\t\t\tpageIndex: 1,\n\t\t\tpageSize: 10,\n\t\t\tdeviceType: tag.typeName === '全部' ? '' : tag.typeName\n\t\t});\n\t\tthis.store.getScheme({\n\t\t\tdeviceType: tag.typeName === '全部' ? '' : tag.typeName,\n\t\t});\n\t};\n\tcomponentDidMount() {\n\t\tthis.store.deviceType = ''\n\t\tthis.store.getMaintain({\n\t\t\tpageIndex: 1,\n\t\t\tpageSize: 10,\n\t\t});\n\t\tthis.store.getScheme({\n\t\t\tdeviceType: this.store.deviceType,\n\t\t});\n\t}\n}\nexport default CheckScheme;\n"]},"metadata":{},"sourceType":"module"}