{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport _objectSpread from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nvar _jsxFileName = \"F:\\\\documents\\\\bl-device-manage-test\\\\src\\\\layouts\\\\FlowManage\\\\index.js\";\nimport React, { useState, useRef, useCallback, useMemo, useEffect } from 'react';\nimport ReactFlow, { ReactFlowProvider, addEdge, useNodesState, useEdgesState, Controls, MiniMap, MarkerType } from 'react-flow-renderer';\nimport * as services from '../../services/design';\nimport Sidebar from './Sidebar';\nimport FlowNode from './Node/FlowNode';\nimport CopyNode from './Node/CopyNode';\nimport './index.css';\nimport { isDataExist } from 'utils/dataTools';\nvar Header = _Layout.Header,\n    Sider = _Layout.Sider,\n    Content = _Layout.Content;\nvar initialNodes = [{\n  \"id\": \"0\",\n  \"type\": \"input\",\n  \"data\": {\n    \"label\": \"开始流程\"\n  },\n  \"position\": {\n    \"x\": 254,\n    \"y\": -76\n  },\n  \"positionAbsolute\": {\n    \"x\": 254,\n    \"y\": -76\n  }\n}, {\n  \"id\": \"-1\",\n  \"type\": \"output\",\n  \"data\": {\n    \"label\": \"结束流程\"\n  },\n  \"position\": {\n    \"x\": 198,\n    \"y\": 112\n  },\n  \"positionAbsolute\": {\n    \"x\": 198,\n    \"y\": 112\n  }\n}, {\n  \"id\": \"node_1\",\n  \"type\": \"FlowNode\",\n  \"position\": {\n    \"x\": 236.25,\n    \"y\": 32.5\n  },\n  \"data\": {\n    \"label\": \"FlowNode node\"\n  },\n  \"positionAbsolute\": {\n    \"x\": 236.25,\n    \"y\": 32.5\n  }\n}];\nvar initialEdges = [{\n  \"source\": \"0\",\n  \"sourceHandle\": null,\n  \"target\": \"node_1\",\n  \"targetHandle\": \"top\",\n  \"markerEnd\": {\n    \"type\": \"arrow\"\n  },\n  \"id\": \"reactflow__edge-0-node_1top\"\n}, {\n  \"source\": \"node_1\",\n  \"sourceHandle\": \"bottom\",\n  \"target\": \"-1\",\n  \"targetHandle\": null,\n  \"markerEnd\": {\n    \"type\": \"arrow\"\n  },\n  \"id\": \"reactflow__edge-node_1bottom--1\"\n}];\nvar nodeTypes = {\n  FlowNode: FlowNode,\n  CopyNode: CopyNode\n};\nvar id = 0;\n\nvar getId = function getId() {\n  return \"node_\".concat(++id);\n};\n\nfunction DnDFlow(props) {\n  var reactFlowWrapper = useRef(null);\n\n  var _useNodesState = useNodesState(initialNodes),\n      _useNodesState2 = _slicedToArray(_useNodesState, 3),\n      nodes = _useNodesState2[0],\n      setNodes = _useNodesState2[1],\n      onNodesChange = _useNodesState2[2];\n\n  var _useEdgesState = useEdgesState(initialEdges),\n      _useEdgesState2 = _slicedToArray(_useEdgesState, 3),\n      edges = _useEdgesState2[0],\n      setEdges = _useEdgesState2[1],\n      onEdgesChange = _useEdgesState2[2];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      reactFlowInstance = _useState2[0],\n      setReactFlowInstance = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nodeName = _useState4[0],\n      setNodeName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nodeId = _useState6[0],\n      setNodeId = _useState6[1];\n\n  useEffect(function () {\n    setNodes(function (nds) {\n      return nds.map(function (node) {\n        if (node.id === nodeId) {\n          // it's important that you create a new object here\n          // in order to notify react flow about the change\n          node.data = _objectSpread({}, node.data, {\n            label: nodeName\n          });\n        }\n\n        return node;\n      });\n    });\n  }, [nodeName, setNodes]);\n  var onConnect = useCallback(function (params) {\n    var obj = {\n      type: MarkerType.Arrow\n    };\n    params.markerEnd = obj;\n    setEdges(function (eds) {\n      return addEdge(params, eds);\n    });\n  }, []);\n  var onDragOver = useCallback(function (event) {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n  var onDrop = useCallback(function (event) {\n    event.preventDefault();\n    var reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    var type = event.dataTransfer.getData('application/reactflow'); // check if the dropped element is valid\n\n    if (typeof type === 'undefined' || !type) {\n      return;\n    }\n\n    var position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    });\n    var newNode = {\n      id: getId(),\n      type: type,\n      position: position,\n      data: {\n        label: \"\".concat(type, \" node\")\n      }\n    };\n    setNodes(function (nds) {\n      return nds.concat(newNode);\n    });\n  }, [reactFlowInstance]);\n  var onSave = useCallback(function () {\n    console.log(store.firstFormId);\n\n    if (reactFlowInstance) {\n      var flow = reactFlowInstance.toObject();\n      var params = {};\n      params.firstFormId = 1;\n      params.edges = flow.edges;\n      params.nodes = [];\n      flow.nodes.map(function (item) {\n        var obj = {};\n        obj.id = item.id;\n        obj.type = item.type;\n        obj.position = item.position;\n        obj.data = item.data;\n        obj.positionAbsolute = item.positionAbsolute;\n        params.nodes.push(obj);\n      });\n      console.log(params);\n\n      try {\n        var res = services.putRequest(services.requestList.addFlow, params);\n\n        if (isDataExist(res)) {\n          return res;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n\n      console.log(params);\n    }\n  }, [reactFlowInstance]);\n  var onNodeClick = useCallback(function (event, node) {\n    setNodeId(node.id);\n    setNodeName(node.data.label);\n  }, [nodeName], [nodeId]);\n  return React.createElement(_Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(Header, {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(_Button, {\n    type: \"primary\",\n    className: \"save\",\n    onClick: onSave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, \"\\u4FDD\\u5B58\")), React.createElement(_Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(_Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(Header, {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(Sidebar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  })), React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dndflow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(ReactFlowProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"reactflow-wrapper\",\n    ref: reactFlowWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, React.createElement(ReactFlow, {\n    nodes: nodes,\n    edges: edges,\n    onNodesChange: onNodesChange,\n    onEdgesChange: onEdgesChange,\n    onConnect: onConnect,\n    onInit: setReactFlowInstance,\n    onDrop: onDrop,\n    onDragOver: onDragOver,\n    nodeTypes: nodeTypes,\n    onNodeClick: onNodeClick,\n    fitView: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(Controls, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }), React.createElement(MiniMap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }))))))))), React.createElement(Sider, {\n    style: {\n      backgroundColor: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"updatenode__controls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, \"label:\"), React.createElement(\"input\", {\n    value: nodeName,\n    onChange: function onChange(evt) {\n      return setNodeName(evt.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  })))));\n}\n\n;\nexport default DnDFlow;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage-test\\src\\layouts\\FlowManage\\index.js"],"names":["React","useState","useRef","useCallback","useMemo","useEffect","ReactFlow","ReactFlowProvider","addEdge","useNodesState","useEdgesState","Controls","MiniMap","MarkerType","services","Sidebar","FlowNode","CopyNode","isDataExist","Header","Sider","Content","initialNodes","initialEdges","nodeTypes","id","getId","DnDFlow","props","reactFlowWrapper","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","reactFlowInstance","setReactFlowInstance","nodeName","setNodeName","nodeId","setNodeId","nds","map","node","data","label","onConnect","params","obj","type","Arrow","markerEnd","eds","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","reactFlowBounds","current","getBoundingClientRect","getData","position","project","x","clientX","left","y","clientY","top","newNode","concat","onSave","console","log","store","firstFormId","flow","toObject","item","positionAbsolute","push","res","putRequest","requestList","addFlow","error","onNodeClick","backgroundColor","evt","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback, useMemo, useEffect } from 'react';\r\nimport { Layout, Button, Menu, Dropdown, Divider } from 'antd';\r\nimport ReactFlow, {\r\n  ReactFlowProvider,\r\n  addEdge,\r\n  useNodesState,\r\n  useEdgesState,\r\n  Controls,\r\n  MiniMap,\r\n  MarkerType\r\n} from 'react-flow-renderer';\r\nimport * as services from '../../services/design';\r\nimport Sidebar from './Sidebar';\r\nimport FlowNode from './Node/FlowNode'\r\nimport CopyNode from './Node/CopyNode'\r\n\r\nimport './index.css';\r\nimport { isDataExist } from 'utils/dataTools';\r\n\r\nconst { Header, Sider, Content } = Layout;\r\nconst initialNodes = [\r\n  {\r\n    \"id\": \"0\",\r\n    \"type\": \"input\",\r\n    \"data\": {\r\n      \"label\": \"开始流程\"\r\n    },\r\n    \"position\": {\r\n      \"x\": 254,\r\n      \"y\": -76\r\n    },\r\n    \"positionAbsolute\": {\r\n      \"x\": 254,\r\n      \"y\": -76\r\n    }\r\n  },\r\n  {\r\n    \"id\": \"-1\",\r\n    \"type\": \"output\",\r\n    \"data\": {\r\n      \"label\": \"结束流程\"\r\n    },\r\n    \"position\": {\r\n      \"x\": 198,\r\n      \"y\": 112\r\n    },\r\n    \"positionAbsolute\": {\r\n      \"x\": 198,\r\n      \"y\": 112\r\n    }\r\n  },\r\n  {\r\n    \"id\": \"node_1\",\r\n    \"type\": \"FlowNode\",\r\n    \"position\": {\r\n      \"x\": 236.25,\r\n      \"y\": 32.5\r\n    },\r\n    \"data\": {\r\n      \"label\": \"FlowNode node\"\r\n    },\r\n    \"positionAbsolute\": {\r\n      \"x\": 236.25,\r\n      \"y\": 32.5\r\n    }\r\n  }\r\n];\r\nconst initialEdges = [\r\n  {\r\n    \"source\": \"0\",\r\n    \"sourceHandle\": null,\r\n    \"target\": \"node_1\",\r\n    \"targetHandle\": \"top\",\r\n    \"markerEnd\": {\r\n      \"type\": \"arrow\"\r\n    },\r\n    \"id\": \"reactflow__edge-0-node_1top\"\r\n  },\r\n  {\r\n    \"source\": \"node_1\",\r\n    \"sourceHandle\": \"bottom\",\r\n    \"target\": \"-1\",\r\n    \"targetHandle\": null,\r\n    \"markerEnd\": {\r\n      \"type\": \"arrow\"\r\n    },\r\n    \"id\": \"reactflow__edge-node_1bottom--1\"\r\n  }\r\n]\r\nconst nodeTypes = { FlowNode: FlowNode, CopyNode: CopyNode };\r\n\r\nlet id = 0;\r\nconst getId = () => `node_${++id}`;\r\n\r\nfunction DnDFlow (props) {\r\n  const reactFlowWrapper = useRef(null);\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\r\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n  const [nodeName, setNodeName] = useState('');\r\n  const [nodeId, setNodeId] = useState('');\r\n\r\n  useEffect(() => {\r\n    setNodes((nds) =>\r\n      nds.map((node) => {\r\n        if (node.id === nodeId) {\r\n          // it's important that you create a new object here\r\n          // in order to notify react flow about the change\r\n          node.data = {\r\n            ...node.data,\r\n            label: nodeName,\r\n          };\r\n        }\r\n        return node;\r\n      })\r\n    );\r\n  }, [nodeName, setNodes]);\r\n\r\n  const onConnect = useCallback((params) => {\r\n    let obj = {\r\n      type: MarkerType.Arrow,\r\n    }\r\n    params.markerEnd = obj\r\n    setEdges((eds) => addEdge(params, eds))\r\n  }, []);\r\n\r\n  const onDragOver = useCallback((event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'move';\r\n  }, []);\r\n\r\n  const onDrop = useCallback(\r\n    (event) => {\r\n      event.preventDefault();\r\n\r\n      const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n      const type = event.dataTransfer.getData('application/reactflow');\r\n\r\n      // check if the dropped element is valid\r\n      if (typeof type === 'undefined' || !type) {\r\n        return;\r\n      }\r\n\r\n      const position = reactFlowInstance.project({\r\n        x: event.clientX - reactFlowBounds.left,\r\n        y: event.clientY - reactFlowBounds.top,\r\n      });\r\n      const newNode = {\r\n        id: getId(),\r\n        type,\r\n        position,\r\n        data: { label: `${type} node` },\r\n      };\r\n\r\n      setNodes((nds) => nds.concat(newNode));\r\n    },\r\n    [reactFlowInstance]\r\n  );\r\n\r\n  const onSave = useCallback(() => {\r\n    console.log(store.firstFormId);\r\n    if (reactFlowInstance) {\r\n      const flow = reactFlowInstance.toObject();\r\n      let params = {}\r\n      params.firstFormId = 1;\r\n      params.edges = flow.edges\r\n      params.nodes = []\r\n      flow.nodes.map((item) => {\r\n        let obj = {}\r\n        obj.id = item.id\r\n        obj.type = item.type\r\n        obj.position = item.position\r\n        obj.data = item.data\r\n        obj.positionAbsolute = item.positionAbsolute\r\n        params.nodes.push(obj)\r\n      })\r\n      console.log(params);\r\n      try {\r\n        let res = services.putRequest(services.requestList.addFlow, params);\r\n        if (isDataExist(res)) {\r\n          return res;\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      console.log(params);\r\n    }\r\n  }, [reactFlowInstance]);\r\n\r\n  const onNodeClick = useCallback((event, node) => {\r\n    setNodeId(node.id)\r\n    setNodeName(node.data.label)\r\n\r\n  }, [nodeName], [nodeId])\r\n\r\n  return (\r\n    <Layout>\r\n      <Header className='header'>\r\n        <Button type=\"primary\" className='save' onClick={onSave}>保存</Button>\r\n      </Header>\r\n      <Layout>\r\n        <Content>\r\n          <Layout>\r\n            <Header className='title'>\r\n              <Sidebar />\r\n            </Header>\r\n            <Content>\r\n              <div className=\"dndflow\">\r\n                <ReactFlowProvider>\r\n                  <Content>\r\n                    <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n                      <ReactFlow\r\n                        nodes={nodes}\r\n                        edges={edges}\r\n                        onNodesChange={onNodesChange}\r\n                        onEdgesChange={onEdgesChange}\r\n                        onConnect={onConnect}\r\n                        onInit={setReactFlowInstance}\r\n                        onDrop={onDrop}\r\n                        onDragOver={onDragOver}\r\n                        nodeTypes={nodeTypes}\r\n                        onNodeClick={onNodeClick}\r\n                        fitView\r\n                      >\r\n                        <Controls />\r\n                        <MiniMap />\r\n                      </ReactFlow>\r\n                    </div>\r\n                  </Content>\r\n                </ReactFlowProvider>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Content>\r\n        <Sider style={{ backgroundColor: 'white' }}>\r\n          <div className=\"updatenode__controls\">\r\n            <label>label:</label>\r\n            <input value={nodeName} onChange={(evt) => setNodeName(evt.target.value)} />\r\n          </div>\r\n        </Sider>\r\n      </Layout>\r\n\r\n    </Layout>\r\n\r\n  );\r\n};\r\n\r\nexport default DnDFlow;\r\n"]},"metadata":{},"sourceType":"module"}