{"ast":null,"code":"import { a as _defineProperty, B as BackgroundVariant, b as useStore, _ as _slicedToArray } from './index-fdcea71e.js';\nimport React__default, { memo, useMemo } from 'react';\nimport cc from 'classcat';\nimport 'zustand';\nimport 'zustand/context';\nimport 'd3-zoom';\n\nvar createGridLinesPath = function createGridLinesPath(size, strokeWidth, stroke) {\n  return (\n    /*#__PURE__*/\n    React__default.createElement(\"path\", {\n      stroke: stroke,\n      strokeWidth: strokeWidth,\n      d: \"M\".concat(size / 2, \" 0 V\").concat(size, \" M0 \").concat(size / 2, \" H\").concat(size)\n    })\n  );\n};\n\nvar createGridDotsPath = function createGridDotsPath(size, fill) {\n  return (\n    /*#__PURE__*/\n    React__default.createElement(\"circle\", {\n      cx: size,\n      cy: size,\n      r: size,\n      fill: fill\n    })\n  );\n};\n\nvar _defaultColors;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar defaultColors = (_defaultColors = {}, _defineProperty(_defaultColors, BackgroundVariant.Dots, '#81818a'), _defineProperty(_defaultColors, BackgroundVariant.Lines, '#eee'), _defaultColors);\n\nvar transformSelector = function transformSelector(s) {\n  return s.transform;\n};\n\nvar Background = function Background(_ref) {\n  var _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? BackgroundVariant.Dots : _ref$variant,\n      _ref$gap = _ref.gap,\n      gap = _ref$gap === void 0 ? 15 : _ref$gap,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 0.4 : _ref$size,\n      color = _ref.color,\n      style = _ref.style,\n      className = _ref.className;\n\n  var _useStore = useStore(transformSelector),\n      _useStore2 = _slicedToArray(_useStore, 3),\n      x = _useStore2[0],\n      y = _useStore2[1],\n      scale = _useStore2[2]; // when there are multiple flows on a page we need to make sure that every background gets its own pattern.\n\n\n  var patternId = useMemo(function () {\n    return \"pattern-\".concat(Math.floor(Math.random() * 100000));\n  }, []);\n  var bgClasses = cc(['react-flow__background', 'react-flow__container', className]);\n  var scaledGap = gap * scale;\n  var xOffset = x % scaledGap;\n  var yOffset = y % scaledGap;\n  var isLines = variant === BackgroundVariant.Lines;\n  var bgColor = color ? color : defaultColors[variant];\n  var path = isLines ? createGridLinesPath(scaledGap, size, bgColor) : createGridDotsPath(size * scale, bgColor);\n  return (\n    /*#__PURE__*/\n    React__default.createElement(\"svg\", {\n      className: bgClasses,\n      style: _objectSpread(_objectSpread({}, style), {}, {\n        width: '100%',\n        height: '100%'\n      })\n    },\n    /*#__PURE__*/\n    React__default.createElement(\"pattern\", {\n      id: patternId,\n      x: xOffset,\n      y: yOffset,\n      width: scaledGap,\n      height: scaledGap,\n      patternUnits: \"userSpaceOnUse\"\n    }, path),\n    /*#__PURE__*/\n    React__default.createElement(\"rect\", {\n      x: \"0\",\n      y: \"0\",\n      width: \"100%\",\n      height: \"100%\",\n      fill: \"url(#\".concat(patternId, \")\")\n    }))\n  );\n};\n\nBackground.displayName = 'Background';\nvar index =\n/*#__PURE__*/\nmemo(Background);\nexport { index as default };","map":null,"metadata":{},"sourceType":"module"}