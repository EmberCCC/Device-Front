{"ast":null,"code":"\"use strict\";\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Logic:\n *  When `mode` === `picker`,\n *  click will trigger `onSelect` (if value changed trigger `onChange` also).\n *  Panel change will not trigger `onSelect` but trigger `onPanelChange`\n */\n\nvar React = __importStar(require(\"react\"));\n\nvar classnames_1 = __importDefault(require(\"classnames\"));\n\nvar KeyCode_1 = __importDefault(require(\"rc-util/lib/KeyCode\"));\n\nvar warning_1 = __importDefault(require(\"rc-util/lib/warning\"));\n\nvar useMergedState_1 = __importDefault(require(\"rc-util/lib/hooks/useMergedState\"));\n\nvar TimePanel_1 = __importDefault(require(\"./panels/TimePanel\"));\n\nvar DatetimePanel_1 = __importDefault(require(\"./panels/DatetimePanel\"));\n\nvar DatePanel_1 = __importDefault(require(\"./panels/DatePanel\"));\n\nvar WeekPanel_1 = __importDefault(require(\"./panels/WeekPanel\"));\n\nvar MonthPanel_1 = __importDefault(require(\"./panels/MonthPanel\"));\n\nvar YearPanel_1 = __importDefault(require(\"./panels/YearPanel\"));\n\nvar DecadePanel_1 = __importDefault(require(\"./panels/DecadePanel\"));\n\nvar dateUtil_1 = require(\"./utils/dateUtil\");\n\nvar PanelContext_1 = __importDefault(require(\"./PanelContext\"));\n\nvar uiUtil_1 = require(\"./utils/uiUtil\");\n\nvar RangeContext_1 = __importDefault(require(\"./RangeContext\"));\n\nvar getExtraFooter_1 = __importDefault(require(\"./utils/getExtraFooter\"));\n\nvar getRanges_1 = __importDefault(require(\"./utils/getRanges\"));\n\nfunction PickerPanel(props) {\n  var _classnames_1$default;\n\n  var _props$prefixCls = props.prefixCls,\n      prefixCls = _props$prefixCls === void 0 ? 'rc-picker' : _props$prefixCls,\n      className = props.className,\n      style = props.style,\n      locale = props.locale,\n      generateConfig = props.generateConfig,\n      value = props.value,\n      defaultValue = props.defaultValue,\n      pickerValue = props.pickerValue,\n      defaultPickerValue = props.defaultPickerValue,\n      disabledDate = props.disabledDate,\n      mode = props.mode,\n      _props$picker = props.picker,\n      picker = _props$picker === void 0 ? 'date' : _props$picker,\n      _props$tabIndex = props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex,\n      showTime = props.showTime,\n      showToday = props.showToday,\n      renderExtraFooter = props.renderExtraFooter,\n      hideHeader = props.hideHeader,\n      onSelect = props.onSelect,\n      onChange = props.onChange,\n      onPanelChange = props.onPanelChange,\n      onMouseDown = props.onMouseDown,\n      onPickerValueChange = props.onPickerValueChange,\n      _onOk = props.onOk,\n      components = props.components,\n      direction = props.direction;\n  var needConfirmButton = picker === 'date' && !!showTime || picker === 'time';\n\n  if (process.env.NODE_ENV !== 'production') {\n    warning_1.default(!value || generateConfig.isValidate(value), 'Invalidate date pass to `value`.');\n    warning_1.default(!value || generateConfig.isValidate(value), 'Invalidate date pass to `defaultValue`.');\n  } // ============================ State =============================\n\n\n  var panelContext = React.useContext(PanelContext_1.default);\n  var operationRef = panelContext.operationRef,\n      panelDivRef = panelContext.panelRef,\n      onContextSelect = panelContext.onSelect,\n      hideRanges = panelContext.hideRanges,\n      defaultOpenValue = panelContext.defaultOpenValue;\n\n  var _React$useContext = React.useContext(RangeContext_1.default),\n      inRange = _React$useContext.inRange,\n      panelPosition = _React$useContext.panelPosition,\n      rangedValue = _React$useContext.rangedValue,\n      hoverRangedValue = _React$useContext.hoverRangedValue;\n\n  var panelRef = React.useRef({}); // Handle init logic\n\n  var initRef = React.useRef(true); // Value\n\n  var _useMergedState_1$def = useMergedState_1.default(null, {\n    value: value,\n    defaultValue: defaultValue,\n    postState: function postState(val) {\n      if (!val && defaultOpenValue && picker === 'time') {\n        return defaultOpenValue;\n      }\n\n      return val;\n    }\n  }),\n      _useMergedState_1$def2 = _slicedToArray(_useMergedState_1$def, 2),\n      mergedValue = _useMergedState_1$def2[0],\n      setInnerValue = _useMergedState_1$def2[1]; // View date control\n\n\n  var _useMergedState_1$def3 = useMergedState_1.default(null, {\n    value: pickerValue,\n    defaultValue: defaultPickerValue || mergedValue,\n    postState: function postState(date) {\n      return date || generateConfig.getNow();\n    }\n  }),\n      _useMergedState_1$def4 = _slicedToArray(_useMergedState_1$def3, 2),\n      viewDate = _useMergedState_1$def4[0],\n      setInnerViewDate = _useMergedState_1$def4[1];\n\n  var setViewDate = function setViewDate(date) {\n    setInnerViewDate(date);\n\n    if (onPickerValueChange) {\n      onPickerValueChange(date);\n    }\n  }; // Panel control\n\n\n  var getInternalNextMode = function getInternalNextMode(nextMode) {\n    var getNextMode = uiUtil_1.PickerModeMap[picker];\n\n    if (getNextMode) {\n      return getNextMode(nextMode);\n    }\n\n    return nextMode;\n  }; // Save panel is changed from which panel\n\n\n  var _useMergedState_1$def5 = useMergedState_1.default(function () {\n    if (picker === 'time') {\n      return 'time';\n    }\n\n    return getInternalNextMode('date');\n  }, {\n    value: mode\n  }),\n      _useMergedState_1$def6 = _slicedToArray(_useMergedState_1$def5, 2),\n      mergedMode = _useMergedState_1$def6[0],\n      setInnerMode = _useMergedState_1$def6[1];\n\n  var _React$useState = React.useState(function () {\n    return mergedMode;\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      sourceMode = _React$useState2[0],\n      setSourceMode = _React$useState2[1];\n\n  var onInternalPanelChange = function onInternalPanelChange(newMode, viewValue) {\n    var nextMode = getInternalNextMode(newMode || mergedMode);\n    setSourceMode(mergedMode);\n    setInnerMode(nextMode);\n\n    if (onPanelChange && (mergedMode !== nextMode || dateUtil_1.isEqual(generateConfig, viewDate, viewDate))) {\n      onPanelChange(viewValue, nextMode);\n    }\n  };\n\n  var triggerSelect = function triggerSelect(date, type) {\n    var forceTriggerSelect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (mergedMode === picker || forceTriggerSelect) {\n      setInnerValue(date);\n\n      if (onSelect) {\n        onSelect(date);\n      }\n\n      if (onContextSelect) {\n        onContextSelect(date, type);\n      }\n\n      if (onChange && !dateUtil_1.isEqual(generateConfig, date, mergedValue)) {\n        onChange(date);\n      }\n    }\n  }; // ========================= Interactive ==========================\n\n\n  var onInternalKeyDown = function onInternalKeyDown(e) {\n    if (panelRef.current && panelRef.current.onKeyDown) {\n      if ([KeyCode_1.default.LEFT, KeyCode_1.default.RIGHT, KeyCode_1.default.UP, KeyCode_1.default.DOWN, KeyCode_1.default.PAGE_UP, KeyCode_1.default.PAGE_DOWN, KeyCode_1.default.ENTER].includes(e.which)) {\n        e.preventDefault();\n      }\n\n      return panelRef.current.onKeyDown(e);\n    }\n    /* istanbul ignore next */\n\n    /* eslint-disable no-lone-blocks */\n\n\n    {\n      warning_1.default(false, 'Panel not correct handle keyDown event. Please help to fire issue about this.');\n      return false;\n    }\n    /* eslint-enable no-lone-blocks */\n  };\n\n  var onInternalBlur = function onInternalBlur(e) {\n    if (panelRef.current && panelRef.current.onBlur) {\n      panelRef.current.onBlur(e);\n    }\n  };\n\n  if (operationRef) {\n    operationRef.current = {\n      onKeyDown: onInternalKeyDown,\n      onClose: function onClose() {\n        if (panelRef.current && panelRef.current.onClose) {\n          panelRef.current.onClose();\n        }\n      }\n    };\n  } // ============================ Effect ============================\n\n\n  React.useEffect(function () {\n    if (value && !initRef.current) {\n      setInnerViewDate(value);\n    }\n  }, [value]);\n  React.useEffect(function () {\n    initRef.current = false;\n  }, []); // ============================ Panels ============================\n\n  var panelNode;\n\n  var pickerProps = _objectSpread({}, props, {\n    operationRef: panelRef,\n    prefixCls: prefixCls,\n    viewDate: viewDate,\n    value: mergedValue,\n    onViewDateChange: setViewDate,\n    sourceMode: sourceMode,\n    onPanelChange: onInternalPanelChange,\n    disabledDate: picker === mergedMode ? disabledDate : undefined\n  });\n\n  delete pickerProps.onChange;\n  delete pickerProps.onSelect;\n\n  switch (mergedMode) {\n    case 'decade':\n      panelNode = React.createElement(DecadePanel_1.default, Object.assign({}, pickerProps, {\n        onSelect: function onSelect(date, type) {\n          setViewDate(date);\n          triggerSelect(date, type);\n        }\n      }));\n      break;\n\n    case 'year':\n      panelNode = React.createElement(YearPanel_1.default, Object.assign({}, pickerProps, {\n        onSelect: function onSelect(date, type) {\n          setViewDate(date);\n          triggerSelect(date, type);\n        }\n      }));\n      break;\n\n    case 'month':\n      panelNode = React.createElement(MonthPanel_1.default, Object.assign({}, pickerProps, {\n        onSelect: function onSelect(date, type) {\n          setViewDate(date);\n          triggerSelect(date, type);\n        }\n      }));\n      break;\n\n    case 'week':\n      panelNode = React.createElement(WeekPanel_1.default, Object.assign({}, pickerProps, {\n        onSelect: function onSelect(date, type) {\n          setViewDate(date);\n          triggerSelect(date, type);\n        }\n      }));\n      break;\n\n    case 'time':\n      delete pickerProps.showTime;\n      panelNode = React.createElement(TimePanel_1.default, Object.assign({}, pickerProps, _typeof(showTime) === 'object' ? showTime : null, {\n        onSelect: function onSelect(date, type) {\n          setViewDate(date);\n          triggerSelect(date, type);\n        }\n      }));\n      break;\n\n    default:\n      if (showTime) {\n        panelNode = React.createElement(DatetimePanel_1.default, Object.assign({}, pickerProps, {\n          onSelect: function onSelect(date, type) {\n            setViewDate(date);\n            triggerSelect(date, type);\n          }\n        }));\n      } else {\n        panelNode = React.createElement(DatePanel_1.default, Object.assign({}, pickerProps, {\n          onSelect: function onSelect(date, type) {\n            setViewDate(date);\n            triggerSelect(date, type);\n          }\n        }));\n      }\n\n  } // ============================ Footer ============================\n\n\n  var extraFooter;\n  var rangesNode;\n\n  if (!hideRanges) {\n    extraFooter = getExtraFooter_1.default(prefixCls, mergedMode, renderExtraFooter);\n    rangesNode = getRanges_1.default({\n      prefixCls: prefixCls,\n      components: components,\n      needConfirmButton: needConfirmButton,\n      okDisabled: !mergedValue,\n      locale: locale,\n      onNow: needConfirmButton && function () {\n        triggerSelect(generateConfig.getNow(), 'submit');\n      },\n      onOk: function onOk() {\n        if (mergedValue) {\n          triggerSelect(mergedValue, 'submit', true);\n\n          if (_onOk) {\n            _onOk(mergedValue);\n          }\n        }\n      }\n    });\n  }\n\n  var todayNode;\n\n  if (showToday && mergedMode === 'date' && picker === 'date' && !showTime) {\n    todayNode = React.createElement(\"a\", {\n      className: \"\".concat(prefixCls, \"-today-btn\"),\n      onClick: function onClick() {\n        triggerSelect(generateConfig.getNow(), 'mouse', true);\n      }\n    }, locale.today);\n  }\n\n  return React.createElement(PanelContext_1.default.Provider, {\n    value: _objectSpread({}, panelContext, {\n      hideHeader: 'hideHeader' in props ? hideHeader : panelContext.hideHeader,\n      hidePrevBtn: inRange && panelPosition === 'right',\n      hideNextBtn: inRange && panelPosition === 'left'\n    })\n  }, React.createElement(\"div\", {\n    tabIndex: tabIndex,\n    className: classnames_1.default(\"\".concat(prefixCls, \"-panel\"), className, (_classnames_1$default = {}, _defineProperty(_classnames_1$default, \"\".concat(prefixCls, \"-panel-has-range\"), rangedValue && rangedValue[0] && rangedValue[1]), _defineProperty(_classnames_1$default, \"\".concat(prefixCls, \"-panel-has-range-hover\"), hoverRangedValue && hoverRangedValue[0] && hoverRangedValue[1]), _defineProperty(_classnames_1$default, \"\".concat(prefixCls, \"-panel-rtl\"), direction === 'rtl'), _classnames_1$default)),\n    style: style,\n    onKeyDown: onInternalKeyDown,\n    onBlur: onInternalBlur,\n    onMouseDown: onMouseDown,\n    ref: panelDivRef\n  }, panelNode, extraFooter || rangesNode || todayNode ? React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-footer\")\n  }, extraFooter, rangesNode, todayNode) : null));\n}\n\nexports.default = PickerPanel;\n/* eslint-enable */","map":null,"metadata":{},"sourceType":"script"}