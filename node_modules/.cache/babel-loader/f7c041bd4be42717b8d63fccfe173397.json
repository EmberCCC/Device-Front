{"ast":null,"code":"import _objectSpread from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport _classCallCheck from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"F:\\\\documents\\\\bl-device-manage\\\\src\\\\layouts\\\\BasicManage\\\\DefinePage\\\\DeviceDefine\\\\DefineTable.js\";\n\nimport React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport GlobalList from 'components/GlobalList';\nimport FileModal from './FileModal';\nimport { setDeviceTypeColumns, setDeviceTypeForms } from '../../cell/methods';\nvar DefineTable = (_dec = inject('DeviceDefineStore'), _dec(_class = observer(_class = (_temp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DefineTable, _Component);\n\n  function DefineTable(props) {\n    var _this;\n\n    _classCallCheck(this, DefineTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DefineTable).call(this, props));\n\n    _this.handleFileQuery = function (record) {\n      _this.store.currentMain = record;\n\n      _this.setState({\n        fileVisible: !_this.state.fileVisible\n      });\n    };\n\n    _this.handleFileExport = function (record) {\n      console.log(record);\n    };\n\n    _this.handleFileDel = function (type, id) {\n      if (type === 'batch') {\n        if (_this.state.selectedRowKeys.length < 1) {\n          _Modal.warn({\n            title: '提示',\n            content: '请选择需要删除的文件'\n          });\n        } else {\n          _Modal.confirm({\n            title: '提示',\n            content: '确定删除选中的' + _this.state.selectedRowKeys.length + '条文件内容？',\n            okText: '确定',\n            cancelText: '取消',\n            onOk: function onOk() {\n              _this.store.delType({\n                ids: _this.state.selectedRowKeys\n              }, 'batch');\n            }\n          });\n        }\n      } else {\n        _Modal.confirm({\n          title: '提示',\n          content: '确定删除当前文件内容？',\n          okText: '确定',\n          cancelText: '取消',\n          onOk: function onOk() {\n            _this.store.delType({\n              id: id\n            }, 'single');\n          }\n        });\n      }\n    };\n\n    _this.handleStatus = function (record) {\n      var params = {};\n      var id = record.id,\n          typeStatus = record.typeStatus,\n          modelStatus = record.modelStatus;\n\n      if (_this.store.current === '1') {\n        params = {\n          id: id,\n          typeStatus: typeStatus === 1 ? 0 : 1\n        };\n      } else {\n        params = {\n          id: id,\n          modelStatus: modelStatus === 1 ? 0 : 1\n        };\n      }\n\n      _this.store.saveType(_objectSpread({}, params));\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        visible: !_this.state.visible\n      });\n    };\n\n    _this.handleFileSelect = function (selectedRowKeys) {\n      _this.setState({\n        selectedRowKeys: selectedRowKeys\n      });\n    };\n\n    _this.handleVisible = function () {\n      _this.store.visible = !_this.store.visible;\n    };\n\n    _this.handleSubmit = function (values) {\n      var currentMain = _this.store.currentMain;\n\n      var params = _objectSpread({}, currentMain, values);\n\n      _this.store.saveType(params);\n\n      _this.handleVisible();\n    };\n\n    _this.handleEdit = function (record) {\n      _this.store.status = 'edit';\n      _this.store.currentMain = record;\n\n      _this.handleVisible();\n    };\n\n    _this.store = _this.props.DeviceDefineStore;\n    _this.state = {\n      visible: false,\n      selectedRowKeys: [],\n      fileVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(DefineTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$store = this.store,\n          isLoading = _this$store.isLoading,\n          status = _this$store.status,\n          visible = _this$store.visible,\n          current = _this$store.current,\n          selectType = _this$store.selectType,\n          currentMain = _this$store.currentMain,\n          typeList = _this$store.typeList,\n          typePage = _this$store.typePage;\n      var rowSelection = {\n        selectedRowKeys: this.store.selectedRowKeys,\n        onChange: this.props.handleSelect\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(GlobalList, {\n        table: {\n          rowKey: 'id',\n          columns: setDeviceTypeColumns({\n            current: current,\n            handleEdit: this.handleEdit,\n            selectList: selectType,\n            handleFile: this.handleFileQuery,\n            handleStatus: this.handleStatus\n          }),\n          dataSource: typeList,\n          pagination: _objectSpread({}, typePage, {\n            onChange: function onChange(pageIndex, pageSize) {\n              _this2.store.getType({\n                pageIndex: pageIndex,\n                pageSize: pageSize\n              });\n            }\n          }),\n          loading: isLoading,\n          rowSelection: rowSelection\n        },\n        modal: {\n          visible: visible,\n          title: status === 'add' ? '新增' : '编辑',\n          onCancel: this.handleVisible,\n          onOk: this.handleSubmit,\n          isForm: true,\n          formColumns: setDeviceTypeForms({\n            status: status,\n            currentMain: currentMain,\n            current: current,\n            selectList: selectType\n          })\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), this.state.fileVisible && React.createElement(FileModal, {\n        visible: this.state.fileVisible,\n        onClose: this.handleFileQuery,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.store.getSelectType({});\n    }\n  }]);\n\n  return DefineTable;\n}(Component), _temp)) || _class) || _class);\nexport default DefineTable;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage\\src\\layouts\\BasicManage\\DefinePage\\DeviceDefine\\DefineTable.js"],"names":["React","Component","inject","observer","GlobalList","FileModal","setDeviceTypeColumns","setDeviceTypeForms","DefineTable","props","handleFileQuery","record","store","currentMain","setState","fileVisible","state","handleFileExport","console","log","handleFileDel","type","id","selectedRowKeys","length","warn","title","content","confirm","okText","cancelText","onOk","delType","ids","handleStatus","params","typeStatus","modelStatus","current","saveType","handleClose","visible","handleFileSelect","handleVisible","handleSubmit","values","handleEdit","status","DeviceDefineStore","isLoading","selectType","typeList","typePage","rowSelection","onChange","handleSelect","rowKey","columns","selectList","handleFile","dataSource","pagination","pageIndex","pageSize","getType","loading","onCancel","isForm","formColumns","getSelectType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport GlobalList from 'components/GlobalList';\nimport { Modal } from 'antd';\nimport FileModal from './FileModal'\nimport { setDeviceTypeColumns, setDeviceTypeForms, } from '../../cell/methods';\n\n@inject('DeviceDefineStore')\n@observer\nclass DefineTable extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.store = this.props.DeviceDefineStore;\n\t\tthis.state = {\n\t\t\tvisible: false,\n\t\t\tselectedRowKeys: [],\n\t\t\tfileVisible: false\n\t\t}\n\t}\n\trender() {\n\t\tconst {\n\t\t\tisLoading,\n\t\t\tstatus, visible, current, selectType,\n\t\t\tcurrentMain, typeList, typePage,\n\t\t} = this.store;\n\t\tconst rowSelection = {\n\t\t\tselectedRowKeys: this.store.selectedRowKeys,\n\t\t\tonChange: this.props.handleSelect\n\t\t};\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<GlobalList\n\t\t\t\t\ttable={{\n\t\t\t\t\t\trowKey: 'id',\n\t\t\t\t\t\tcolumns: setDeviceTypeColumns({\n\t\t\t\t\t\t\tcurrent, handleEdit: this.handleEdit,\n\t\t\t\t\t\t\tselectList: selectType,\n\t\t\t\t\t\t\thandleFile: this.handleFileQuery,\n\t\t\t\t\t\t\thandleStatus: this.handleStatus\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tdataSource: typeList,\n\t\t\t\t\t\tpagination: {\n\t\t\t\t\t\t\t...typePage,\n\t\t\t\t\t\t\tonChange: (pageIndex, pageSize) => {\n\t\t\t\t\t\t\t\tthis.store.getType({\n\t\t\t\t\t\t\t\t\tpageIndex,\n\t\t\t\t\t\t\t\t\tpageSize,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tloading: isLoading,\n\t\t\t\t\t\trowSelection,\n\t\t\t\t\t}}\n\t\t\t\t\tmodal={{\n\t\t\t\t\t\tvisible,\n\t\t\t\t\t\ttitle: status === 'add' ? '新增' : '编辑',\n\t\t\t\t\t\tonCancel: this.handleVisible,\n\t\t\t\t\t\tonOk: this.handleSubmit,\n\t\t\t\t\t\tisForm: true,\n\t\t\t\t\t\tformColumns: setDeviceTypeForms({\n\t\t\t\t\t\t\tstatus, currentMain, current, selectList: selectType\n\t\t\t\t\t\t}),\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t{\n\t\t\t\t\tthis.state.fileVisible && <FileModal\n\t\t\t\t\t\tvisible={this.state.fileVisible}\n\t\t\t\t\t\tonClose={this.handleFileQuery}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n\thandleFileQuery = (record) => {\n\t\tthis.store.currentMain = record;\n\t\tthis.setState({\n\t\t\tfileVisible: !this.state.fileVisible\n\t\t})\n\t}\n\thandleFileExport = (record) => {\n\t\tconsole.log(record)\n\n\t}\n\thandleFileDel = (type, id) => {\n\t\tif (type === 'batch') {\n\t\t\tif (this.state.selectedRowKeys.length < 1) {\n\t\t\t\tModal.warn({\n\t\t\t\t\ttitle: '提示',\n\t\t\t\t\tcontent: '请选择需要删除的文件'\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tModal.confirm({\n\t\t\t\t\ttitle: '提示',\n\t\t\t\t\tcontent:\n\t\t\t\t\t\t'确定删除选中的' +\n\t\t\t\t\t\tthis.state.selectedRowKeys.length +\n\t\t\t\t\t\t'条文件内容？',\n\t\t\t\t\tokText: '确定',\n\t\t\t\t\tcancelText: '取消',\n\t\t\t\t\tonOk: () => {\n\t\t\t\t\t\tthis.store.delType(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tids: this.state.selectedRowKeys\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'batch'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tModal.confirm({\n\t\t\t\ttitle: '提示',\n\t\t\t\tcontent: '确定删除当前文件内容？',\n\t\t\t\tokText: '确定',\n\t\t\t\tcancelText: '取消',\n\t\t\t\tonOk: () => {\n\t\t\t\t\tthis.store.delType(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'single'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\thandleStatus = record => {\n\t\tlet params = {}\n\t\tconst { id, typeStatus, modelStatus } = record\n\t\tif (this.store.current === '1') {\n\t\t\tparams = {\n\t\t\t\tid, typeStatus: typeStatus === 1 ? 0 : 1\n\t\t\t}\n\t\t} else {\n\t\t\tparams = {\n\t\t\t\tid, modelStatus: modelStatus === 1 ? 0 : 1\n\t\t\t}\n\t\t}\n\t\tthis.store.saveType({\n\t\t\t...params\n\t\t})\n\t}\n\thandleClose = () => {\n\t\tthis.setState({\n\t\t\tvisible: !this.state.visible\n\t\t})\n\t}\n\thandleFileSelect = selectedRowKeys => {\n\t\tthis.setState({ selectedRowKeys })\n\t}\n\t/* modal - operate */\n\thandleVisible = () => {\n\t\tthis.store.visible = !this.store.visible;\n\t};\n\t/* 弹窗提交操作 */\n\thandleSubmit = values => {\n\t\tconst { currentMain } = this.store;\n\t\tlet params = {\n\t\t\t...currentMain,\n\t\t\t...values\n\t\t}\n\t\tthis.store.saveType(params);\n\t\tthis.handleVisible();\n\t};\n\t/* 编辑弹窗 */\n\thandleEdit = record => {\n\t\tthis.store.status = 'edit';\n\t\tthis.store.currentMain = record;\n\t\tthis.handleVisible();\n\t};\n\tcomponentDidMount() {\n\t\tthis.store.getSelectType({})\n\t}\n}\nexport default DefineTable;\n"]},"metadata":{},"sourceType":"module"}