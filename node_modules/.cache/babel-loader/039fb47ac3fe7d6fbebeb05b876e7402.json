{"ast":null,"code":"import _classCallCheck from \"/Users/shoen/Desktop/\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF/bl-device-manage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shoen/Desktop/\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF/bl-device-manage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/shoen/Desktop/\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF/bl-device-manage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/shoen/Desktop/\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF/bl-device-manage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shoen/Desktop/\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF/bl-device-manage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nvar _dec,\n    _class,\n    _jsxFileName = \"/Users/shoen/Desktop/\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF/bl-device-manage/src/layouts/HomeLayout/HomePage/AreaCharts.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { Chart, Geom, Axis, Tooltip, Legend } from 'bizcharts';\nvar AreaCharts = (_dec = inject('HomeStore'), _dec(_class = observer(_class = /*#__PURE__*/function (_React$Component) {\n  _inherits(AreaCharts, _React$Component);\n\n  var _super = _createSuper(AreaCharts);\n\n  function AreaCharts() {\n    _classCallCheck(this, AreaCharts);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AreaCharts, [{\n    key: \"render\",\n    value: function render() {\n      var data = this.props.HomeStore.staffInfo;\n      var cols = {\n        count: {\n          min: 0\n        },\n        minute: {\n          min: 0\n        }\n      };\n      var chartIns = null;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Chart, {\n        height: 300,\n        data: data,\n        scale: cols,\n        forceFit: true,\n        onGetG2Instance: function onGetG2Instance(chart) {\n          chartIns = chart;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Axis, {\n        name: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Axis, {\n        name: \"count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Legend, {\n        custom: true,\n        allowAllCanceled: true,\n        items: [{\n          value: \"维修工时\",\n          marker: {\n            symbol: \"square\",\n            fill: \"#6236FF\",\n            radius: 5\n          }\n        }, {\n          value: \"维修次数\",\n          marker: {\n            symbol: \"square\",\n            fill: \"#32C5FF\",\n            radius: 5\n          }\n        }],\n        onClick: function onClick(ev) {\n          var item = ev.item;\n          var value = item.value === '维修次数' ? 'count' : 'minute';\n          var checked = ev.checked;\n          var geoms = chartIns.getAllGeoms();\n\n          for (var i = 0; i < geoms.length; i++) {\n            var geom = geoms[i];\n            console.log(geom.getYScale().field, checked);\n\n            if (geom.getYScale().field === value) {\n              if (checked) {\n                geom.show();\n              } else {\n                geom.hide();\n              }\n            }\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Tooltip, {\n        itemTpl: \"<li><span style=\\\"background-color:{color};\\\" class=\\\"g2-tooltip-marker\\\"></span>{name}: {value}</li>\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Geom, {\n        type: \"areaStack\",\n        position: \"name*count\",\n        tooltip: false,\n        color: [['l (270) 0:#FFFFFF 1:#32C5FF']],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Geom, {\n        type: \"lineStack\",\n        position: \"name*count\",\n        size: 2,\n        color: ['#32C5FF'],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Geom, {\n        type: \"areaStack\",\n        position: \"name*minute\",\n        tooltip: false,\n        color: ['l (270) 0:#FFFFFF 1:#6236FF'],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Geom, {\n        type: \"lineStack\",\n        position: \"name*minute\",\n        size: 2,\n        color: ['#6236FF'],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return AreaCharts;\n}(React.Component)) || _class) || _class);\nexport default AreaCharts;","map":{"version":3,"sources":["/Users/shoen/Desktop/设备运维前端/bl-device-manage/src/layouts/HomeLayout/HomePage/AreaCharts.js"],"names":["React","inject","observer","Chart","Geom","Axis","Tooltip","Legend","AreaCharts","data","props","HomeStore","staffInfo","cols","count","min","minute","chartIns","chart","value","marker","symbol","fill","radius","ev","item","checked","geoms","getAllGeoms","i","length","geom","console","log","getYScale","field","show","hide","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,SACIC,KADJ,EAEIC,IAFJ,EAGIC,IAHJ,EAIIC,OAJJ,EAKIC,MALJ,QAMO,WANP;IAUMC,U,WAFLP,MAAM,CAAC,WAAD,C,gBACNC,Q;;;;;;;;;;;;;6BAEY;AACL,UAAMO,IAAI,GAAG,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,SAAlC;AACA,UAAMC,IAAI,GAAG;AACTC,QAAAA,KAAK,EAAE;AACHC,UAAAA,GAAG,EAAE;AADF,SADE;AAITC,QAAAA,MAAM,EAAE;AACJD,UAAAA,GAAG,EAAE;AADD;AAJC,OAAb;AAQA,UAAIE,QAAQ,GAAG,IAAf;AACA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,GAAf;AAAoB,QAAA,IAAI,EAAER,IAA1B;AAAgC,QAAA,KAAK,EAAEI,IAAvC;AAA6C,QAAA,QAAQ,MAArD;AAAsD,QAAA,eAAe,EAAE,yBAAAK,KAAK,EAAI;AAC5ED,UAAAA,QAAQ,GAAGC,KAAX;AACH,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,eAII,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,eAKI,oBAAC,MAAD;AACI,QAAA,MAAM,EAAE,IADZ;AAEI,QAAA,gBAAgB,EAAE,IAFtB;AAGI,QAAA,KAAK,EAAE,CACH;AACIC,UAAAA,KAAK,EAAE,MADX;AAEIC,UAAAA,MAAM,EAAE;AACJC,YAAAA,MAAM,EAAE,QADJ;AAEJC,YAAAA,IAAI,EAAE,SAFF;AAGJC,YAAAA,MAAM,EAAE;AAHJ;AAFZ,SADG,EASH;AACIJ,UAAAA,KAAK,EAAE,MADX;AAEIC,UAAAA,MAAM,EAAE;AACJC,YAAAA,MAAM,EAAE,QADJ;AAEJC,YAAAA,IAAI,EAAE,SAFF;AAGJC,YAAAA,MAAM,EAAE;AAHJ;AAFZ,SATG,CAHX;AAqBI,QAAA,OAAO,EAAE,iBAAAC,EAAE,EAAI;AACX,cAAMC,IAAI,GAAGD,EAAE,CAACC,IAAhB;AACA,cAAMN,KAAK,GAAGM,IAAI,CAACN,KAAL,KAAe,MAAf,GAAwB,OAAxB,GAAkC,QAAhD;AACA,cAAMO,OAAO,GAAGF,EAAE,CAACE,OAAnB;AACA,cAAMC,KAAK,GAAGV,QAAQ,CAACW,WAAT,EAAd;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnC,gBAAME,IAAI,GAAGJ,KAAK,CAACE,CAAD,CAAlB;AACAG,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,SAAL,GAAiBC,KAA7B,EAAoCT,OAApC;;AACA,gBAAIK,IAAI,CAACG,SAAL,GAAiBC,KAAjB,KAA2BhB,KAA/B,EAAsC;AAClC,kBAAIO,OAAJ,EAAa;AACTK,gBAAAA,IAAI,CAACK,IAAL;AACH,eAFD,MAEO;AACHL,gBAAAA,IAAI,CAACM,IAAL;AACH;AACJ;AACJ;AACJ,SArCL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,eA2CI,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAC,uGAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA3CJ,eA4CI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,WAAX;AAAuB,QAAA,QAAQ,EAAC,YAAhC;AAA6C,QAAA,OAAO,EAAE,KAAtD;AAA6D,QAAA,KAAK,EAAE,CAAC,CAAC,6BAAD,CAAD,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5CJ,eA6CI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,WAAX;AAAuB,QAAA,QAAQ,EAAC,YAAhC;AAA6C,QAAA,IAAI,EAAE,CAAnD;AAAsD,QAAA,KAAK,EAAE,CAAC,SAAD,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7CJ,eA8CI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,WAAX;AAAuB,QAAA,QAAQ,EAAC,aAAhC;AAA8C,QAAA,OAAO,EAAE,KAAvD;AAA8D,QAAA,KAAK,EAAE,CAAC,6BAAD,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9CJ,eA+CI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,WAAX;AAAuB,QAAA,QAAQ,EAAC,aAAhC;AAA8C,QAAA,IAAI,EAAE,CAApD;AAAuD,QAAA,KAAK,EAAE,CAAC,SAAD,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/CJ,CADJ,CADJ;AAqDH;;;;EAjEoBrC,KAAK,CAACsC,S;AAmE/B,eAAe9B,UAAf","sourcesContent":["import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport {\n    Chart,\n    Geom,\n    Axis,\n    Tooltip,\n    Legend,\n} from 'bizcharts';\n\n@inject('HomeStore')\n@observer\nclass AreaCharts extends React.Component {\n    render() {\n        const data = this.props.HomeStore.staffInfo;\n        const cols = {\n            count: {\n                min: 0\n            },\n            minute: {\n                min: 0\n            }\n        };\n        let chartIns = null;\n        return (\n            <div>\n                <Chart height={300} data={data} scale={cols} forceFit onGetG2Instance={chart => {\n                    chartIns = chart;\n                }}>\n                    <Axis name=\"name\" />\n                    <Axis name=\"count\" />\n                    <Legend\n                        custom={true}\n                        allowAllCanceled={true}\n                        items={[\n                            {\n                                value: \"维修工时\",\n                                marker: {\n                                    symbol: \"square\",\n                                    fill: \"#6236FF\",\n                                    radius: 5\n                                }\n                            },\n                            {\n                                value: \"维修次数\",\n                                marker: {\n                                    symbol: \"square\",\n                                    fill: \"#32C5FF\",\n                                    radius: 5,\n                                }\n                            }\n                        ]}\n                        onClick={ev => {\n                            const item = ev.item;\n                            const value = item.value === '维修次数' ? 'count' : 'minute';\n                            const checked = ev.checked;\n                            const geoms = chartIns.getAllGeoms();\n                            for (let i = 0; i < geoms.length; i++) {\n                                const geom = geoms[i];\n                                console.log(geom.getYScale().field, checked)\n                                if (geom.getYScale().field === value) {\n                                    if (checked) {\n                                        geom.show();\n                                    } else {\n                                        geom.hide();\n                                    }\n                                }\n                            }\n                        }} />\n                    <Tooltip itemTpl=\"<li><span style=&quot;background-color:{color};&quot; class=&quot;g2-tooltip-marker&quot;></span>{name}: {value}</li>\" />\n                    <Geom type=\"areaStack\" position=\"name*count\" tooltip={false} color={[['l (270) 0:#FFFFFF 1:#32C5FF']]} />\n                    <Geom type=\"lineStack\" position=\"name*count\" size={2} color={['#32C5FF']} />\n                    <Geom type=\"areaStack\" position=\"name*minute\" tooltip={false} color={['l (270) 0:#FFFFFF 1:#6236FF']} />\n                    <Geom type=\"lineStack\" position=\"name*minute\" size={2} color={['#6236FF']} />\n                </Chart>\n            </div>\n        );\n    }\n}\nexport default AreaCharts;"]},"metadata":{},"sourceType":"module"}