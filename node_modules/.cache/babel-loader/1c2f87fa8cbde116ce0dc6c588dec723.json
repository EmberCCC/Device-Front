{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec,\n    _dec2,\n    _class,\n    _descriptor,\n    _descriptor2,\n    _descriptor3,\n    _temp,\n    _jsxFileName = \"F:\\\\documents\\\\bl-device-manage-test\\\\src\\\\stores\\\\BasicStore.js\";\n\n/*\r\n * @Author: your name\r\n * @Date: 2022-03-31 23:08:16\r\n * @LastEditTime: 2022-04-07 10:54:36\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n * @FilePath: \\bl-device-manage-test\\src\\stores\\SpareStore\r\n */\nimport { observable, action } from 'mobx';\nimport { isDataExist } from '../utils/dataTools';\nimport * as services from '../services/basic';\nvar Basic = (_dec = action.bound, _dec2 = action.bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function Basic() {\n    _classCallCheck(this, Basic);\n\n    _initializerDefineProperty(this, \"columns\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"dataSource\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"PageInfo\", _descriptor3, this);\n  }\n\n  _createClass(Basic, [{\n    key: \"queryAll\",\n    value: function () {\n      var _queryAll = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(params) {\n        var res, data, columns, dataSource, i, obj, operation, j, label;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                try {\n                  // let res = await services.getRequest(services.requestList.getFieldNameAndType, params);\n                  res = {};\n                  res.data = {};\n                  res.code = 0;\n                  res.data.data = [{\n                    \"fromId\": 1,\n                    \"formName\": \"机房\",\n                    \"data\": [{\n                      \"typeId\": 1,\n                      \"name\": \"Input\",\n                      \"label\": \"文本框\",\n                      \"attr\": {\n                        \"style\": {\n                          \"width\": \"60%\"\n                        },\n                        \"value\": \"机房一\",\n                        \"placeholder\": \"请输入\"\n                      }\n                    }, {\n                      \"typeId\": 1,\n                      \"name\": \"Input\",\n                      \"label\": \"文本框\",\n                      \"attr\": {\n                        \"style\": {\n                          \"width\": \"60%\"\n                        },\n                        \"value\": \"机房二\",\n                        \"placeholder\": \"请输入\"\n                      }\n                    }],\n                    \"tenement_id\": 1\n                  }, {\n                    \"fromId\": 1,\n                    \"formName\": \"机房\",\n                    \"data\": [{\n                      \"typeId\": 1,\n                      \"name\": \"Input\",\n                      \"label\": \"文本框\",\n                      \"attr\": {\n                        \"style\": {\n                          \"width\": \"60%\"\n                        },\n                        \"value\": \"机房2\",\n                        \"placeholder\": \"请输入\"\n                      }\n                    }, {\n                      \"typeId\": 1,\n                      \"name\": \"Input\",\n                      \"label\": \"文本框\",\n                      \"attr\": {\n                        \"style\": {\n                          \"width\": \"60%\"\n                        },\n                        \"value\": \"机房3\",\n                        \"placeholder\": \"请输入\"\n                      }\n                    }],\n                    \"tenement_id\": 1\n                  }];\n\n                  if (isDataExist(res)) {\n                    data = res.data.data;\n                    console.log(data);\n                    columns = [];\n                    dataSource = [];\n\n                    for (i = 0; i < data[0].data.length; i++) {\n                      obj = {};\n                      obj.title = data[0].data[0].label;\n                      obj.dataIndex = data[0].data[0].label;\n                      obj.key = data[0].data[0].label;\n                      columns.push(obj);\n                    }\n\n                    operation = {\n                      title: '操作',\n                      key: 'x',\n                      align: 'right',\n                      render: function render(text, record) {\n                        return React.createElement(\"span\", {\n                          __source: {\n                            fileName: _jsxFileName,\n                            lineNumber: 104\n                          },\n                          __self: this\n                        }, React.createElement(\"a\", {\n                          __source: {\n                            fileName: _jsxFileName,\n                            lineNumber: 106\n                          },\n                          __self: this\n                        }, \"\\u5220\\u9664\"));\n                      }\n                    };\n                    this.columns = columns;\n                    this.columns.push(operation);\n                    console.log(this.columns);\n\n                    for (i = 0; i < data.length; i++) {\n                      obj = {};\n                      obj.key = (i + 1).toString();\n\n                      for (j = 0; j < data[i].data.length; j++) {\n                        label = data[i].data[j].label;\n                        obj[label] = data[i].data[j].attr.value;\n                      }\n\n                      dataSource.push(obj);\n                    }\n\n                    this.dataSource = dataSource;\n                  }\n                } catch (error) {\n                  console.log(error);\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function queryAll(_x) {\n        return _queryAll.apply(this, arguments);\n      }\n\n      return queryAll;\n    }()\n  }, {\n    key: \"addNew\",\n    value: function () {\n      var _addNew = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return services.putRequest(services.requestList.saveDatabase, params);\n\n              case 3:\n                res = _context2.sent;\n                console.log(params);\n\n                if (!isDataExist(res)) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", res);\n\n              case 7:\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 9]]);\n      }));\n\n      function addNew(_x2) {\n        return _addNew.apply(this, arguments);\n      }\n\n      return addNew;\n    }()\n  }]);\n\n  return Basic;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"columns\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"dataSource\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"PageInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"queryAll\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"queryAll\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"addNew\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"addNew\"), _class.prototype)), _class));\nvar BasicStore = new Basic();\nexport default BasicStore;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage-test\\src\\stores\\BasicStore.js"],"names":["observable","action","isDataExist","services","Basic","bound","params","res","data","code","console","log","columns","dataSource","i","length","obj","title","label","dataIndex","key","push","operation","align","render","text","record","toString","j","attr","value","error","putRequest","requestList","saveDatabase","BasicStore"],"mappings":"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","sourcesContent":["/*\r\n * @Author: your name\r\n * @Date: 2022-03-31 23:08:16\r\n * @LastEditTime: 2022-04-07 10:54:36\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n * @FilePath: \\bl-device-manage-test\\src\\stores\\SpareStore\r\n */\r\nimport { observable, action } from 'mobx';\r\nimport { isDataExist } from '../utils/dataTools';\r\nimport * as services from '../services/basic';\r\n\r\nclass Basic {\r\n    @observable columns = [];\r\n    @observable dataSource = [];\r\n    @observable PageInfo = {};\r\n\r\n    @action.bound async queryAll(params) {\r\n        try {\r\n            // let res = await services.getRequest(services.requestList.getFieldNameAndType, params);\r\n            let res = {}\r\n            res.data = {}\r\n            res.code = 0\r\n            res.data.data = [\r\n                {\r\n                    \"fromId\": 1,\r\n                    \"formName\": \"机房\",\r\n                    \"data\": [\r\n                        {\r\n                            \"typeId\": 1,\r\n                            \"name\": \"Input\",\r\n                            \"label\": \"文本框\",\r\n                            \"attr\": {\r\n                                \"style\": {\r\n                                    \"width\": \"60%\"\r\n                                },\r\n                                \"value\": \"机房一\",\r\n                                \"placeholder\": \"请输入\"\r\n                            }\r\n                        },\r\n                        {\r\n                            \"typeId\": 1,\r\n                            \"name\": \"Input\",\r\n                            \"label\": \"文本框\",\r\n                            \"attr\": {\r\n                                \"style\": {\r\n                                    \"width\": \"60%\"\r\n                                },\r\n                                \"value\": \"机房二\",\r\n                                \"placeholder\": \"请输入\"\r\n                            }\r\n                        }\r\n                    ],\r\n                    \"tenement_id\": 1\r\n                },\r\n                {\r\n                    \"fromId\": 1,\r\n                    \"formName\": \"机房\",\r\n                    \"data\": [\r\n                        {\r\n                            \"typeId\": 1,\r\n                            \"name\": \"Input\",\r\n                            \"label\": \"文本框\",\r\n                            \"attr\": {\r\n                                \"style\": {\r\n                                    \"width\": \"60%\"\r\n                                },\r\n                                \"value\": \"机房2\",\r\n                                \"placeholder\": \"请输入\"\r\n                            }\r\n                        },\r\n                        {\r\n                            \"typeId\": 1,\r\n                            \"name\": \"Input\",\r\n                            \"label\": \"文本框\",\r\n                            \"attr\": {\r\n                                \"style\": {\r\n                                    \"width\": \"60%\"\r\n                                },\r\n                                \"value\": \"机房3\",\r\n                                \"placeholder\": \"请输入\"\r\n                            }\r\n                        }\r\n                    ],\r\n                    \"tenement_id\": 1\r\n                }]\r\n            if (isDataExist(res)) {\r\n                const data = res.data.data\r\n                console.log(data);\r\n                const columns = [];\r\n                const dataSource = [];\r\n                for (var i = 0; i < data[0].data.length; i++) {\r\n                    var obj = {}\r\n                    obj.title = data[0].data[0].label\r\n                    obj.dataIndex = data[0].data[0].label\r\n                    obj.key = data[0].data[0].label\r\n                    columns.push(obj)\r\n                }\r\n                let operation = {\r\n                    title: '操作',\r\n                    key: 'x',\r\n                    align: 'right',\r\n                    render: (text, record) => (\r\n                        <span>\r\n                           {/* <a onClick={e => this.delete(record)}>删除</a> */}\r\n                           <a>删除</a>\r\n                        </span>\r\n                    )\r\n\r\n                }\r\n                this.columns = columns\r\n                this.columns.push(operation)\r\n                console.log(this.columns);\r\n                for (var i = 0; i < data.length; i++) {\r\n                    var obj = {}\r\n                    obj.key = (i + 1).toString()\r\n                    for (var j = 0; j < data[i].data.length; j++) {\r\n                        const label = data[i].data[j].label\r\n                        obj[label] = data[i].data[j].attr.value\r\n                    }\r\n                    dataSource.push(obj)\r\n                }\r\n                this.dataSource = dataSource;\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    @action.bound async addNew(params) {\r\n        try {\r\n            let res = await services.putRequest(services.requestList.saveDatabase, params);\r\n            console.log(params);\r\n            if (isDataExist(res)) {\r\n                return res;\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nlet BasicStore = new Basic();\r\nexport default BasicStore;"]},"metadata":{},"sourceType":"module"}