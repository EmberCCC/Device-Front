{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nexports.getTodayTime = getTodayTime;\nexports.getTitleString = getTitleString;\nexports.getTodayTimeStr = getTodayTimeStr;\nexports.getMonthName = getMonthName;\nexports.syncTime = syncTime;\nexports.getTimeConfig = getTimeConfig;\nexports.isTimeValidByConfig = isTimeValidByConfig;\nexports.isTimeValid = isTimeValid;\nexports.isAllowedDate = isAllowedDate;\nexports.formatDate = formatDate;\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar defaultDisabledTime = {\n  disabledHours: function disabledHours() {\n    return [];\n  },\n  disabledMinutes: function disabledMinutes() {\n    return [];\n  },\n  disabledSeconds: function disabledSeconds() {\n    return [];\n  }\n};\n\nfunction getTodayTime(value) {\n  var today = (0, _moment2['default'])();\n  today.locale(value.locale()).utcOffset(value.utcOffset());\n  return today;\n}\n\nfunction getTitleString(value) {\n  return value.format('LL');\n}\n\nfunction getTodayTimeStr(value) {\n  var today = getTodayTime(value);\n  return getTitleString(today);\n}\n\nfunction getMonthName(month) {\n  var locale = month.locale();\n  var localeData = month.localeData();\n  return localeData[locale === 'zh-cn' ? 'months' : 'monthsShort'](month);\n}\n\nfunction syncTime(from, to) {\n  if (!_moment2['default'].isMoment(from) || !_moment2['default'].isMoment(to)) return;\n  to.hour(from.hour());\n  to.minute(from.minute());\n  to.second(from.second());\n  to.millisecond(from.millisecond());\n}\n\nfunction getTimeConfig(value, disabledTime) {\n  var disabledTimeConfig = disabledTime ? disabledTime(value) : {};\n  disabledTimeConfig = (0, _extends3['default'])({}, defaultDisabledTime, disabledTimeConfig);\n  return disabledTimeConfig;\n}\n\nfunction isTimeValidByConfig(value, disabledTimeConfig) {\n  var invalidTime = false;\n\n  if (value) {\n    var hour = value.hour();\n    var minutes = value.minute();\n    var seconds = value.second();\n    var disabledHours = disabledTimeConfig.disabledHours();\n\n    if (disabledHours.indexOf(hour) === -1) {\n      var disabledMinutes = disabledTimeConfig.disabledMinutes(hour);\n\n      if (disabledMinutes.indexOf(minutes) === -1) {\n        var disabledSeconds = disabledTimeConfig.disabledSeconds(hour, minutes);\n        invalidTime = disabledSeconds.indexOf(seconds) !== -1;\n      } else {\n        invalidTime = true;\n      }\n    } else {\n      invalidTime = true;\n    }\n  }\n\n  return !invalidTime;\n}\n\nfunction isTimeValid(value, disabledTime) {\n  var disabledTimeConfig = getTimeConfig(value, disabledTime);\n  return isTimeValidByConfig(value, disabledTimeConfig);\n}\n\nfunction isAllowedDate(value, disabledDate, disabledTime) {\n  if (disabledDate) {\n    if (disabledDate(value)) {\n      return false;\n    }\n  }\n\n  if (disabledTime) {\n    if (!isTimeValid(value, disabledTime)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction formatDate(value, format) {\n  if (!value) {\n    return '';\n  }\n\n  if (Array.isArray(format)) {\n    format = format[0];\n  }\n\n  return value.format(format);\n}","map":null,"metadata":{},"sourceType":"script"}