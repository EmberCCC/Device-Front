{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.flatArray = flatArray;\nexports.treeMap = treeMap;\nexports.flatFilter = flatFilter;\nexports.normalizeColumns = normalizeColumns;\nexports.generateValueMaps = generateValueMaps;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction flatArray() {\n  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var childrenName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'children';\n  var result = [];\n\n  var loop = function loop(array) {\n    array.forEach(function (item) {\n      if (item[childrenName]) {\n        var newItem = _extends({}, item);\n\n        delete newItem[childrenName];\n        result.push(newItem);\n\n        if (item[childrenName].length > 0) {\n          loop(item[childrenName]);\n        }\n      } else {\n        result.push(item);\n      }\n    });\n  };\n\n  loop(data);\n  return result;\n}\n\nfunction treeMap(tree, mapper) {\n  var childrenName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'children';\n  return tree.map(function (node, index) {\n    var extra = {};\n\n    if (node[childrenName]) {\n      extra[childrenName] = treeMap(node[childrenName], mapper, childrenName);\n    }\n\n    return _extends(_extends({}, mapper(node, index)), extra);\n  });\n}\n\nfunction flatFilter(tree, callback) {\n  return tree.reduce(function (acc, node) {\n    if (callback(node)) {\n      acc.push(node);\n    }\n\n    if (node.children) {\n      var children = flatFilter(node.children, callback);\n      acc.push.apply(acc, _toConsumableArray(children));\n    }\n\n    return acc;\n  }, []);\n}\n\nfunction normalizeColumns(elements) {\n  var columns = [];\n  React.Children.forEach(elements, function (element) {\n    if (!React.isValidElement(element)) {\n      return;\n    }\n\n    var column = _extends({}, element.props);\n\n    if (element.key) {\n      column.key = element.key;\n    }\n\n    if (element.type && element.type.__ANT_TABLE_COLUMN_GROUP) {\n      column.children = normalizeColumns(column.children);\n    }\n\n    columns.push(column);\n  });\n  return columns;\n}\n\nfunction generateValueMaps(items) {\n  var maps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  (items || []).forEach(function (_ref) {\n    var value = _ref.value,\n        children = _ref.children;\n    maps[value.toString()] = value;\n    generateValueMaps(children, maps);\n  });\n  return maps;\n}","map":null,"metadata":{},"sourceType":"script"}