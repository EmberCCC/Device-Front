{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n/* eslint-disable no-underscore-dangle,react/require-default-props */\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport ContainerRender from './ContainerRender';\nimport Portal from './Portal';\nimport switchScrollingEffect from './switchScrollingEffect';\nimport setStyle from './setStyle';\nvar openCount = 0;\nvar windowIsUndefined = !(typeof window !== 'undefined' && window.document && window.document.createElement);\nvar IS_REACT_16 = ('createPortal' in ReactDOM); // https://github.com/ant-design/ant-design/issues/19340\n// https://github.com/ant-design/ant-design/issues/19332\n\nvar cacheOverflow = {};\n\nvar PortalWrapper = /*#__PURE__*/function (_React$Component) {\n  _inherits(PortalWrapper, _React$Component);\n\n  var _super = _createSuper(PortalWrapper);\n\n  function PortalWrapper(props) {\n    var _this;\n\n    _classCallCheck(this, PortalWrapper);\n\n    _this = _super.call(this, props);\n\n    _this.getParent = function () {\n      var getContainer = _this.props.getContainer;\n\n      if (getContainer) {\n        if (typeof getContainer === 'string') {\n          return document.querySelectorAll(getContainer)[0];\n        }\n\n        if (typeof getContainer === 'function') {\n          return getContainer();\n        }\n\n        if (_typeof(getContainer) === 'object' && getContainer instanceof window.HTMLElement) {\n          return getContainer;\n        }\n      }\n\n      return document.body;\n    };\n\n    _this.getContainer = function () {\n      if (windowIsUndefined) {\n        return null;\n      }\n\n      if (!_this.container) {\n        _this.container = document.createElement('div');\n\n        var parent = _this.getParent();\n\n        if (parent) {\n          parent.appendChild(_this.container);\n        }\n      }\n\n      _this.setWrapperClassName();\n\n      return _this.container;\n    };\n\n    _this.setWrapperClassName = function () {\n      var wrapperClassName = _this.props.wrapperClassName;\n\n      if (_this.container && wrapperClassName && wrapperClassName !== _this.container.className) {\n        _this.container.className = wrapperClassName;\n      }\n    };\n\n    _this.savePortal = function (c) {\n      // Warning: don't rename _component\n      // https://github.com/react-component/util/pull/65#discussion_r352407916\n      _this._component = c;\n    };\n\n    _this.removeCurrentContainer = function (visible) {\n      _this.container = null;\n      _this._component = null;\n\n      if (!IS_REACT_16) {\n        if (visible) {\n          _this.renderComponent({\n            afterClose: _this.removeContainer,\n            onClose: function onClose() {},\n            visible: false\n          });\n        } else {\n          _this.removeContainer();\n        }\n      }\n    };\n\n    _this.switchScrollingEffect = function () {\n      if (openCount === 1 && !Object.keys(cacheOverflow).length) {\n        switchScrollingEffect(); // Must be set after switchScrollingEffect\n\n        cacheOverflow = setStyle({\n          overflow: 'hidden',\n          overflowX: 'hidden',\n          overflowY: 'hidden'\n        });\n      } else if (!openCount) {\n        setStyle(cacheOverflow);\n        cacheOverflow = {};\n        switchScrollingEffect(true);\n      }\n    };\n\n    var _visible = props.visible;\n    openCount = _visible ? openCount + 1 : openCount;\n    _this.state = {\n      _self: _assertThisInitialized(_this)\n    };\n    return _this;\n  }\n\n  _createClass(PortalWrapper, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.setWrapperClassName();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var visible = this.props.visible; // 离开时不会 render， 导到离开时数值不变，改用 func 。。\n\n      openCount = visible && openCount ? openCount - 1 : openCount;\n      this.removeCurrentContainer(visible);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          forceRender = _this$props.forceRender,\n          visible = _this$props.visible;\n      var portal = null;\n      var childProps = {\n        getOpenCount: function getOpenCount() {\n          return openCount;\n        },\n        getContainer: this.getContainer,\n        switchScrollingEffect: this.switchScrollingEffect\n      }; // suppport react15\n\n      if (!IS_REACT_16) {\n        return /*#__PURE__*/React.createElement(ContainerRender, {\n          parent: this,\n          visible: visible,\n          autoDestroy: false,\n          getComponent: function getComponent() {\n            var extra = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            return children(_objectSpread({}, extra, {}, childProps, {\n              ref: _this2.savePortal\n            }));\n          },\n          getContainer: this.getContainer,\n          forceRender: forceRender\n        }, function (_ref) {\n          var renderComponent = _ref.renderComponent,\n              removeContainer = _ref.removeContainer;\n          _this2.renderComponent = renderComponent;\n          _this2.removeContainer = removeContainer;\n          return null;\n        });\n      }\n\n      if (forceRender || visible || this._component) {\n        portal = /*#__PURE__*/React.createElement(Portal, {\n          getContainer: this.getContainer,\n          ref: this.savePortal\n        }, children(childProps));\n      }\n\n      return portal;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, _ref2) {\n      var prevProps = _ref2.prevProps,\n          _self = _ref2._self;\n      var visible = props.visible,\n          getContainer = props.getContainer;\n\n      if (prevProps) {\n        var prevVisible = prevProps.visible,\n            prevGetContainer = prevProps.getContainer;\n\n        if (visible !== prevVisible) {\n          openCount = visible && !prevVisible ? openCount + 1 : openCount - 1;\n        }\n\n        var getContainerIsFunc = typeof getContainer === 'function' && typeof prevGetContainer === 'function';\n\n        if (getContainerIsFunc ? getContainer.toString() !== prevGetContainer.toString() : getContainer !== prevGetContainer) {\n          _self.removeCurrentContainer(false);\n        }\n      }\n\n      return {\n        prevProps: props\n      };\n    }\n  }]);\n\n  return PortalWrapper;\n}(React.Component);\n\nPortalWrapper.propTypes = {\n  wrapperClassName: PropTypes.string,\n  forceRender: PropTypes.bool,\n  getContainer: PropTypes.any,\n  children: PropTypes.func,\n  visible: PropTypes.bool\n};\nexport default polyfill(PortalWrapper);","map":null,"metadata":{},"sourceType":"module"}