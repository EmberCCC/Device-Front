{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _rcAnimate = _interopRequireDefault(require(\"rc-animate\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _icons = require(\"@ant-design/icons\");\n\nvar _utils = require(\"./utils\");\n\nvar _tooltip = _interopRequireDefault(require(\"../tooltip\"));\n\nvar _progress = _interopRequireDefault(require(\"../progress\"));\n\nvar _configProvider = require(\"../config-provider\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar UploadList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UploadList, _React$Component);\n\n  function UploadList() {\n    var _this;\n\n    _classCallCheck(this, UploadList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UploadList).apply(this, arguments));\n\n    _this.handlePreview = function (file, e) {\n      var onPreview = _this.props.onPreview;\n\n      if (!onPreview) {\n        return;\n      }\n\n      e.preventDefault();\n      return onPreview(file);\n    };\n\n    _this.handleDownload = function (file) {\n      var onDownload = _this.props.onDownload;\n\n      if (typeof onDownload === 'function') {\n        onDownload(file);\n      } else if (file.url) {\n        window.open(file.url);\n      }\n    };\n\n    _this.handleClose = function (file) {\n      var onRemove = _this.props.onRemove;\n\n      if (onRemove) {\n        onRemove(file);\n      }\n    };\n\n    _this.handleIconRender = function (file) {\n      var _this$props = _this.props,\n          listType = _this$props.listType,\n          locale = _this$props.locale,\n          iconRender = _this$props.iconRender;\n\n      if (iconRender) {\n        return iconRender(file, listType);\n      }\n\n      var isLoading = file.status === 'uploading';\n      var fileIcon = (0, _utils.isImageUrl)(file) ? React.createElement(_icons.PictureTwoTone, null) : React.createElement(_icons.FileTwoTone, null);\n      var icon = isLoading ? React.createElement(_icons.LoadingOutlined, null) : React.createElement(_icons.PaperClipOutlined, null);\n\n      if (listType === 'picture') {\n        icon = isLoading ? React.createElement(_icons.LoadingOutlined, null) : fileIcon;\n      } else if (listType === 'picture-card') {\n        icon = isLoading ? locale.uploading : fileIcon;\n      }\n\n      return icon;\n    };\n\n    _this.handleActionIconRender = function (customIcon, callback, title) {\n      if (React.isValidElement(customIcon)) {\n        return React.cloneElement(customIcon, _extends(_extends({}, customIcon.props), {\n          title: title,\n          onClick: function onClick(e) {\n            callback();\n\n            if (customIcon.props.onClick) {\n              customIcon.props.onClick(e);\n            }\n          }\n        }));\n      }\n\n      return React.createElement(\"span\", {\n        title: title,\n        onClick: callback\n      }, customIcon);\n    };\n\n    _this.renderUploadList = function (_ref) {\n      var _classNames6;\n\n      var getPrefixCls = _ref.getPrefixCls,\n          direction = _ref.direction;\n      var _this$props2 = _this.props,\n          customizePrefixCls = _this$props2.prefixCls,\n          _this$props2$items = _this$props2.items,\n          items = _this$props2$items === void 0 ? [] : _this$props2$items,\n          listType = _this$props2.listType,\n          showPreviewIcon = _this$props2.showPreviewIcon,\n          showRemoveIcon = _this$props2.showRemoveIcon,\n          showDownloadIcon = _this$props2.showDownloadIcon,\n          customRemoveIcon = _this$props2.removeIcon,\n          customDownloadIcon = _this$props2.downloadIcon,\n          locale = _this$props2.locale,\n          progressAttr = _this$props2.progressAttr;\n      var prefixCls = getPrefixCls('upload', customizePrefixCls);\n      var list = items.map(function (file) {\n        var _classNames3, _classNames4;\n\n        var progress;\n\n        var iconNode = _this.handleIconRender(file);\n\n        var icon = React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-text-icon\")\n        }, iconNode);\n\n        if (listType === 'picture' || listType === 'picture-card') {\n          if (file.status === 'uploading' || !file.thumbUrl && !file.url) {\n            var _classNames;\n\n            var uploadingClassName = (0, _classnames[\"default\"])((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-list-item-thumbnail\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-list-item-file\"), file.status !== 'uploading'), _classNames));\n            icon = React.createElement(\"div\", {\n              className: uploadingClassName\n            }, iconNode);\n          } else {\n            var _classNames2;\n\n            var thumbnail = (0, _utils.isImageUrl)(file) ? React.createElement(\"img\", {\n              src: file.thumbUrl || file.url,\n              alt: file.name,\n              className: \"\".concat(prefixCls, \"-list-item-image\")\n            }) : iconNode;\n            var aClassName = (0, _classnames[\"default\"])((_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-list-item-thumbnail\"), true), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-list-item-file\"), !(0, _utils.isImageUrl)(file)), _classNames2));\n            icon = React.createElement(\"a\", {\n              className: aClassName,\n              onClick: function onClick(e) {\n                return _this.handlePreview(file, e);\n              },\n              href: file.url || file.thumbUrl,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\"\n            }, thumbnail);\n          }\n        }\n\n        if (file.status === 'uploading') {\n          // show loading icon if upload progress listener is disabled\n          var loadingProgress = 'percent' in file ? React.createElement(_progress[\"default\"], _extends({\n            type: \"line\"\n          }, progressAttr, {\n            percent: file.percent\n          })) : null;\n          progress = React.createElement(\"div\", {\n            className: \"\".concat(prefixCls, \"-list-item-progress\"),\n            key: \"progress\"\n          }, loadingProgress);\n        }\n\n        var infoUploadingClass = (0, _classnames[\"default\"])((_classNames3 = {}, _defineProperty(_classNames3, \"\".concat(prefixCls, \"-list-item\"), true), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-list-item-\").concat(file.status), true), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-list-item-list-type-\").concat(listType), true), _classNames3));\n        var linkProps = typeof file.linkProps === 'string' ? JSON.parse(file.linkProps) : file.linkProps;\n        var removeIcon = showRemoveIcon ? customRemoveIcon && _this.handleActionIconRender(customRemoveIcon, function () {\n          return _this.handleClose(file);\n        }, locale.removeFile) || React.createElement(_icons.DeleteOutlined, {\n          title: locale.removeFile,\n          onClick: function onClick() {\n            return _this.handleClose(file);\n          }\n        }) : null;\n        var downloadIcon = showDownloadIcon && file.status === 'done' ? customDownloadIcon && _this.handleActionIconRender(customDownloadIcon, function () {\n          return _this.handleDownload(file);\n        }, locale.downloadFile) || React.createElement(_icons.DownloadOutlined, {\n          title: locale.downloadFile,\n          onClick: function onClick() {\n            return _this.handleDownload(file);\n          }\n        }) : null;\n        var downloadOrDelete = listType !== 'picture-card' && React.createElement(\"span\", {\n          key: \"download-delete\",\n          className: \"\".concat(prefixCls, \"-list-item-card-actions \").concat(listType === 'picture' ? 'picture' : '')\n        }, downloadIcon && React.createElement(\"a\", {\n          title: locale.downloadFile\n        }, downloadIcon), removeIcon && React.createElement(\"a\", {\n          title: locale.removeFile\n        }, removeIcon));\n        var listItemNameClass = (0, _classnames[\"default\"])((_classNames4 = {}, _defineProperty(_classNames4, \"\".concat(prefixCls, \"-list-item-name\"), true), _defineProperty(_classNames4, \"\".concat(prefixCls, \"-list-item-name-icon-count-\").concat([downloadIcon, removeIcon].filter(function (x) {\n          return x;\n        }).length), true), _classNames4));\n        var preview = file.url ? [React.createElement(\"a\", _extends({\n          key: \"view\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: listItemNameClass,\n          title: file.name\n        }, linkProps, {\n          href: file.url,\n          onClick: function onClick(e) {\n            return _this.handlePreview(file, e);\n          }\n        }), file.name), downloadOrDelete] : [React.createElement(\"span\", {\n          key: \"view\",\n          className: listItemNameClass,\n          onClick: function onClick(e) {\n            return _this.handlePreview(file, e);\n          },\n          title: file.name\n        }, file.name), downloadOrDelete];\n        var style = {\n          pointerEvents: 'none',\n          opacity: 0.5\n        };\n        var previewIcon = showPreviewIcon ? React.createElement(\"a\", {\n          href: file.url || file.thumbUrl,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          style: file.url || file.thumbUrl ? undefined : style,\n          onClick: function onClick(e) {\n            return _this.handlePreview(file, e);\n          },\n          title: locale.previewFile\n        }, React.createElement(_icons.EyeOutlined, null)) : null;\n        var actions = listType === 'picture-card' && file.status !== 'uploading' && React.createElement(\"span\", {\n          className: \"\".concat(prefixCls, \"-list-item-actions\")\n        }, previewIcon, file.status === 'done' && downloadIcon, removeIcon);\n        var message;\n\n        if (file.response && typeof file.response === 'string') {\n          message = file.response;\n        } else {\n          message = file.error && file.error.statusText || locale.uploadError;\n        }\n\n        var iconAndPreview = React.createElement(\"span\", null, icon, preview);\n        var dom = React.createElement(\"div\", {\n          className: infoUploadingClass\n        }, React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-list-item-info\")\n        }, iconAndPreview), actions, React.createElement(_rcAnimate[\"default\"], {\n          transitionName: \"fade\",\n          component: \"\"\n        }, progress));\n        var listContainerNameClass = (0, _classnames[\"default\"])(_defineProperty({}, \"\".concat(prefixCls, \"-list-picture-card-container\"), listType === 'picture-card'));\n        return React.createElement(\"div\", {\n          key: file.uid,\n          className: listContainerNameClass\n        }, file.status === 'error' ? React.createElement(_tooltip[\"default\"], {\n          title: message\n        }, dom) : React.createElement(\"span\", null, dom));\n      });\n      var listClassNames = (0, _classnames[\"default\"])((_classNames6 = {}, _defineProperty(_classNames6, \"\".concat(prefixCls, \"-list\"), true), _defineProperty(_classNames6, \"\".concat(prefixCls, \"-list-\").concat(listType), true), _defineProperty(_classNames6, \"\".concat(prefixCls, \"-list-rtl\"), direction === 'rtl'), _classNames6));\n      var animationDirection = listType === 'picture-card' ? 'animate-inline' : 'animate';\n      return React.createElement(_rcAnimate[\"default\"], {\n        transitionName: \"\".concat(prefixCls, \"-\").concat(animationDirection),\n        component: \"div\",\n        className: listClassNames\n      }, list);\n    };\n\n    return _this;\n  }\n\n  _createClass(UploadList, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          listType = _this$props3.listType,\n          items = _this$props3.items,\n          previewFile = _this$props3.previewFile;\n\n      if (listType !== 'picture' && listType !== 'picture-card') {\n        return;\n      }\n\n      (items || []).forEach(function (file) {\n        if (typeof document === 'undefined' || typeof window === 'undefined' || !window.FileReader || !window.File || !(file.originFileObj instanceof File || file.originFileObj instanceof Blob) || file.thumbUrl !== undefined) {\n          return;\n        }\n\n        file.thumbUrl = '';\n\n        if (previewFile) {\n          previewFile(file.originFileObj).then(function (previewDataUrl) {\n            // Need append '' to avoid dead loop\n            file.thumbUrl = previewDataUrl || '';\n\n            _this2.forceUpdate();\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(_configProvider.ConfigConsumer, null, this.renderUploadList);\n    }\n  }]);\n\n  return UploadList;\n}(React.Component);\n\nexports[\"default\"] = UploadList;\nUploadList.defaultProps = {\n  listType: 'text',\n  progressAttr: {\n    strokeWidth: 2,\n    showInfo: false\n  },\n  showRemoveIcon: true,\n  showDownloadIcon: false,\n  showPreviewIcon: true,\n  previewFile: _utils.previewImage\n};","map":null,"metadata":{},"sourceType":"script"}