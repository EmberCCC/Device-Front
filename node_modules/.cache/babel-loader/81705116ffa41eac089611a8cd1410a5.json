{"ast":null,"code":"import \"antd/lib/checkbox/style\";\nimport _Checkbox from \"antd/lib/checkbox\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport _objectSpread from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _readOnlyError from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/readOnlyError\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nvar _jsxFileName = \"F:\\\\documents\\\\bl-device-manage-test\\\\src\\\\layouts\\\\FlowManage\\\\index.js\";\nimport React, { useState, useRef, useCallback, useMemo, useEffect } from 'react';\nimport ReactFlow, { ReactFlowProvider, addEdge, useNodesState, useEdgesState, Controls, MiniMap, MarkerType } from 'react-flow-renderer';\nimport * as services from '../../services/design';\nimport Sidebar from './Sidebar';\nimport FlowNode from './Node/FlowNode';\nimport CopyNode from './Node/CopyNode';\nimport EndNode from './Node/EndNode';\nimport './index.css';\nimport { isDataExist } from 'utils/dataTools';\nvar Header = _Layout.Header,\n    Sider = _Layout.Sider,\n    Content = _Layout.Content;\nvar Option = _Select.Option;\nvar initialNodes = [{\n  \"id\": \"0\",\n  \"type\": \"input\",\n  \"data\": {\n    \"label\": \"开始流程\",\n    'person': []\n  },\n  \"position\": {\n    \"x\": 254,\n    \"y\": -76\n  },\n  \"positionAbsolute\": {\n    \"x\": 254,\n    \"y\": -76\n  }\n}, {\n  \"id\": \"-1\",\n  \"type\": \"end\",\n  \"data\": {\n    \"label\": \"结束流程\",\n    'person': []\n  },\n  \"position\": {\n    \"x\": 198,\n    \"y\": 112\n  },\n  \"positionAbsolute\": {\n    \"x\": 198,\n    \"y\": 112\n  }\n}, {\n  \"id\": \"node_1\",\n  \"type\": \"FlowNode\",\n  \"position\": {\n    \"x\": 236.25,\n    \"y\": 32.5\n  },\n  \"data\": {\n    \"label\": \"FlowNode node\",\n    'person': []\n  },\n  \"positionAbsolute\": {\n    \"x\": 236.25,\n    \"y\": 32.5\n  }\n}];\nvar initialEdges = [{\n  \"source\": \"0\",\n  \"sourceHandle\": null,\n  \"target\": \"node_1\",\n  \"targetHandle\": \"top\",\n  \"markerEnd\": {\n    \"type\": \"arrow\"\n  },\n  \"id\": \"reactflow__edge-0-node_1top\"\n}, {\n  \"source\": \"node_1\",\n  \"sourceHandle\": \"bottom\",\n  \"target\": \"-1\",\n  \"targetHandle\": null,\n  \"markerEnd\": {\n    \"type\": \"arrow\"\n  },\n  \"id\": \"reactflow__edge-node_1bottom--1\"\n}];\nvar nodeTypes = {\n  FlowNode: FlowNode,\n  CopyNode: CopyNode,\n  end: EndNode\n};\nvar id = 0;\n\nvar getId = function getId() {\n  return \"node_\".concat(++id);\n};\n\nfunction DnDFlow(props) {\n  var reactFlowWrapper = useRef(null);\n\n  var _useNodesState = useNodesState(initialNodes),\n      _useNodesState2 = _slicedToArray(_useNodesState, 3),\n      nodes = _useNodesState2[0],\n      setNodes = _useNodesState2[1],\n      onNodesChange = _useNodesState2[2];\n\n  var _useEdgesState = useEdgesState(initialEdges),\n      _useEdgesState2 = _slicedToArray(_useEdgesState, 3),\n      edges = _useEdgesState2[0],\n      setEdges = _useEdgesState2[1],\n      onEdgesChange = _useEdgesState2[2];\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      perArr = _useState2[0],\n      setPerArr = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      reactFlowInstance = _useState4[0],\n      setReactFlowInstance = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nodeName = _useState6[0],\n      setNodeName = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      nodeId = _useState8[0],\n      setNodeId = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      personList = _useState10[0],\n      setPersonList = _useState10[1];\n\n  var children = [];\n  var field = []; // let personList = [];\n\n  var fieldProp = {}; // personList = Object.assign({},props.location.state.PersonListT)\n  // for (let i = 10; i < 36; i++) {\n  //   children.push(<Option key={i.toString(36) + i}>{i.toString(36) + i}</Option>);\n  // }\n\n  var obj = Object.assign({}, props.location.state.itemData);\n  Object.keys(obj).map(function (item) {\n    if (obj[item].properties != undefined && obj[item].properties.length != 0) {\n      obj[item].properties.map(function (item) {\n        field.push({\n          propertyId: item.propertyId,\n          name: item.name\n        });\n      });\n    }\n  });\n  field.map(function (item) {\n    fieldProp[item.propertyId] = [];\n  });\n  useEffect(function () {\n    setPersonList(Object.assign({}, props.location.state.PersonListT));\n    console.log(personList);\n    Object.keys(personList).map(function (item) {\n      if (personList[item] != undefined) {\n        children.push(React.createElement(Option, {\n          key: personList[item].id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, personList[item].nickName));\n      }\n    });\n  }, []);\n  useEffect(function () {\n    setNodes(function (nds) {\n      return nds.map(function (node) {\n        if (node.id === nodeId) {\n          // it's important that you create a new object here\n          // in order to notify react flow about the change\n          node.data = _objectSpread({}, node.data, {\n            label: nodeName,\n            person: perArr\n          });\n        }\n\n        return node;\n      });\n    });\n  }, [nodeName, setNodeName, perArr, setPerArr]);\n  var onConnect = useCallback(function (params) {\n    var obj = {\n      type: MarkerType.Arrow\n    };\n    params.markerEnd = obj;\n    setEdges(function (eds) {\n      return addEdge(params, eds);\n    });\n  }, []);\n  var onDragOver = useCallback(function (event) {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n  var onDrop = useCallback(function (event) {\n    event.preventDefault();\n    var reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    var type = event.dataTransfer.getData('application/reactflow'); // check if the dropped element is valid\n\n    if (typeof type === 'undefined' || !type) {\n      return;\n    }\n\n    var position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    });\n    var newNode = {\n      id: getId(),\n      type: type,\n      position: position,\n      data: {\n        label: \"\".concat(type, \" node\")\n      }\n    };\n    setNodes(function (nds) {\n      return nds.concat(newNode);\n    });\n  }, [reactFlowInstance]);\n  var onSave = useCallback(function () {\n    if (reactFlowInstance) {\n      var flow = reactFlowInstance.toObject();\n      personList = (_readOnlyError(\"personList\"), Object.assign({}, props.location.state.PersonListT));\n      var params = {};\n      params.firstFormId = 1;\n      params.edges = flow.edges;\n      params.nodes = [];\n      flow.nodes.map(function (item) {\n        var obj = {};\n        obj.id = item.id;\n        obj.type = item.type;\n        obj.position = item.position;\n        obj.positionAbsolute = item.positionAbsolute;\n        console.log(item.data.person);\n\n        if (item.data.person != undefined && item.data.person.length != 0) {\n          console.log(Number(item.data.person));\n          var person = personList[Number(item.data.person) - 1];\n          console.log(person);\n          item.data.principal = person['username'];\n          item.data.userId = person['id'];\n        }\n\n        obj.data = item.data;\n        params.nodes.push(obj);\n      });\n      console.log(params);\n\n      try {\n        var res = services.putRequest(services.requestList.addFlow, params);\n\n        if (isDataExist(res)) {\n          return res;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [reactFlowInstance]);\n  var onNodeClick = useCallback(function (event, node) {\n    setNodeId(node.id);\n    setPerArr(node.data.person);\n    setNodeName(node.data.label);\n  }, [nodeName], [nodeId]);\n\n  var handleChange = function handleChange(value) {\n    setPerArr(value);\n    console.log(\"selected \".concat(value));\n  };\n\n  function checkChange(checkedValues, a) {\n    fieldProp[a] = checkedValues;\n  }\n\n  return React.createElement(_Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, React.createElement(Header, {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, React.createElement(_Button, {\n    type: \"primary\",\n    className: \"save\",\n    onClick: onSave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, \"\\u4FDD\\u5B58\")), React.createElement(_Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, React.createElement(_Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, React.createElement(Header, {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, React.createElement(Sidebar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  })), React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dndflow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(ReactFlowProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"reactflow-wrapper\",\n    ref: reactFlowWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, React.createElement(ReactFlow, {\n    nodes: nodes,\n    edges: edges,\n    onNodesChange: onNodesChange,\n    onEdgesChange: onEdgesChange,\n    onConnect: onConnect,\n    onInit: setReactFlowInstance,\n    onDrop: onDrop,\n    onDragOver: onDragOver,\n    nodeTypes: nodeTypes,\n    onNodeClick: onNodeClick,\n    fitView: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, React.createElement(Controls, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }), React.createElement(MiniMap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }))))))))), React.createElement(Sider, {\n    style: {\n      backgroundColor: 'white'\n    },\n    width: \"300\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"updatenode__controls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, \"\\u8282\\u70B9\\u540D:\"), React.createElement(\"input\", {\n    value: nodeName,\n    onChange: function onChange(evt) {\n      return setNodeName(evt.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, \"\\u8D1F\\u8D23\\u4EBA\\uFF1A\"), React.createElement(_Select, {\n    // mode=\"multiple\"\n    allowClear: true,\n    style: {\n      width: '80%',\n      marginTop: '10px'\n    },\n    placeholder: \"Please select\",\n    value: perArr,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }, children)), field.map(function (item) {\n    return React.createElement(\"div\", {\n      className: \"dataInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, item.name, \":\"), React.createElement(_Checkbox.Group, {\n      name: item.propertyId,\n      options: [{\n        label: '可见',\n        value: 'vis'\n      }, {\n        label: '可编辑',\n        value: 'edit'\n      }],\n      onChange: function onChange(checkedValues) {\n        return checkChange(checkedValues, item.propertyId);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }));\n  })))));\n}\n\n;\nexport default DnDFlow;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage-test\\src\\layouts\\FlowManage\\index.js"],"names":["React","useState","useRef","useCallback","useMemo","useEffect","ReactFlow","ReactFlowProvider","addEdge","useNodesState","useEdgesState","Controls","MiniMap","MarkerType","services","Sidebar","FlowNode","CopyNode","EndNode","isDataExist","Header","Sider","Content","Option","initialNodes","initialEdges","nodeTypes","end","id","getId","DnDFlow","props","reactFlowWrapper","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","perArr","setPerArr","reactFlowInstance","setReactFlowInstance","nodeName","setNodeName","nodeId","setNodeId","personList","setPersonList","children","field","fieldProp","obj","Object","assign","location","state","itemData","keys","map","item","properties","undefined","length","push","propertyId","name","PersonListT","console","log","nickName","nds","node","data","label","person","onConnect","params","type","Arrow","markerEnd","eds","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","reactFlowBounds","current","getBoundingClientRect","getData","position","project","x","clientX","left","y","clientY","top","newNode","concat","onSave","flow","toObject","firstFormId","positionAbsolute","Number","principal","userId","res","putRequest","requestList","addFlow","error","onNodeClick","handleChange","value","checkChange","checkedValues","a","backgroundColor","evt","target","width","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback, useMemo, useEffect } from 'react';\r\nimport { Layout, Button, Menu, Dropdown, Divider, Select, Checkbox, List } from 'antd';\r\nimport ReactFlow, {\r\n  ReactFlowProvider,\r\n  addEdge,\r\n  useNodesState,\r\n  useEdgesState,\r\n  Controls,\r\n  MiniMap,\r\n  MarkerType\r\n} from 'react-flow-renderer';\r\nimport * as services from '../../services/design';\r\nimport Sidebar from './Sidebar';\r\nimport FlowNode from './Node/FlowNode'\r\nimport CopyNode from './Node/CopyNode'\r\nimport EndNode from './Node/EndNode'\r\n\r\nimport './index.css';\r\nimport { isDataExist } from 'utils/dataTools';\r\n\r\nconst { Header, Sider, Content } = Layout;\r\nconst { Option } = Select;\r\nconst initialNodes = [\r\n  {\r\n    \"id\": \"0\",\r\n    \"type\": \"input\",\r\n    \"data\": {\r\n      \"label\": \"开始流程\",\r\n      'person': []\r\n    },\r\n    \"position\": {\r\n      \"x\": 254,\r\n      \"y\": -76\r\n    },\r\n    \"positionAbsolute\": {\r\n      \"x\": 254,\r\n      \"y\": -76\r\n    }\r\n  },\r\n  {\r\n    \"id\": \"-1\",\r\n    \"type\": \"end\",\r\n    \"data\": {\r\n      \"label\": \"结束流程\",\r\n      'person': []\r\n\r\n    },\r\n    \"position\": {\r\n      \"x\": 198,\r\n      \"y\": 112\r\n    },\r\n    \"positionAbsolute\": {\r\n      \"x\": 198,\r\n      \"y\": 112\r\n    }\r\n  },\r\n  {\r\n    \"id\": \"node_1\",\r\n    \"type\": \"FlowNode\",\r\n    \"position\": {\r\n      \"x\": 236.25,\r\n      \"y\": 32.5\r\n    },\r\n    \"data\": {\r\n      \"label\": \"FlowNode node\",\r\n      'person': []\r\n    },\r\n    \"positionAbsolute\": {\r\n      \"x\": 236.25,\r\n      \"y\": 32.5\r\n    }\r\n  }\r\n];\r\nconst initialEdges = [\r\n  {\r\n    \"source\": \"0\",\r\n    \"sourceHandle\": null,\r\n    \"target\": \"node_1\",\r\n    \"targetHandle\": \"top\",\r\n    \"markerEnd\": {\r\n      \"type\": \"arrow\"\r\n    },\r\n    \"id\": \"reactflow__edge-0-node_1top\"\r\n  },\r\n  {\r\n    \"source\": \"node_1\",\r\n    \"sourceHandle\": \"bottom\",\r\n    \"target\": \"-1\",\r\n    \"targetHandle\": null,\r\n    \"markerEnd\": {\r\n      \"type\": \"arrow\"\r\n    },\r\n    \"id\": \"reactflow__edge-node_1bottom--1\"\r\n  }\r\n]\r\nconst nodeTypes = { FlowNode: FlowNode, CopyNode: CopyNode, end:EndNode };\r\n\r\nlet id = 0;\r\nconst getId = () => `node_${++id}`;\r\n\r\nfunction DnDFlow(props) {\r\n  const reactFlowWrapper = useRef(null);\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\r\n  const [perArr, setPerArr] = useState([]);\r\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n  const [nodeName, setNodeName] = useState('');\r\n  const [nodeId, setNodeId] = useState('');\r\n  const [personList, setPersonList] = useState({});\r\n\r\n  const children = [];\r\n  const field = [];\r\n  // let personList = [];\r\n  let fieldProp = {};\r\n  // personList = Object.assign({},props.location.state.PersonListT)\r\n \r\n \r\n  // for (let i = 10; i < 36; i++) {\r\n  //   children.push(<Option key={i.toString(36) + i}>{i.toString(36) + i}</Option>);\r\n  // }\r\n  let obj = Object.assign({}, props.location.state.itemData)\r\n  Object.keys(obj).map((item) => {\r\n    if (obj[item].properties != undefined && obj[item].properties.length != 0) {\r\n      obj[item].properties.map((item) => {\r\n        field.push({ propertyId: item.propertyId, name: item.name })\r\n      })\r\n    }\r\n  })\r\n  field.map((item) => {\r\n    fieldProp[item.propertyId] = []\r\n  })\r\n  useEffect(() => {\r\n    setPersonList(Object.assign({},props.location.state.PersonListT));\r\n    console.log(personList);\r\n    Object.keys(personList).map((item) => {\r\n      if (personList[item] != undefined) {\r\n        children.push(<Option key={personList[item].id}>{personList[item].nickName}</Option>)\r\n      }\r\n    })\r\n  },[])\r\n  useEffect(() => { \r\n    setNodes((nds) =>\r\n      nds.map((node) => {\r\n        if (node.id === nodeId) {\r\n          // it's important that you create a new object here\r\n          // in order to notify react flow about the change\r\n          node.data = {\r\n            ...node.data,\r\n            label: nodeName,\r\n            person: perArr\r\n          };\r\n        }\r\n        return node;\r\n      })\r\n    );\r\n  }, [nodeName, setNodeName, perArr, setPerArr]);\r\n\r\n  const onConnect = useCallback((params) => {\r\n    let obj = {\r\n      type: MarkerType.Arrow,\r\n    }\r\n    params.markerEnd = obj\r\n    setEdges((eds) => addEdge(params, eds))\r\n  }, []);\r\n\r\n  const onDragOver = useCallback((event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'move';\r\n  }, []);\r\n\r\n  const onDrop = useCallback(\r\n    (event) => {\r\n      event.preventDefault();\r\n\r\n      const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n      const type = event.dataTransfer.getData('application/reactflow');\r\n\r\n      // check if the dropped element is valid\r\n      if (typeof type === 'undefined' || !type) {\r\n        return;\r\n      }\r\n\r\n      const position = reactFlowInstance.project({\r\n        x: event.clientX - reactFlowBounds.left,\r\n        y: event.clientY - reactFlowBounds.top,\r\n      });\r\n      const newNode = {\r\n        id: getId(),\r\n        type,\r\n        position,\r\n        data: { label: `${type} node` },\r\n      };\r\n\r\n      setNodes((nds) => nds.concat(newNode));\r\n    },\r\n    [reactFlowInstance]\r\n  );\r\n\r\n  const onSave = useCallback(() => {\r\n    if (reactFlowInstance) {\r\n      const flow = reactFlowInstance.toObject();\r\n      personList = Object.assign({},props.location.state.PersonListT)\r\n      let params = {}\r\n      params.firstFormId = 1;\r\n      params.edges = flow.edges\r\n      params.nodes = []\r\n      flow.nodes.map((item) => {\r\n        let obj = {}\r\n        obj.id = item.id\r\n        obj.type = item.type\r\n        obj.position = item.position\r\n        obj.positionAbsolute = item.positionAbsolute\r\n        console.log(item.data.person);\r\n        if (item.data.person != undefined && item.data.person.length != 0) {\r\n          console.log(Number(item.data.person));\r\n          let person = personList[Number(item.data.person) - 1]\r\n          console.log(person);\r\n          item.data.principal = person['username'];\r\n          item.data.userId = person['id'];\r\n        }\r\n        obj.data = item.data\r\n        params.nodes.push(obj)\r\n      })\r\n      console.log(params);\r\n      try {\r\n        let res = services.putRequest(services.requestList.addFlow, params);\r\n        if (isDataExist(res)) {\r\n          return res;\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }, [reactFlowInstance]);\r\n\r\n  const onNodeClick = useCallback((event, node) => {\r\n    setNodeId(node.id)\r\n    setPerArr(node.data.person)\r\n    setNodeName(node.data.label)\r\n  }, [nodeName], [nodeId])\r\n\r\n  const handleChange = (value) => {\r\n    setPerArr(value);\r\n    console.log(`selected ${value}`);\r\n  }\r\n\r\n  function checkChange(checkedValues,a) {\r\n    fieldProp[a] = checkedValues\r\n  }\r\n  return (\r\n    <Layout>\r\n      <Header className='header'>\r\n        <Button type=\"primary\" className='save' onClick={onSave}>保存</Button>\r\n      </Header>\r\n      <Layout>\r\n        <Content>\r\n          <Layout>\r\n            <Header className='title'>\r\n              <Sidebar />\r\n            </Header>\r\n            <Content>\r\n              <div className=\"dndflow\">\r\n                <ReactFlowProvider>\r\n                  <Content>\r\n                    <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n                      <ReactFlow\r\n                        nodes={nodes}\r\n                        edges={edges}\r\n                        onNodesChange={onNodesChange}\r\n                        onEdgesChange={onEdgesChange}\r\n                        onConnect={onConnect}\r\n                        onInit={setReactFlowInstance}\r\n                        onDrop={onDrop}\r\n                        onDragOver={onDragOver}\r\n                        nodeTypes={nodeTypes}\r\n                        onNodeClick={onNodeClick}\r\n                        fitView\r\n                      >\r\n                        <Controls />\r\n                        <MiniMap />\r\n                      </ReactFlow>\r\n                    </div>\r\n                  </Content>\r\n                </ReactFlowProvider>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Content>\r\n        <Sider style={{ backgroundColor: 'white' }} width='300'>\r\n          <div className=\"updatenode__controls\">\r\n            <div>\r\n              <label>节点名:</label>\r\n              <input value={nodeName} onChange={(evt) => setNodeName(evt.target.value)} />\r\n            </div>\r\n            <div>\r\n              <label>负责人：</label>\r\n              <Select\r\n                // mode=\"multiple\"\r\n                allowClear\r\n                style={{ width: '80%', marginTop: '10px' }}\r\n                placeholder=\"Please select\"\r\n                value={perArr}\r\n                onChange={handleChange}\r\n              >\r\n                {children}\r\n              </Select>\r\n            </div>\r\n            {\r\n              field.map((item) => {\r\n                return <div className='dataInfo'>\r\n                  <label>{item.name}:</label>\r\n                  <Checkbox.Group name={item.propertyId} options={[{ label: '可见', value: 'vis' }, { label: '可编辑', value: 'edit' }]} onChange={(checkedValues) => checkChange(checkedValues,item.propertyId)}></Checkbox.Group>\r\n                </div>\r\n              })\r\n            }\r\n          </div>\r\n        </Sider>\r\n      </Layout>\r\n\r\n    </Layout>\r\n\r\n  );\r\n};\r\n\r\nexport default DnDFlow;\r\n"]},"metadata":{},"sourceType":"module"}