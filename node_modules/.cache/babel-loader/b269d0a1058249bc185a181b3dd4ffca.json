{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport _typeof from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/typeof\";\nimport _inherits from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _defineProperty from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport querystring from 'query-string';\nimport parseURL from './parseUrl';\nimport { forEach } from 'lodash';\nimport decodeHtml from './htmlTag';\nvar config = {}; // judge env to do something\n\nif (process.env.NODE_ENV === 'development') {\n  config.env = 'dev';\n} else if (process.env.NODE_ENV === 'production') {\n  config.env = 'product';\n} // let Pace;\n// (function loadPace(env) {\n//   if (env !== 'dev' && !Pace) {\n//     Pace = require('../pace.min.js');\n//   }\n// })(config.env);\n// Pace.start();\n// ====== Request Class ======\n\n\nvar defaultOptions = {\n  ignoreError: false\n};\n/*\n * Requests a URL, returning a promise.\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n * @return {object}           An object containing either \"data\" or \"err\"\n */\n\nexport function request(url, options) {\n  // console.log('test request: ',Pace);\n  // Pace && Pace.restart();\n  // setDefault\n  options = _objectSpread(_objectSpread({}, defaultOptions), options);\n  return fetch(url, options).then(checkStatus).then(parseJSON).then(function (res) {\n    return checkResponse(res, options);\n  }) // 接口通信成功，处理返回值\n  .catch(function (err) {\n    return handleError(err, options);\n  }); // 发生异常，进行兜底处理\n}\n/*\n * @param {string} url - 请求的接口地址\n * @param {object} data - 请求参数\n * @param {object} options 传递给fetch API的参数\n */\n\nexport function post(url, data, options) {\n  // 开发环境使用mock数据\n  // if (config.env === 'dev') {\n  //   url = '/api' + url;\n  // }\n  // data = injectSelfToken(data);\n  return request(url, _objectSpread({\n    method: 'POST',\n    credentials: 'same-origin',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': injectSelfToken()\n    },\n    body: stringify(_objectSpread({}, data))\n  }, options));\n}\nexport function put(url, data, options) {\n  // 开发环境使用mock数据\n  // if (config.env === 'dev') {\n  //   url = '/api' + url;\n  // }\n  // data = injectSelfToken(data);\n  console.log(JSON.stringify(data));\n\n  if (url === '/uaa/login/token') {\n    console.log(\"\".concat(url, \"?\").concat(stringify(data)));\n    return request(\"\".concat(url, \"?\").concat(stringify(data)), _objectSpread({\n      method: 'POST',\n      credentials: 'same-origin',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json;charset=utf-8',\n        'Authorization': injectSelfToken()\n      },\n      body: JSON.stringify(_objectSpread({}, data))\n    }, options));\n  }\n\n  return request(url, _objectSpread({\n    method: 'POST',\n    credentials: 'same-origin',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json;charset=utf-8',\n      'Authorization': injectSelfToken()\n    },\n    body: JSON.stringify(data)\n  }, options));\n}\nexport function postJson(url, data, options) {\n  // 开发环境使用mock数据\n  // if (config.env === 'dev') {\n  //   url = '/api' + url;\n  // }\n  return request(url, _objectSpread({\n    method: 'POST',\n    credentials: 'same-origin',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json;charset=utf-8',\n      'Authorization': injectSelfToken()\n    },\n    body: JSON.stringify(_objectSpread({}, data))\n  }, options));\n}\n/*\n *\n * @param {string} url 请求的接口地址\n * @param {object} data 请求参数\n * @param {object} options 传递给fetch API的参数\n */\n\nexport function get(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var options = arguments.length > 2 ? arguments[2] : undefined;\n  // 开发环境使用mock数据\n  // if (config.env === 'dev') {\n  //   url = '/api' + url;\n  // }\n  // data = data;\n  return request(\"\".concat(url, \"?\").concat(stringify(data)), _objectSpread({\n    method: 'GET',\n    credentials: 'same-origin',\n    headers: {\n      'Authorization': injectSelfToken()\n    }\n  }, options));\n} // ====== Response Class ======\n\nvar AbstractResponse = /*#__PURE__*/_createClass(function AbstractResponse(response, error) {\n  _classCallCheck(this, AbstractResponse);\n\n  if (response) {\n    this.code = response.code;\n    this.data = response; // 这里的返回数据为整个response对象\n  }\n\n  this.error = error || null;\n});\n/*\n * 错误时候的响应对象\n */\n\n\nvar ErrorResponse = /*#__PURE__*/function (_AbstractResponse) {\n  _inherits(ErrorResponse, _AbstractResponse);\n\n  var _super = _createSuper(ErrorResponse);\n\n  function ErrorResponse(error) {\n    var _this;\n\n    _classCallCheck(this, ErrorResponse);\n\n    _this = _super.call(this, null, error);\n    _this.errorType = 'response';\n    return _this;\n  }\n\n  return _createClass(ErrorResponse);\n}(AbstractResponse);\n/*\n * 接口正常时的返回对象\n */\n\n\nvar SuccessResponse = /*#__PURE__*/function (_AbstractResponse2) {\n  _inherits(SuccessResponse, _AbstractResponse2);\n\n  var _super2 = _createSuper(SuccessResponse);\n\n  function SuccessResponse(response) {\n    _classCallCheck(this, SuccessResponse);\n\n    return _super2.call(this, response, null);\n  }\n\n  return _createClass(SuccessResponse);\n}(AbstractResponse); // ====== Util ======\n\n/*\n * { a: 1, b: 2} ==> a=1&b=2\n */\n\n\nfunction stringify() {\n  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var a = Object.keys(obj).filter(function (k) {\n    return obj[k] || +obj[k] === 0;\n  }).map(function (k) {\n    var value = obj[k];\n\n    if (_typeof(value) === 'object') {\n      value = encodeURIComponent(JSON.stringify(value));\n    } else {\n      value = encodeURIComponent(value);\n    }\n\n    return encodeURIComponent(k) + '=' + value;\n  }).join('&');\n  return a;\n} // ====== 接口返回值处理具体逻辑 ======\n\n\nvar SUCCESS_CODE = [0]; // const SUCCESS_BOOL = true; // 返回success\n\nvar ErrorHandlers = {\n  '401.1': function _(error, options) {\n    return _Modal.error({\n      title: '提示',\n      content: '您当前的会话已超时，请重新登录。',\n      afterClose: function afterClose() {\n        if (error && error.data) {\n          var url = parseURL(error.data);\n          var searchs = [],\n              searchString = '',\n              querystringParse = querystring.parse(url.search);\n          querystringParse.redirectUrl = window.location.href;\n          forEach(querystringParse, function (value, key) {\n            searchs.push(\"\".concat(key, \"=\").concat(value));\n          });\n          searchs.length && (searchString = searchs.join('&'));\n          options && options.callback && options.callback();\n          var newUrl = \"\".concat(url.protocol, \"//\").concat(url.hostname);\n          url.port && (newUrl += \":\".concat(url.port));\n          url.pathname && (newUrl += \"\".concat(url.pathname));\n          searchString && (newUrl += \"?\".concat(searchString));\n          window.location.href = newUrl;\n        }\n      }\n    });\n  },\n  verifyCodeInvalid: function verifyCodeInvalid() {},\n  'NoPermission.Directory': function NoPermissionDirectory() {//TODO: do nothing\n  }\n};\n/*\n * 接口返回值处理逻辑，如果未捕获到匹配的处置方案，则抛出异常\n * @param {*} response\n * @param {*} options 配置可选项，如忽略错误\n */\n\nfunction checkResponse(response, options) {\n  var code = response.code;\n\n  if (response.tokenType != null) {\n    console.log(response.tokenType != null);\n    response.code = 0;\n  }\n\n  if (SUCCESS_CODE.includes(code) || response.code == 0) {\n    return new SuccessResponse(response);\n  } else {\n    if (code === -100) {\n      _Modal.warning({\n        content: '登录超时，请重新登陆',\n        okText: '确定',\n        onOk: function onOk() {\n          window.location.href = \"//\".concat(window.location.host, \"/login\");\n        }\n      });\n    } else {\n      throw new ErrorResponse(response);\n    }\n  }\n}\n\nfunction parseJSON(response) {\n  return response.json();\n}\n\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  var error = new Error(response.statusText);\n  error.response = response;\n  throw error;\n}\n\nvar dialogInstance; // 兜底的错误处理\n\nfunction handleError(err, options) {\n  var msg = null,\n      code = null;\n  console.log(err);\n\n  if (!options.ignoreError) {\n    // if (dialogInstance) return;\n    if (err.errorType === 'response') {\n      var responseError = err.error || null;\n\n      if (responseError) {\n        code = responseError.code || null;\n        msg = responseError.msg || responseError.message || null;\n        var handleResError = code && ErrorHandlers[code] ? ErrorHandlers[code] : null;\n\n        if (handleResError) {\n          return dialogInstance = handleResError(responseError, {\n            callback: function callback() {\n              dialogInstance = null;\n            }\n          });\n        }\n      }\n    }\n\n    msg = err.message || msg || 'Unknown error'; //针对faked与Pace的本地冲突的错误提示的关闭\n\n    if (msg === 'request.addEventListener is not a function') {\n      return;\n    }\n\n    return dialogInstance = _Modal.error({\n      title: '提示',\n      content: \"\".concat(decodeHtml(msg)),\n      afterClose: function afterClose() {\n        dialogInstance = null;\n      }\n    });\n  }\n\n  throw new ErrorResponse(err);\n}\n/*\n * 引入验证token\n */\n\n\nfunction injectSelfToken() {\n  var selfToken = sessionStorage.getItem('selfToken');\n  return selfToken;\n}","map":{"version":3,"names":["querystring","parseURL","forEach","decodeHtml","config","process","env","NODE_ENV","defaultOptions","ignoreError","request","url","options","fetch","then","checkStatus","parseJSON","res","checkResponse","catch","err","handleError","post","data","method","credentials","headers","Accept","injectSelfToken","body","stringify","put","console","log","JSON","postJson","get","AbstractResponse","response","error","code","ErrorResponse","errorType","SuccessResponse","obj","a","Object","keys","filter","k","map","value","encodeURIComponent","join","SUCCESS_CODE","ErrorHandlers","title","content","afterClose","searchs","searchString","querystringParse","parse","search","redirectUrl","window","location","href","key","push","length","callback","newUrl","protocol","hostname","port","pathname","verifyCodeInvalid","tokenType","includes","warning","okText","onOk","host","json","status","Error","statusText","dialogInstance","msg","responseError","message","handleResError","selfToken","sessionStorage","getItem"],"sources":["F:/documents/bl-device-manage-test/src/utils/request.js"],"sourcesContent":["import { Modal } from 'antd';\nimport querystring from 'query-string';\nimport parseURL from './parseUrl';\nimport { forEach } from 'lodash';\nimport decodeHtml from './htmlTag';\n\nlet config = {};\n// judge env to do something\nif (process.env.NODE_ENV === 'development') {\n  config.env = 'dev';\n} else if (process.env.NODE_ENV === 'production') {\n  config.env = 'product'\n}\n\n// let Pace;\n// (function loadPace(env) {\n//   if (env !== 'dev' && !Pace) {\n//     Pace = require('../pace.min.js');\n//   }\n// })(config.env);\n\n// Pace.start();\n// ====== Request Class ======\nconst defaultOptions = {\n  ignoreError: false\n};\n\n/*\n * Requests a URL, returning a promise.\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n * @return {object}           An object containing either \"data\" or \"err\"\n */\n\nexport function request(url, options) {\n  // console.log('test request: ',Pace);\n  // Pace && Pace.restart();\n  // setDefault\n  options = {\n    ...defaultOptions,\n    ...options\n  };\n  return (\n    fetch(url, options)\n      .then(checkStatus)\n      .then(parseJSON)\n      .then(res => checkResponse(res, options)) // 接口通信成功，处理返回值\n      .catch(err => handleError(err, options))\n  ); // 发生异常，进行兜底处理\n}\n\n/*\n * @param {string} url - 请求的接口地址\n * @param {object} data - 请求参数\n * @param {object} options 传递给fetch API的参数\n */\nexport function post(url, data, options) {\n  // 开发环境使用mock数据\n  // if (config.env === 'dev') {\n  //   url = '/api' + url;\n  // }\n  // data = injectSelfToken(data);\n  return request(url, {\n    method: 'POST',\n    credentials: 'same-origin',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': injectSelfToken()\n    },\n    body: stringify({\n      ...data\n    }),\n    ...options\n  });\n}\n\nexport function put(url, data, options) {\n  // 开发环境使用mock数据\n  // if (config.env === 'dev') {\n  //   url = '/api' + url;\n  // }\n  // data = injectSelfToken(data);\n  console.log(JSON.stringify(data));\n  if(url === '/uaa/login/token'){\n    console.log(`${url}?${stringify(data)}`)\n    return request(`${url}?${stringify(data)}`, {\n      method: 'POST',\n      credentials: 'same-origin',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json;charset=utf-8',\n        'Authorization': injectSelfToken()\n      },\n      body: JSON.stringify({\n        ...data,\n      }),\n      ...options\n    });\n  }\n  return request(url, {\n    method: 'POST',\n    credentials: 'same-origin',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json;charset=utf-8',\n      'Authorization': injectSelfToken()\n    },\n    body: JSON.stringify(data),\n    ...options\n  });\n}\n\nexport function postJson(url, data, options) {\n  // 开发环境使用mock数据\n  // if (config.env === 'dev') {\n  //   url = '/api' + url;\n  // }\n  return request(url, {\n    method: 'POST',\n    credentials: 'same-origin',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json;charset=utf-8',\n      'Authorization': injectSelfToken()\n    },\n    body: JSON.stringify({\n      ...data,\n    }),\n    ...options\n  });\n}\n\n/*\n *\n * @param {string} url 请求的接口地址\n * @param {object} data 请求参数\n * @param {object} options 传递给fetch API的参数\n */\nexport function get(url, data = {}, options) {\n  // 开发环境使用mock数据\n  // if (config.env === 'dev') {\n  //   url = '/api' + url;\n  // }\n  // data = data;\n  return request(`${url}?${stringify(data)}`, {\n    method: 'GET',\n    credentials: 'same-origin',\n    headers: {\n      'Authorization': injectSelfToken()\n    },\n    ...options\n  });\n}\n\n\n// ====== Response Class ======\n\nclass AbstractResponse {\n  constructor(response, error) {\n    if (response) {\n        this.code = response.code;\n        this.data = response; // 这里的返回数据为整个response对象\n    }\n    this.error = error || null;\n  }\n}\n\n/*\n * 错误时候的响应对象\n */\nclass ErrorResponse extends AbstractResponse {\n  constructor(error) {\n    super(null, error);\n    this.errorType = 'response';\n  }\n}\n\n/*\n * 接口正常时的返回对象\n */\nclass SuccessResponse extends AbstractResponse {\n  constructor(response) {\n    super(response, null);\n  }\n}\n// ====== Util ======\n/*\n * { a: 1, b: 2} ==> a=1&b=2\n */\nfunction stringify(obj = {}) {\n  let a = Object.keys(obj)\n    .filter(k => obj[k] || +obj[k] === 0)\n    .map(k => {\n      let value = obj[k];\n      if (typeof value === 'object') {\n        value = encodeURIComponent(JSON.stringify(value));\n      } else {\n        value = encodeURIComponent(value);\n      }\n      return encodeURIComponent(k) + '=' + value;\n    })\n    .join('&');\n  return a;\n}\n\n// ====== 接口返回值处理具体逻辑 ======\nconst SUCCESS_CODE = [\n  0\n];\n// const SUCCESS_BOOL = true; // 返回success\nconst ErrorHandlers = {\n  '401.1': function (error, options) {\n    return Modal.error({\n      title: '提示',\n      content: '您当前的会话已超时，请重新登录。',\n      afterClose: () => {\n        if (error && error.data) {\n          let url = parseURL(error.data);\n          let searchs = [],\n            searchString = '',\n            querystringParse = querystring.parse(url.search);\n          querystringParse.redirectUrl = window.location.href;\n          forEach(querystringParse, (value, key) => {\n            searchs.push(`${key}=${value}`);\n          });\n          searchs.length && (searchString = searchs.join('&'));\n          options && options.callback && options.callback();\n\n          let newUrl = `${url.protocol}//${url.hostname}`;\n          url.port && (newUrl += `:${url.port}`);\n          url.pathname && (newUrl += `${url.pathname}`);\n          searchString && (newUrl += `?${searchString}`);\n          window.location.href = newUrl;\n        }\n      }\n    });\n  },\n  verifyCodeInvalid: () => { },\n  'NoPermission.Directory': function () {\n    //TODO: do nothing\n  }\n};\n\n\n/*\n * 接口返回值处理逻辑，如果未捕获到匹配的处置方案，则抛出异常\n * @param {*} response\n * @param {*} options 配置可选项，如忽略错误\n */\nfunction checkResponse(response, options) {\n  const { code, } = response;\n  if(response.tokenType != null){\n    console.log(response.tokenType != null);\n    response.code = 0\n  }\n  if (SUCCESS_CODE.includes(code) || response.code == 0) {\n    return new SuccessResponse(response);\n  } else {\n    if (code === -100) {\n      Modal.warning({\n        content: '登录超时，请重新登陆',\n        okText: '确定',\n        onOk: () => {\n          window.location.href = `//${window.location.host}/login`;\n        }\n      })\n    }else{\n      throw new ErrorResponse(response);\n    }\n  }\n}\n\nfunction parseJSON(response) {\n  return response.json();\n}\n\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n  const error = new Error(response.statusText);\n  error.response = response;\n  throw error;\n}\n\nlet dialogInstance;\n\n// 兜底的错误处理\nfunction handleError(err, options) {\n  let msg = null,\n    code = null;\n    console.log(err)\n  if (!options.ignoreError) {\n    // if (dialogInstance) return;\n    if (err.errorType === 'response') {\n      let responseError = err.error || null;\n      if (responseError) {\n        code = responseError.code || null;\n        msg = responseError.msg || responseError.message || null;\n        let handleResError =\n          code && ErrorHandlers[code] ? ErrorHandlers[code] : null;\n\n        if (handleResError) {\n          return (dialogInstance = handleResError(responseError, {\n            callback: () => {\n              dialogInstance = null;\n            }\n          }));\n        }\n      }\n    }\n    msg = err.message || msg || 'Unknown error';\n\n    //针对faked与Pace的本地冲突的错误提示的关闭\n    if (msg === 'request.addEventListener is not a function') {\n      return;\n    }\n    return (dialogInstance = Modal.error({\n      title: '提示',\n      content: `${decodeHtml(msg)}`,\n      afterClose: () => {\n        dialogInstance = null;\n      }\n    }));\n  }\n  throw new ErrorResponse(err);\n}\n\n/*\n * 引入验证token\n */\nfunction injectSelfToken() {\n  let selfToken = sessionStorage.getItem('selfToken');\n  return selfToken\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}