{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\")[\"default\"];\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _HolderOutlined = _interopRequireDefault(require(\"@ant-design/icons/HolderOutlined\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _rcTree = _interopRequireWildcard(require(\"rc-tree\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _configProvider = require(\"../config-provider\");\n\nvar _motion = _interopRequireDefault(require(\"../_util/motion\"));\n\nvar _DirectoryTree = _interopRequireDefault(require(\"./DirectoryTree\"));\n\nvar _dropIndicator = _interopRequireDefault(require(\"./utils/dropIndicator\"));\n\nvar _iconUtil = _interopRequireDefault(require(\"./utils/iconUtil\"));\n\nvar Tree = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _classNames;\n\n  var _React$useContext = React.useContext(_configProvider.ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction,\n      virtual = _React$useContext.virtual;\n\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      showIcon = props.showIcon,\n      showLine = props.showLine,\n      _switcherIcon = props.switcherIcon,\n      blockNode = props.blockNode,\n      children = props.children,\n      checkable = props.checkable,\n      selectable = props.selectable,\n      draggable = props.draggable;\n  var prefixCls = getPrefixCls('tree', customizePrefixCls);\n  var newProps = (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, props), {\n    showLine: Boolean(showLine),\n    dropIndicatorRender: _dropIndicator[\"default\"]\n  });\n  var draggableConfig = React.useMemo(function () {\n    if (!draggable) {\n      return false;\n    }\n\n    var mergedDraggable = {};\n\n    switch ((0, _typeof2[\"default\"])(draggable)) {\n      case 'function':\n        mergedDraggable.nodeDraggable = draggable;\n        break;\n\n      case 'object':\n        mergedDraggable = (0, _extends2[\"default\"])({}, draggable);\n        break;\n\n      default: // Do nothing\n\n    }\n\n    if (mergedDraggable.icon !== false) {\n      mergedDraggable.icon = mergedDraggable.icon || /*#__PURE__*/React.createElement(_HolderOutlined[\"default\"], null);\n    }\n\n    return mergedDraggable;\n  }, [draggable]);\n  return /*#__PURE__*/React.createElement(_rcTree[\"default\"], (0, _extends2[\"default\"])({\n    itemHeight: 20,\n    ref: ref,\n    virtual: virtual\n  }, newProps, {\n    prefixCls: prefixCls,\n    className: (0, _classnames[\"default\"])((_classNames = {}, (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-icon-hide\"), !showIcon), (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-block-node\"), blockNode), (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-unselectable\"), !selectable), (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className),\n    direction: direction,\n    checkable: checkable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-checkbox-inner\")\n    }) : checkable,\n    selectable: selectable,\n    switcherIcon: function switcherIcon(nodeProps) {\n      return (0, _iconUtil[\"default\"])(prefixCls, _switcherIcon, showLine, nodeProps);\n    },\n    draggable: draggableConfig\n  }), children);\n});\nTree.TreeNode = _rcTree.TreeNode;\nTree.DirectoryTree = _DirectoryTree[\"default\"];\nTree.defaultProps = {\n  checkable: false,\n  selectable: true,\n  showIcon: false,\n  motion: (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, _motion[\"default\"]), {\n    motionAppear: false\n  }),\n  blockNode: false\n};\nvar _default = Tree;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}