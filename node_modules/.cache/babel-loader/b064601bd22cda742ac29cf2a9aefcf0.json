{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport _classCallCheck from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nvar _dec,\n    _dec2,\n    _class,\n    _temp,\n    _jsxFileName = \"F:\\\\documents\\\\bl-device-manage-test\\\\src\\\\layouts\\\\BasicManage\\\\ComputerPage\\\\index.js\";\n\n/*\r\n * @Author: your name\r\n * @Date: 2022-04-02 11:12:08\r\n * @LastEditTime: 2022-04-08 20:52:48\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n * @FilePath: \\bl-device-manage-test\\src\\layouts\\BasicManage\\ComputerPage\\index.js\r\n */\nimport { inject, observer } from 'mobx-react';\nimport React, { Component } from 'react';\nimport GlobalForm from 'components/GlobalForm';\nimport { MenuObj } from 'constants/configs';\nimport { checkCurrentMenu } from 'utils/dataTools';\nimport { toJS } from 'mobx';\nimport GlobalTabel from 'components/GlobalTabel';\nvar ComputerPage = (_dec = inject('BasicStore'), _dec2 = inject('HomeStore'), _dec(_class = _dec2(_class = observer(_class = (_temp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ComputerPage, _React$Component);\n\n  function ComputerPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ComputerPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ComputerPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onChange = function (e) {\n      _this.props.HomeStore.PageInfo = e;\n      _this.props.HomeStore.PageInfo.pageIndex = e.current;\n      var PageInfo = _this.props.HomeStore.PageInfo;\n      console.log(toJS(PageInfo));\n\n      _this.getData();\n    };\n\n    _this.getColumns = function () {\n      var columns = _this.props.HomeStore.columns.columns;\n      var text = columns.pop();\n\n      if (text.align != 'right') {\n        columns.push(text);\n      }\n\n      return columns;\n    };\n\n    _this.edit = function (txt) {\n      console.log(txt);\n    };\n\n    _this.getData = function () {\n      var PageInfo = _this.props.HomeStore.PageInfo;\n      var selectedKeys = _this.props.HomeStore.selectedKeys;\n      var firstFormId = _this.props.HomeStore.firstFormId;\n      var params = {};\n      params.firstFormId = firstFormId;\n      params.pageIndex = PageInfo.pageIndex;\n      params.PageSize = PageInfo.PageSize;\n\n      _this.props.HomeStore.queryAll(params);\n    };\n\n    return _this;\n  }\n\n  _createClass(ComputerPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var model = this.props.HomeStore.model;\n      var dataSource = this.props.HomeStore.dataSource;\n      var PageInfo = this.props.HomeStore.PageInfo;\n      var selectedKeys = this.props.HomeStore.selectedKeys;\n      var actionId = selectedKeys[0];\n      var menuObj = toJS(MenuObj.leafMenuModels);\n      var current = checkCurrentMenu({\n        menuObj: menuObj,\n        actionId: actionId\n      });\n\n      if (model == 'look') {\n        return React.createElement(_Table, {\n          columns: this.getColumns(),\n          dataSource: dataSource,\n          pagination: PageInfo,\n          onChange: this.onChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }); // return <Table columns={this.getColumns()} dataSource={dataSource} pagination={PageInfo}></Table>;\n      } else if (model == 'submit') {\n        return React.createElement(GlobalForm, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(GlobalTabel, {\n          columns: this.getColumns(),\n          dataSource: dataSource,\n          PageInfo: PageInfo,\n          onChange: function onChange() {\n            _this2.onChange();\n          },\n          firstFormId: current.currentMenu[0].id,\n          secondFormId: 0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getData();\n    }\n  }]);\n\n  return ComputerPage;\n}(React.Component), _temp)) || _class) || _class) || _class);\nexport default ComputerPage;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage-test\\src\\layouts\\BasicManage\\ComputerPage\\index.js"],"names":["inject","observer","React","Component","GlobalForm","MenuObj","checkCurrentMenu","toJS","GlobalTabel","ComputerPage","onChange","e","props","HomeStore","PageInfo","pageIndex","current","console","log","getData","getColumns","columns","text","pop","align","push","edit","txt","selectedKeys","firstFormId","params","PageSize","queryAll","model","dataSource","actionId","menuObj","leafMenuModels","currentMenu","id"],"mappings":";;;;;;;;;;;;;;AAAA;;;;;;;;AASA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;IAMMC,Y,WAHLT,MAAM,CAAC,YAAD,C,UACNA,MAAM,CAAC,WAAD,C,+BACNC,Q;;;;;;;;;;;;;;;;;;UAuBCS,Q,GAAW,UAACC,CAAD,EAAO;AAChB,YAAKC,KAAL,CAAWC,SAAX,CAAqBC,QAArB,GAAgCH,CAAhC;AACA,YAAKC,KAAL,CAAWC,SAAX,CAAqBC,QAArB,CAA8BC,SAA9B,GAA0CJ,CAAC,CAACK,OAA5C;AAFgB,UAGRF,QAHQ,GAGK,MAAKF,KAAL,CAAWC,SAHhB,CAGRC,QAHQ;AAIhBG,MAAAA,OAAO,CAACC,GAAR,CAAYX,IAAI,CAACO,QAAD,CAAhB;;AACA,YAAKK,OAAL;AACD,K;;UACDC,U,GAAa,YAAM;AAAA,UACVC,OADU,GACC,MAAKT,KAAL,CAAWC,SAAX,CAAqBQ,OADtB,CACVA,OADU;AAEjB,UAAIC,IAAI,GAAGD,OAAO,CAACE,GAAR,EAAX;;AACA,UAAID,IAAI,CAACE,KAAL,IAAc,OAAlB,EAA2B;AACzBH,QAAAA,OAAO,CAACI,IAAR,CAAaH,IAAb;AACD;;AACD,aAAOD,OAAP;AACD,K;;UACDK,I,GAAO,UAACC,GAAD,EAAS;AACdV,MAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACD,K;;UAGDR,O,GAAU,YAAM;AAAA,UACNL,QADM,GACO,MAAKF,KAAL,CAAWC,SADlB,CACNC,QADM;AAAA,UAENc,YAFM,GAEW,MAAKhB,KAAL,CAAWC,SAFtB,CAENe,YAFM;AAAA,UAGPC,WAHO,GAGQ,MAAKjB,KAAL,CAAWC,SAHnB,CAGPgB,WAHO;AAId,UAAIC,MAAM,GAAG,EAAb;AACAA,MAAAA,MAAM,CAACD,WAAP,GAAqBA,WAArB;AACAC,MAAAA,MAAM,CAACf,SAAP,GAAmBD,QAAQ,CAACC,SAA5B;AACAe,MAAAA,MAAM,CAACC,QAAP,GAAkBjB,QAAQ,CAACiB,QAA3B;;AACA,YAAKnB,KAAL,CAAWC,SAAX,CAAqBmB,QAArB,CAA8BF,MAA9B;AACD,K;;;;;;;6BAjDQ;AAAA;;AAAA,UACCG,KADD,GACW,KAAKrB,KAAL,CAAWC,SADtB,CACCoB,KADD;AAAA,UAECC,UAFD,GAEgB,KAAKtB,KAAL,CAAWC,SAF3B,CAECqB,UAFD;AAAA,UAGCpB,QAHD,GAGc,KAAKF,KAAL,CAAWC,SAHzB,CAGCC,QAHD;AAAA,UAICc,YAJD,GAIkB,KAAKhB,KAAL,CAAWC,SAJ7B,CAICe,YAJD;AAKP,UAAIO,QAAQ,GAAGP,YAAY,CAAC,CAAD,CAA3B;AACA,UAAIQ,OAAO,GAAG7B,IAAI,CAACF,OAAO,CAACgC,cAAT,CAAlB;AACA,UAAIrB,OAAO,GAAGV,gBAAgB,CAAC;AAAE8B,QAAAA,OAAO,EAAPA,OAAF;AAAWD,QAAAA,QAAQ,EAARA;AAAX,OAAD,CAA9B;;AACA,UAAIF,KAAK,IAAI,MAAb,EAAqB;AACnB,eAAO;AAAO,UAAA,OAAO,EAAE,KAAKb,UAAL,EAAhB;AAAmC,UAAA,UAAU,EAAEc,UAA/C;AAA2D,UAAA,UAAU,EAAEpB,QAAvE;AAAiF,UAAA,QAAQ,EAAE,KAAKJ,QAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CADmB,CAEnB;AACD,OAHD,MAGO,IAAGuB,KAAK,IAAI,QAAZ,EAAqB;AAC1B,eAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFM,MAED;AACJ,eAAO,oBAAC,WAAD;AAAa,UAAA,OAAO,EAAE,KAAKb,UAAL,EAAtB;AAAyC,UAAA,UAAU,EAAEc,UAArD;AAAiE,UAAA,QAAQ,EAAEpB,QAA3E;AAAqF,UAAA,QAAQ,EAAE,oBAAI;AAAC,YAAA,MAAI,CAACJ,QAAL;AAAgB,WAApH;AAAsH,UAAA,WAAW,EAAEM,OAAO,CAACsB,WAAR,CAAoB,CAApB,EAAuBC,EAA1J;AACP,UAAA,YAAY,EAAE,CADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAED;AAGF;;;yCA+BoB;AACnB,WAAKpB,OAAL;AACD;;;;EAtDwBjB,KAAK,CAACC,S;AAyDjC,eAAeM,YAAf","sourcesContent":["/*\r\n * @Author: your name\r\n * @Date: 2022-04-02 11:12:08\r\n * @LastEditTime: 2022-04-08 20:52:48\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n * @FilePath: \\bl-device-manage-test\\src\\layouts\\BasicManage\\ComputerPage\\index.js\r\n */\r\n\r\nimport { inject, observer } from 'mobx-react'\r\nimport React, { Component } from 'react'\r\nimport { Table, Modal, message, Divider } from 'antd'\r\nimport GlobalForm from 'components/GlobalForm';\r\nimport { MenuObj } from 'constants/configs';\r\nimport { checkCurrentMenu } from 'utils/dataTools';\r\nimport { toJS } from 'mobx';\r\nimport GlobalTabel from 'components/GlobalTabel';\r\n\r\n\r\n@inject('BasicStore')\r\n@inject('HomeStore')\r\n@observer\r\nclass ComputerPage extends React.Component {\r\n\r\n  render() {\r\n    const { model } = this.props.HomeStore;\r\n    const { dataSource } = this.props.HomeStore;\r\n    const { PageInfo } = this.props.HomeStore;\r\n    const { selectedKeys } = this.props.HomeStore;\r\n    let actionId = selectedKeys[0];\r\n    let menuObj = toJS(MenuObj.leafMenuModels);\r\n    let current = checkCurrentMenu({ menuObj, actionId })\r\n    if (model == 'look') {\r\n      return <Table columns={this.getColumns()} dataSource={dataSource} pagination={PageInfo} onChange={this.onChange}></Table>;\r\n      // return <Table columns={this.getColumns()} dataSource={dataSource} pagination={PageInfo}></Table>;\r\n    } else if(model == 'submit'){\r\n      return <GlobalForm/>\r\n    }else {\r\n      return <GlobalTabel columns={this.getColumns()} dataSource={dataSource} PageInfo={PageInfo} onChange={()=>{this.onChange()}} firstFormId={current.currentMenu[0].id}\r\n      secondFormId={0}/>\r\n    }\r\n\r\n\r\n  }\r\n  onChange = (e) => {\r\n    this.props.HomeStore.PageInfo = e;\r\n    this.props.HomeStore.PageInfo.pageIndex = e.current\r\n    const { PageInfo } = this.props.HomeStore;\r\n    console.log(toJS(PageInfo));\r\n    this.getData()\r\n  }\r\n  getColumns = () => {\r\n    const {columns} = this.props.HomeStore.columns\r\n    let text = columns.pop()\r\n    if (text.align != 'right') {\r\n      columns.push(text)\r\n    }\r\n    return columns\r\n  }\r\n  edit = (txt) => {\r\n    console.log(txt);\r\n  }\r\n\r\n\r\n  getData = () => {\r\n    const { PageInfo } = this.props.HomeStore;\r\n    const { selectedKeys } = this.props.HomeStore;\r\n    const {firstFormId} = this.props.HomeStore\r\n    let params = {};\r\n    params.firstFormId = firstFormId\r\n    params.pageIndex = PageInfo.pageIndex\r\n    params.PageSize = PageInfo.PageSize\r\n    this.props.HomeStore.queryAll(params);\r\n  }\r\n  componentWillMount() {\r\n    this.getData();\r\n  }\r\n}\r\n\r\nexport default ComputerPage;\r\n"]},"metadata":{},"sourceType":"module"}