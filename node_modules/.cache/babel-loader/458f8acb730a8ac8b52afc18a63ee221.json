{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport _objectSpread from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _objectWithoutProperties from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/input-number/style\";\nimport _InputNumber from \"antd/lib/input-number\";\nimport _classCallCheck from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\documents\\\\bl-device-manage-test\\\\src\\\\layouts\\\\TableEdit\\\\EditableTable\\\\index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar EditableContext = React.createContext();\n\nvar EditableCell =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditableCell, _React$Component);\n\n  function EditableCell() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditableCell);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditableCell)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getInput = function () {\n      if (_this.props.inputType === 'number') {\n        return React.createElement(_InputNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(_Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      });\n    };\n\n    _this.renderCell = function () {\n      var _this$props = _this.props,\n          editing = _this$props.editing,\n          dataIndex = _this$props.dataIndex,\n          title = _this$props.title,\n          inputType = _this$props.inputType,\n          record = _this$props.record,\n          index = _this$props.index,\n          children = _this$props.children,\n          restProps = _objectWithoutProperties(_this$props, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n      return React.createElement(\"td\", Object.assign({}, restProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), editing ? React.createElement(_Form.Item, {\n        style: {\n          margin: 0\n        },\n        name: dataIndex,\n        rules: [{\n          required: true\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, _this.getInput()) : children);\n    };\n\n    return _this;\n  }\n\n  _createClass(EditableCell, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(EditableContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.renderCell);\n    }\n  }]);\n\n  return EditableCell;\n}(React.Component);\n\nvar EditableTable =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(EditableTable, _React$Component2);\n\n  function EditableTable(props) {\n    var _this2;\n\n    _classCallCheck(this, EditableTable);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(EditableTable).call(this, props));\n    _this2.EditRef = React.createRef();\n\n    _this2.isEditing = function (record) {\n      return record.key === _this2.state.editingKey;\n    };\n\n    _this2.cancel = function () {\n      _this2.setState({\n        editingKey: ''\n      });\n    };\n\n    _this2.delete = function (key) {\n      var data = _toConsumableArray(_this2.state.data);\n\n      _this2.props.getDataSource(data.filter(function (item) {\n        return item.key !== key;\n      }));\n\n      _this2.setState({\n        data: data.filter(function (item) {\n          return item.key !== key;\n        })\n      });\n    };\n\n    _this2.add = function () {\n      var _this2$state = _this2.state,\n          count = _this2$state.count,\n          data = _this2$state.data;\n      var newData = {\n        key: count,\n        label: \"\\u9009\\u9879 \".concat(count),\n        value: count\n      };\n\n      _this2.props.getDataSource([].concat(_toConsumableArray(data), [newData]));\n\n      _this2.setState({\n        data: [].concat(_toConsumableArray(data), [newData]),\n        count: count + 1\n      });\n    };\n\n    var options = _this2.props.options;\n    _this2.state = {\n      data: options,\n      editingKey: '',\n      count: options.length\n    };\n    _this2.columns = [{\n      title: '显示值',\n      dataIndex: 'label',\n      width: '30%',\n      editable: true\n    }, {\n      title: '传递值',\n      dataIndex: 'value',\n      width: '30%',\n      editable: true\n    }, {\n      title: '操作',\n      dataIndex: 'operation',\n      render: function render(text, record) {\n        var editingKey = _this2.state.editingKey;\n\n        var editable = _this2.isEditing(record);\n\n        return editable ? React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(EditableContext.Consumer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, function (form) {\n          return React.createElement(\"a\", {\n            onClick: function onClick() {\n              return _this2.save(form, record.key);\n            },\n            style: {\n              marginRight: 15\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, \"\\u4FDD\\u5B58\");\n        }), React.createElement(\"a\", {\n          onClick: function onClick() {\n            return _this2.cancel(record.key);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"\\u53D6\\u6D88\")) : React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          disabled: editingKey !== '',\n          onClick: function onClick() {\n            return _this2.edit(record.key);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"\\u7F16\\u8F91\"), React.createElement(\"a\", {\n          style: {\n            marginLeft: 15,\n            color: '#FF3333'\n          },\n          onClick: function onClick() {\n            return _this2.delete(record.key);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"\\u5220\\u9664\"));\n      }\n    }];\n    return _this2;\n  }\n\n  _createClass(EditableTable, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(_ref) {\n      var curItemKey = _ref.curItemKey;\n\n      if (curItemKey !== this.props.curItemKey) {\n        this.setState({\n          data: this.props.options\n        });\n      }\n    }\n  }, {\n    key: \"save\",\n    value: function save(form, key) {\n      var _this3 = this;\n\n      form.validateFields(function (error, row) {\n        if (error) {\n          return;\n        }\n\n        var newData = _toConsumableArray(_this3.state.data);\n\n        var index = newData.findIndex(function (item) {\n          return key === item.key;\n        });\n\n        if (index > -1) {\n          var item = newData[index];\n          newData.splice(index, 1, _objectSpread({}, item, row));\n        } else {\n          newData.push(row);\n        }\n\n        _this3.props.getDataSource(newData);\n\n        _this3.setState({\n          data: newData,\n          editingKey: ''\n        });\n      });\n    }\n  }, {\n    key: \"edit\",\n    value: function edit(key) {\n      this.setState({\n        editingKey: key\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var components = {\n        body: {\n          cell: EditableCell\n        }\n      };\n      var columns = this.columns.map(function (col) {\n        if (!col.editable) {\n          return col;\n        }\n\n        return _objectSpread({}, col, {\n          onCell: function onCell(record) {\n            return {\n              record: record,\n              inputType: col.dataIndex === 'value' ? 'number' : 'text',\n              dataIndex: col.dataIndex,\n              title: col.title,\n              editing: _this4.isEditing(record)\n            };\n          }\n        });\n      });\n      console.log(this.state.data);\n      console.log(columns);\n      return React.createElement(EditableContext.Provider, {\n        value: this.props.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        disabled: this.props.disabled,\n        onClick: this.add,\n        type: \"primary\",\n        style: {\n          marginBottom: 16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"\\u6DFB\\u52A0\\u9009\\u9879\"), React.createElement(_Table, {\n        components: components,\n        bordered: true,\n        dataSource: this.state.data,\n        columns: columns,\n        rowClassName: \"editable-row\",\n        pagination: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EditableTable;\n}(React.Component);\n\nexport { EditableTable as default };\nEditableCell.propTypes = {\n  editing: PropTypes.bool,\n  dataIndex: PropTypes.string,\n  title: PropTypes.string,\n  inputType: PropTypes.string,\n  record: PropTypes.object,\n  index: PropTypes.string,\n  children: PropTypes.array.isRequired,\n  restProps: PropTypes.object\n};\nEditableTable.propTypes = {\n  form: PropTypes.object.isRequired,\n  getDataSource: PropTypes.func.isRequired,\n  curItemKey: PropTypes.string.isRequired,\n  options: PropTypes.array,\n  disabled: PropTypes.bool.isRequired\n};","map":{"version":3,"sources":["F:\\documents\\bl-device-manage-test\\src\\layouts\\TableEdit\\EditableTable\\index.js"],"names":["React","PropTypes","EditableContext","createContext","EditableCell","getInput","props","inputType","renderCell","editing","dataIndex","title","record","index","children","restProps","margin","required","Component","EditableTable","EditRef","createRef","isEditing","key","state","editingKey","cancel","setState","delete","data","getDataSource","filter","item","add","count","newData","label","value","options","length","columns","width","editable","render","text","form","save","marginRight","edit","marginLeft","color","curItemKey","validateFields","error","row","findIndex","splice","push","components","body","cell","map","col","onCell","console","log","disabled","marginBottom","propTypes","bool","string","object","array","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Table, Input, InputNumber, Form, Button } from 'antd';\r\n \r\nconst EditableContext = React.createContext();\r\n \r\nclass EditableCell extends React.Component {\r\n  getInput = () => {\r\n    if (this.props.inputType === 'number') {\r\n      return <InputNumber />;\r\n    }\r\n    return <Input />;\r\n  };\r\n\r\n  renderCell = () => {\r\n    const {\r\n      editing,\r\n      dataIndex,\r\n      title,\r\n      inputType,\r\n      record,\r\n      index,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <td {...restProps}>\r\n        {editing ? (\r\n          <Form.Item style={{ margin: 0 }} name={dataIndex} rules={[{required:true}]}>\r\n            {this.getInput()}\r\n          </Form.Item>\r\n        ) : (\r\n          children\r\n        )}\r\n      </td>\r\n    );\r\n  };\r\n \r\n  render() {\r\n    return <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>;\r\n  }\r\n}\r\n\r\nexport default class EditableTable extends React.Component {\r\n  EditRef = React.createRef();\r\n  constructor(props) {\r\n    super(props);\r\n    const { options } = this.props;\r\n    this.state = { data: options, editingKey: '', count: options.length };\r\n    this.columns = [\r\n      {\r\n        title: '显示值',\r\n        dataIndex: 'label',\r\n        width: '30%',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: '传递值',\r\n        dataIndex: 'value',\r\n        width: '30%',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: '操作',\r\n        dataIndex: 'operation',\r\n        render: (text, record) => {\r\n          const { editingKey } = this.state;\r\n          const editable = this.isEditing(record);\r\n          return editable ? (\r\n            <span>\r\n              <EditableContext.Consumer>\r\n                {form => (\r\n                  <a\r\n                    onClick={() => this.save(form, record.key)}\r\n                    style={{ marginRight: 15 }}\r\n                  >\r\n                    保存\r\n                  </a>\r\n                )}\r\n              </EditableContext.Consumer>\r\n              <a onClick={() => this.cancel(record.key)}>取消</a>\r\n            </span>\r\n          ) : (\r\n            <span>\r\n              <a disabled={editingKey !== ''} onClick={() => this.edit(record.key)}>编辑</a>\r\n              <a style={{ marginLeft: 15, color: '#FF3333' }} onClick={() => this.delete(record.key)}>删除</a>\r\n            </span>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n  }\r\n\r\n  componentDidUpdate({ curItemKey }) {\r\n    if (curItemKey !== this.props.curItemKey) {\r\n      this.setState({ data: this.props.options })\r\n    }\r\n  }\r\n \r\n  isEditing = record => record.key === this.state.editingKey;\r\n \r\n  cancel = () => {\r\n    this.setState({ editingKey: '' });\r\n  };\r\n \r\n  save(form, key) {\r\n    form.validateFields((error, row) => {\r\n      if (error) {\r\n        return;\r\n      }\r\n      const newData = [...this.state.data];\r\n      const index = newData.findIndex(item => key === item.key);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...row,\r\n        });\r\n      } else {\r\n        newData.push(row);\r\n      }\r\n      this.props.getDataSource(newData)\r\n      this.setState({ data: newData, editingKey: '' });\r\n    });\r\n  }\r\n \r\n  edit(key) {\r\n    this.setState({ editingKey: key });\r\n  }\r\n \r\n  delete = key => {\r\n    const data = [...this.state.data];\r\n    this.props.getDataSource(data.filter(item => item.key !== key))\r\n    this.setState({ data: data.filter(item => item.key !== key) });\r\n  };\r\n \r\n  add = () => {\r\n    const { count, data } = this.state;\r\n    const newData = {\r\n      key: count,\r\n      label: `选项 ${count}`,\r\n      value: count\r\n    };\r\n    this.props.getDataSource([...data, newData])\r\n    this.setState({\r\n      data: [...data, newData],\r\n      count: count + 1,\r\n    });\r\n  };\r\n \r\n  render() {\r\n    const components = {\r\n      body: {\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n\r\n    const columns = this.columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: record => ({\r\n          record,\r\n          inputType: col.dataIndex === 'value' ? 'number' : 'text',\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          editing: this.isEditing(record),\r\n        }),\r\n      };\r\n    });\r\n    console.log(this.state.data);\r\n    console.log(columns);\r\n    return (\r\n      <EditableContext.Provider value={this.props.form}>\r\n        <Button disabled={this.props.disabled} onClick={this.add} type=\"primary\" style={{ marginBottom: 16 }}>添加选项</Button>\r\n        <Table\r\n          components={components}\r\n          bordered\r\n          dataSource={this.state.data}\r\n          columns={columns}\r\n          rowClassName=\"editable-row\"\r\n          pagination={false}\r\n        />\r\n      </EditableContext.Provider>\r\n    );\r\n  }\r\n}\r\n \r\n \r\nEditableCell.propTypes = {\r\n  editing: PropTypes.bool,\r\n  dataIndex: PropTypes.string,\r\n  title: PropTypes.string,\r\n  inputType: PropTypes.string,\r\n  record: PropTypes.object,\r\n  index: PropTypes.string,\r\n  children: PropTypes.array.isRequired,\r\n  restProps: PropTypes.object,\r\n}\r\n \r\nEditableTable.propTypes = {\r\n  form: PropTypes.object.isRequired,\r\n  getDataSource: PropTypes.func.isRequired,\r\n  curItemKey: PropTypes.string.isRequired,\r\n  options: PropTypes.array,\r\n  disabled: PropTypes.bool.isRequired\r\n}\r\n "]},"metadata":{},"sourceType":"module"}