{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport _defineProperty from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\Misaki\\\\Desktop\\\\kda\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\src\\\\layouts\\\\ZCloudDevice\\\\DeviceMaintain\\\\Operate.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport './index.less';\nimport GlobalList from 'components/GlobalList';\nimport { isEmpty } from 'lodash';\nimport { setOperateColumns, setModalOperateColumns } from './methods';\nimport { toJS } from 'mobx';\nimport ModalS from './cell/ModalS';\nvar MaintainOperate = (_dec = inject('ZCloudDeviceStore'), _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_Component) {\n  _inherits(MaintainOperate, _Component);\n\n  var _super = _createSuper(MaintainOperate);\n\n  function MaintainOperate(props) {\n    var _this;\n\n    _classCallCheck(this, MaintainOperate);\n\n    _this = _super.call(this, props);\n\n    _this.handleVisible = function () {\n      _this.setState({\n        visible: !_this.state.visible\n      });\n    };\n\n    _this.handleSubmit = function () {\n      var _toJS = toJS(_this.store),\n          _toJS$currentMain = _toJS.currentMain,\n          id = _toJS$currentMain.id,\n          schemaId = _toJS$currentMain.schemaId,\n          contentIds = _toJS$currentMain.contentIds;\n\n      var contents = _this.state.contents;\n      var params = {\n        planId: id,\n        schemaId: schemaId,\n        contentIds: contentIds,\n        number: contentIds.split(',').length\n      };\n      Object.keys(contents).map(function (key, index) {\n        var _contents$key = contents[key],\n            maintainId = _contents$key.maintainId,\n            contentType = _contents$key.contentType,\n            remark = _contents$key.remark;\n\n        if (parseFloat(key) === maintainId) {\n          params[\"maintainID\".concat(index)] = maintainId;\n          params[\"contentType\".concat(index)] = contentType;\n          params[\"remark\".concat(index)] = remark;\n\n          if (contentType === 1) {\n            params[\"boolValue\".concat(index)] = contents[key].boolValue;\n          }\n\n          if (contentType === 2) {\n            params[\"strValue\".concat(index)] = contents[key].strValue.join(',');\n          }\n\n          if (contentType === 3) {\n            params[\"minValue\".concat(index)] = contents[key].minValue;\n            params[\"maxValue\".concat(index)] = contents[key].maxValue;\n            params[\"doubleValue\".concat(index)] = contents[key].doubleValue;\n          }\n        }\n      });\n\n      _this.store.saveExcution(params);\n\n      _this.handleVisible();\n    };\n\n    _this.onDescription = function (record, value) {\n      var maintainId = record.maintainId;\n\n      _this.setState({\n        contents: _objectSpread({}, _this.state.contents, _defineProperty({}, maintainId, _objectSpread({}, _this.state.contents[maintainId], {\n          remark: value\n        })))\n      });\n    };\n\n    _this.onCheckBoxChange = function (record, value) {\n      var maintainId = record.maintainId;\n\n      _this.setState({\n        contents: _objectSpread({}, _this.state.contents, _defineProperty({}, maintainId, _objectSpread({}, _this.state.contents[maintainId], {\n          strValue: value\n        })))\n      });\n    };\n\n    _this.onRadioChange = function (record, value) {\n      var maintainId = record.maintainId;\n\n      _this.setState({\n        contents: _objectSpread({}, _this.state.contents, _defineProperty({}, maintainId, _objectSpread({}, _this.state.contents[maintainId], {\n          boolValue: value\n        })))\n      });\n    };\n\n    _this.onInputNumber = function (record, value) {\n      var maintainId = record.maintainId;\n\n      _this.setState({\n        contents: _objectSpread({}, _this.state.contents, _defineProperty({}, maintainId, _objectSpread({}, _this.state.contents[maintainId], {\n          doubleValue: value\n        })))\n      });\n    };\n\n    _this.handleEdit = function (contentIds, record) {\n      _this.store.status = 'edit';\n      _this.store.currentMain = record;\n\n      _this.store.getListByContents({\n        contentIds: record.contentIds,\n        devId: _this.store.devId\n      }).then(function (data) {\n        // let data = this.store.listByContentsIds;\n        var contents = {};\n        data && data.map(function (item) {\n          contents[item.maintainId] = [];\n          /* 设置所有数据的初始化 */\n\n          var maintainId = item.maintainId,\n              contentType = item.contentType,\n              minValue = item.minValue,\n              maxValue = item.maxValue;\n          var obj = {\n            maintainId: maintainId,\n            contentType: contentType,\n            remark: ''\n          };\n\n          if (contentType === 1) {\n            obj.boolValue = 1;\n          }\n\n          if (contentType === 2) {\n            obj.strValue = [];\n            obj.strList = [];\n            item.strValue.split(';').map(function (item) {\n              item && obj.strList.push({\n                label: item,\n                value: item\n              });\n            });\n          }\n\n          if (contentType === 3) {\n            obj = _objectSpread({}, obj, {\n              minValue: minValue,\n              maxValue: maxValue,\n              doubleValue: 0\n            });\n          }\n\n          contents[item.maintainId] = obj;\n        });\n\n        _this.setState({\n          contents: contents\n        });\n      });\n\n      _this.handleVisible();\n    };\n\n    _this.handleCheckTag = function (tag) {\n      console.log(tag, 'tag');\n      _this.store.deviceId = tag.id;\n      _this.store.devId = tag.devId;\n\n      _this.store.getOperateList({\n        deviceId: tag.id\n      });\n    };\n\n    _this.store = _this.props.ZCloudDeviceStore;\n    _this.state = {\n      selectedRowKeys: [],\n      visible: false,\n      contents: {}\n    };\n    return _this;\n  }\n\n  _createClass(MaintainOperate, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$store = this.store,\n          operateList = _this$store.operateList,\n          operatePage = _this$store.operatePage,\n          op_deviceList = _this$store.op_deviceList,\n          listByContentsIds = _this$store.listByContentsIds,\n          isLoading = _this$store.isLoading;\n      var type = this.props.type;\n      var modal = {\n        width: 700,\n        visible: this.state.visible,\n        title: '编辑',\n        onCancel: this.handleVisible,\n        onOk: this.handleSubmit,\n        okText: '确定',\n        cancelText: '取消',\n        children: !isEmpty(this.state.contents) && /*#__PURE__*/React.createElement(_Table, {\n          size: \"small\",\n          dataSource: listByContentsIds,\n          columns: setModalOperateColumns({\n            type: type,\n            onRadioChange: this.onRadioChange,\n            onCheckBoxChange: this.onCheckBoxChange,\n            onInputNumber: this.onInputNumber,\n            onDescription: this.onDescription,\n            contents: this.state.contents\n          }),\n          pagination: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 47\n          }\n        })\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(GlobalList, {\n        checkedTag: {\n          dataSource: op_deviceList,\n          title: '设备名称',\n          PopoVisible: false,\n          keyName: 'devName',\n          defaultActiveKey: op_deviceList[0],\n          content: op_deviceList,\n          onClick: this.handleCheckTag\n        },\n        table: {\n          rowKey: 'operateID',\n          columns: setOperateColumns({\n            type: type,\n            handleEdit: this.handleEdit\n          }),\n          dataSource: operateList,\n          pagination: _objectSpread({}, operatePage, {\n            onChange: function onChange(pageIndex, pageSize) {\n              _this2.store.getOperateList({\n                pageIndex: pageIndex,\n                pageSize: pageSize\n              });\n            }\n          }),\n          loading: isLoading\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 5\n        }\n      }), this.state.visible && /*#__PURE__*/React.createElement(ModalS, {\n        modal: modal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 28\n        }\n      }));\n    }\n    /* modal - operate */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      this.store.deviceId = '';\n      this.store.getOperateDevice().then(function () {\n        _this3.store.getOperateList({\n          deviceId: _this3.store.deviceId\n        });\n      });\n    }\n  }]);\n\n  return MaintainOperate;\n}(Component), _temp)) || _class) || _class);\nexport default MaintainOperate;","map":{"version":3,"sources":["C:/Users/Misaki/Desktop/kda/设备运维前端/bl-device-manage/src/layouts/ZCloudDevice/DeviceMaintain/Operate.js"],"names":["React","Component","inject","observer","GlobalList","isEmpty","setOperateColumns","setModalOperateColumns","toJS","ModalS","MaintainOperate","props","handleVisible","setState","visible","state","handleSubmit","store","currentMain","id","schemaId","contentIds","contents","params","planId","number","split","length","Object","keys","map","key","index","maintainId","contentType","remark","parseFloat","boolValue","strValue","join","minValue","maxValue","doubleValue","saveExcution","onDescription","record","value","onCheckBoxChange","onRadioChange","onInputNumber","handleEdit","status","getListByContents","devId","then","data","item","obj","strList","push","label","handleCheckTag","tag","console","log","deviceId","getOperateList","ZCloudDeviceStore","selectedRowKeys","operateList","operatePage","op_deviceList","listByContentsIds","isLoading","type","modal","width","title","onCancel","onOk","okText","cancelText","children","dataSource","PopoVisible","keyName","defaultActiveKey","content","onClick","rowKey","columns","pagination","onChange","pageIndex","pageSize","loading","getOperateDevice"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport './index.less';\nimport GlobalList from 'components/GlobalList';\nimport { Table, } from 'antd';\nimport { isEmpty } from 'lodash';\nimport { setOperateColumns, setModalOperateColumns } from './methods';\nimport { toJS } from 'mobx';\nimport ModalS from './cell/ModalS'\n\n@inject('ZCloudDeviceStore')\n@observer\nclass MaintainOperate extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.store = this.props.ZCloudDeviceStore;\n\t\tthis.state = {\n\t\t\tselectedRowKeys: [],\n\t\t\tvisible: false,\n\t\t\tcontents: {}\n\t\t};\n\t}\n\trender() {\n\t\tconst {\n\t\t\toperateList,\n\t\t\toperatePage,\n\t\t\top_deviceList,\n\t\t\tlistByContentsIds,\n\t\t\tisLoading,\n\t\t} = this.store;\n\t\tconst { type } = this.props;\n\t\tconst modal = {\n\t\t\twidth: 700,\n\t\t\tvisible: this.state.visible,\n\t\t\ttitle: '编辑',\n\t\t\tonCancel: this.handleVisible,\n\t\t\tonOk: this.handleSubmit,\n\t\t\tokText: '确定',\n\t\t\tcancelText: '取消',\n\t\t\tchildren: !isEmpty(this.state.contents) && <Table\n\t\t\t\tsize='small'\n\t\t\t\tdataSource={listByContentsIds}\n\t\t\t\tcolumns={setModalOperateColumns({\n\t\t\t\t\ttype,\n\t\t\t\t\tonRadioChange: this.onRadioChange,\n\t\t\t\t\tonCheckBoxChange: this.onCheckBoxChange,\n\t\t\t\t\tonInputNumber: this.onInputNumber,\n\t\t\t\t\tonDescription: this.onDescription,\n\t\t\t\t\tcontents: this.state.contents\n\t\t\t\t})}\n\t\t\t\tpagination={false}\n\t\t\t/>\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<GlobalList\n\t\t\t\t\tcheckedTag={{\n\t\t\t\t\t\tdataSource: op_deviceList,\n\t\t\t\t\t\ttitle: '设备名称',\n\t\t\t\t\t\tPopoVisible: false,\n\t\t\t\t\t\tkeyName: 'devName',\n\t\t\t\t\t\tdefaultActiveKey: op_deviceList[0],\n\t\t\t\t\t\tcontent: op_deviceList,\n\t\t\t\t\t\tonClick: this.handleCheckTag\n\t\t\t\t\t}}\n\t\t\t\t\ttable={{\n\t\t\t\t\t\trowKey: 'operateID',\n\t\t\t\t\t\tcolumns: setOperateColumns({\n\t\t\t\t\t\t\ttype, handleEdit: this.handleEdit\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tdataSource: operateList,\n\t\t\t\t\t\tpagination: {\n\t\t\t\t\t\t\t...operatePage,\n\t\t\t\t\t\t\tonChange: (pageIndex, pageSize) => {\n\t\t\t\t\t\t\t\tthis.store.getOperateList({\n\t\t\t\t\t\t\t\t\tpageIndex,\n\t\t\t\t\t\t\t\t\tpageSize\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tloading: isLoading,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t{\n\t\t\t\t\tthis.state.visible && <ModalS\n\t\t\t\t\t\tmodal={modal}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n\t/* modal - operate */\n\thandleVisible = () => {\n\t\tthis.setState({\n\t\t\tvisible: !this.state.visible\n\t\t});\n\t};\n\thandleSubmit = () => {\n\t\tconst { currentMain: { id, schemaId, contentIds, } } = toJS(this.store);\n\t\tconst { contents } = this.state;\n\n\t\tlet params = {\n\t\t\tplanId: id, schemaId, contentIds,\n\t\t\tnumber: contentIds.split(',').length,\n\t\t}\n\t\tObject.keys(contents).map((key, index) => {\n\t\t\tconst { maintainId, contentType, remark } = contents[key];\n\t\t\tif (parseFloat(key) === maintainId) {\n\t\t\t\tparams[`maintainID${index}`] = maintainId\n\t\t\t\tparams[`contentType${index}`] = contentType\n\t\t\t\tparams[`remark${index}`] = remark\n\t\t\t\tif (contentType === 1) {\n\t\t\t\t\tparams[`boolValue${index}`] = contents[key].boolValue\n\t\t\t\t}\n\t\t\t\tif (contentType === 2) {\n\t\t\t\t\tparams[`strValue${index}`] = contents[key].strValue.join(',')\n\t\t\t\t}\n\t\t\t\tif (contentType === 3) {\n\t\t\t\t\tparams[`minValue${index}`] = contents[key].minValue\n\t\t\t\t\tparams[`maxValue${index}`] = contents[key].maxValue\n\t\t\t\t\tparams[`doubleValue${index}`] = contents[key].doubleValue\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\tthis.store.saveExcution(params);\n\t\tthis.handleVisible();\n\t};\n\tonDescription = (record, value) => {\n\t\tlet { maintainId } = record;\n\t\tthis.setState({\n\t\t\tcontents: {\n\t\t\t\t...this.state.contents,\n\t\t\t\t[maintainId]: {\n\t\t\t\t\t...this.state.contents[maintainId],\n\t\t\t\t\tremark: value\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\tonCheckBoxChange = (record, value) => {\n\t\tlet { maintainId } = record;\n\t\tthis.setState({\n\t\t\tcontents: {\n\t\t\t\t...this.state.contents,\n\t\t\t\t[maintainId]: {\n\t\t\t\t\t...this.state.contents[maintainId],\n\t\t\t\t\tstrValue: value\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\tonRadioChange = (record, value) => {\n\t\tlet { maintainId } = record;\n\t\tthis.setState({\n\t\t\tcontents: {\n\t\t\t\t...this.state.contents,\n\t\t\t\t[maintainId]: {\n\t\t\t\t\t...this.state.contents[maintainId],\n\t\t\t\t\tboolValue: value\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\tonInputNumber = (record, value) => {\n\t\tlet { maintainId } = record;\n\t\tthis.setState({\n\t\t\tcontents: {\n\t\t\t\t...this.state.contents,\n\t\t\t\t[maintainId]: {\n\t\t\t\t\t...this.state.contents[maintainId],\n\t\t\t\t\tdoubleValue: value\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\t/* table - operate */\n\thandleEdit = (contentIds, record) => {\n\n\t\tthis.store.status = 'edit';\n\t\tthis.store.currentMain = record;\n\t\tthis.store.getListByContents({ contentIds: record.contentIds, devId: this.store.devId }).then((data) => {\n\t\t\t// let data = this.store.listByContentsIds;\n\t\t\tlet contents = {};\n\t\t\tdata && data.map(item => {\n\t\t\t\tcontents[item.maintainId] = []\n\t\t\t\t/* 设置所有数据的初始化 */\n\t\t\t\tconst { maintainId, contentType, minValue, maxValue } = item;\n\t\t\t\tlet obj = {\n\t\t\t\t\tmaintainId, contentType, remark: ''\n\t\t\t\t}\n\t\t\t\tif (contentType === 1) {\n\t\t\t\t\tobj.boolValue = 1\n\t\t\t\t}\n\t\t\t\tif (contentType === 2) {\n\t\t\t\t\tobj.strValue = [];\n\t\t\t\t\tobj.strList = []\n\t\t\t\t\titem.strValue.split(';').map(item => {\n\t\t\t\t\t\titem && obj.strList.push({\n\t\t\t\t\t\t\tlabel: item, value: item\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (contentType === 3) {\n\t\t\t\t\tobj = {\n\t\t\t\t\t\t...obj,\n\t\t\t\t\t\tminValue, maxValue, doubleValue: 0\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontents[item.maintainId] = obj\n\t\t\t})\n\t\t\tthis.setState({\n\t\t\t\tcontents\n\t\t\t})\n\t\t});\n\t\tthis.handleVisible();\n\t};\n\n\t/* check - tag */\n\thandleCheckTag = tag => {\n\t\tconsole.log(tag, 'tag')\n\t\tthis.store.deviceId = tag.id;\n\t\tthis.store.devId = tag.devId;\n\t\tthis.store.getOperateList({\n\t\t\tdeviceId: tag.id\n\t\t});\n\t};\n\tcomponentDidMount() {\n\t\tthis.store.deviceId = ''\n\t\tthis.store.getOperateDevice().then(() => {\n\t\t\tthis.store.getOperateList({\n\t\t\t\tdeviceId: this.store.deviceId\n\t\t\t})\n\t\t})\n\n\t}\n}\nexport default MaintainOperate;\n"]},"metadata":{},"sourceType":"module"}