{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _addEventListener = require('rc-util/lib/Dom/addEventListener');\n\nvar _addEventListener2 = _interopRequireDefault(_addEventListener);\n\nvar _color = require('./helpers/color');\n\nvar _color2 = _interopRequireDefault(_color);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n\nvar WIDTH = 200;\nvar HEIGHT = 150;\n\nvar Board = function (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board(props) {\n    _classCallCheck(this, Board);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n    _this.onBoardMouseDown = function (e) {\n      var buttons = e.buttons; // only work on left click\n      // @see https://developer.mozilla.org/en-US/docs/Web/Events/mousedown\n\n      if (buttons !== 1) return;\n      var x = e.clientX;\n      var y = e.clientY;\n\n      _this.pointMoveTo({\n        x: x,\n        y: y\n      });\n\n      _this.removeListeners();\n\n      _this.dragListener = (0, _addEventListener2[\"default\"])(window, 'mousemove', _this.onBoardDrag);\n      _this.dragUpListener = (0, _addEventListener2[\"default\"])(window, 'mouseup', _this.onBoardDragEnd);\n    };\n\n    _this.onBoardTouchStart = function (e) {\n      if (e.touches.length !== 1) {\n        return;\n      }\n\n      _this.removeTouchListeners();\n\n      var x = e.targetTouches[0].clientX;\n      var y = e.targetTouches[0].clientY;\n\n      _this.pointMoveTo({\n        x: x,\n        y: y\n      });\n\n      _this.touchMoveListener = (0, _addEventListener2[\"default\"])(window, 'touchmove', _this.onBoardTouchMove);\n      _this.touchEndListener = (0, _addEventListener2[\"default\"])(window, 'touchend', _this.onBoardTouchEnd);\n    };\n\n    _this.onBoardTouchMove = function (e) {\n      if (e.preventDefault) {\n        e.preventDefault();\n      }\n\n      var x = e.targetTouches[0].clientX;\n      var y = e.targetTouches[0].clientY;\n\n      _this.pointMoveTo({\n        x: x,\n        y: y\n      });\n    };\n\n    _this.onBoardTouchEnd = function () {\n      _this.removeTouchListeners();\n    };\n\n    _this.onBoardDrag = function (e) {\n      var x = e.clientX;\n      var y = e.clientY;\n\n      _this.pointMoveTo({\n        x: x,\n        y: y\n      });\n    };\n\n    _this.onBoardDragEnd = function (e) {\n      var x = e.clientX;\n      var y = e.clientY;\n\n      _this.pointMoveTo({\n        x: x,\n        y: y\n      });\n\n      _this.removeListeners();\n    };\n\n    _this.getPrefixCls = function () {\n      return _this.props.rootPrefixCls + '-board';\n    };\n\n    _this.removeTouchListeners = function () {\n      if (_this.touchMoveListener) {\n        _this.touchMoveListener.remove();\n\n        _this.touchMoveListener = null;\n      }\n\n      if (_this.touchEndListener) {\n        _this.touchEndListener.remove();\n\n        _this.touchEndListener = null;\n      }\n    };\n\n    _this.removeListeners = function () {\n      if (_this.dragListener) {\n        _this.dragListener.remove();\n\n        _this.dragListener = null;\n      }\n\n      if (_this.dragUpListener) {\n        _this.dragUpListener.remove();\n\n        _this.dragUpListener = null;\n      }\n    };\n\n    _this.pointMoveTo = function (pos) {\n      var rect = _reactDom2[\"default\"].findDOMNode(_this).getBoundingClientRect();\n\n      var left = pos.x - rect.left;\n      var top = pos.y - rect.top;\n      var rWidth = rect.width || WIDTH;\n      var rHeight = rect.height || HEIGHT;\n      left = Math.max(0, left);\n      left = Math.min(left, rWidth);\n      top = Math.max(0, top);\n      top = Math.min(top, rHeight);\n      var color = _this.props.color;\n      color.saturation = left / rWidth;\n      color.brightness = 1 - top / rHeight;\n\n      _this.props.onChange(color);\n    };\n\n    return _this;\n  }\n\n  Board.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.removeListeners();\n    this.removeTouchListeners();\n  };\n  /**\n   * 移动光标位置到\n   * @param  {object} pos X Y 全局坐标点\n   */\n\n\n  Board.prototype.render = function render() {\n    var prefixCls = this.getPrefixCls();\n    var color = this.props.color;\n    var hueHsv = {\n      h: color.hue,\n      s: 1,\n      v: 1\n    };\n    var hueColor = new _color2[\"default\"](hueHsv).toHexString();\n    var xRel = color.saturation * 100;\n    var yRel = (1 - color.brightness) * 100;\n    return _react2[\"default\"].createElement('div', {\n      className: prefixCls\n    }, _react2[\"default\"].createElement('div', {\n      className: prefixCls + '-hsv',\n      style: {\n        backgroundColor: hueColor\n      }\n    }, _react2[\"default\"].createElement('div', {\n      className: prefixCls + '-value'\n    }), _react2[\"default\"].createElement('div', {\n      className: prefixCls + '-saturation'\n    })), _react2[\"default\"].createElement('span', {\n      style: {\n        left: xRel + '%',\n        top: yRel + '%'\n      }\n    }), _react2[\"default\"].createElement('div', {\n      className: prefixCls + '-handler',\n      onMouseDown: this.onBoardMouseDown,\n      onTouchStart: this.onBoardTouchStart\n    }));\n  };\n\n  return Board;\n}(_react2[\"default\"].Component);\n/**\n * hsv\n * h: range(0, 359)\n * s: range(0, 1)\n * v: range(0, 1)\n */\n\n\nexports[\"default\"] = Board;\nBoard.propTypes = {\n  color: _propTypes2[\"default\"].object,\n  onChange: _propTypes2[\"default\"].func,\n  rootPrefixCls: _propTypes2[\"default\"].string\n};\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}