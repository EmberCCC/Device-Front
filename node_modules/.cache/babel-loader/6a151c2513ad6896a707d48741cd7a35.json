{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport _objectSpread from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport \"antd/lib/divider/style\";\nimport _Divider from \"antd/lib/divider\";\nimport \"antd/lib/popconfirm/style\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nimport _toConsumableArray from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _objectWithoutProperties from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/input-number/style\";\nimport _InputNumber from \"antd/lib/input-number\";\nimport _classCallCheck from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\documents\\\\bl-device-manage-test\\\\src\\\\layouts\\\\TableEdit\\\\EditableTable\\\\index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar EditableContext = React.createContext();\n\nvar EditableCell =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditableCell, _React$Component);\n\n  function EditableCell() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditableCell);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditableCell)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getInput = function () {\n      if (_this.props.inputType === 'number') {\n        return React.createElement(_InputNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(_Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      });\n    };\n\n    _this.renderCell = function () {\n      var _this$props = _this.props,\n          editing = _this$props.editing,\n          dataIndex = _this$props.dataIndex,\n          title = _this$props.title,\n          inputType = _this$props.inputType,\n          record = _this$props.record,\n          index = _this$props.index,\n          children = _this$props.children,\n          restProps = _objectWithoutProperties(_this$props, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n      return React.createElement(\"td\", Object.assign({}, restProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), editing ? React.createElement(_Form.Item, {\n        style: {\n          margin: 0\n        },\n        name: dataIndex,\n        rules: [{\n          required: true\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, _this.getInput()) : children);\n    };\n\n    return _this;\n  }\n\n  _createClass(EditableCell, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(EditableContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.renderCell);\n    }\n  }]);\n\n  return EditableCell;\n}(React.Component);\n\nvar EditableTable =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(EditableTable, _React$Component2);\n\n  function EditableTable(props) {\n    var _this2;\n\n    _classCallCheck(this, EditableTable);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(EditableTable).call(this, props));\n    _this2.EditRef = React.createRef();\n\n    _this2.cancel = function () {\n      _this2.setState({\n        editingKey: ''\n      });\n    };\n\n    _this2.delete = function (key) {\n      var data = _toConsumableArray(_this2.state.data);\n\n      _this2.props.getDataSource(data.filter(function (item) {\n        return item.key !== key;\n      }));\n\n      _this2.setState({\n        data: data.filter(function (item) {\n          return item.key !== key;\n        })\n      });\n    };\n\n    _this2.add = function () {\n      var _this2$state = _this2.state,\n          count = _this2$state.count,\n          data = _this2$state.data;\n      var newData = {\n        key: count,\n        label: \"\\u9009\\u9879 \".concat(count),\n        value: count\n      };\n\n      _this2.props.getDataSource([].concat(_toConsumableArray(data), [newData]));\n\n      _this2.setState({\n        data: [].concat(_toConsumableArray(data), [newData]),\n        count: count + 1\n      });\n    };\n\n    var options = _this2.props.options;\n    _this2.state = {\n      data: options,\n      editingKey: '',\n      count: options.length\n    };\n\n    var isEditing = function isEditing(record) {\n      return record.key === _this2.state.editingKey.toString();\n    };\n\n    var edit = function edit(record) {\n      setEditingKey(record.key);\n    };\n\n    var cancel = function cancel(e) {\n      console.log(e);\n    };\n\n    _this2.columns = [{\n      title: '显示值',\n      dataIndex: 'label',\n      width: '30%',\n      editable: true\n    }, {\n      title: '传递值',\n      dataIndex: 'value',\n      width: '30%',\n      editable: true\n    }, {\n      title: '操作',\n      dataIndex: 'operation',\n      render: function render(_, record) {\n        var editable = isEditing(record);\n        return editable ? React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          onClick: function onClick() {\n            return console.log(11);\n          },\n          style: {\n            marginRight: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"Save\"), React.createElement(_Popconfirm, {\n          title: \"Sure to cancel?\",\n          onConfirm: cancel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"Cancel\")), React.createElement(_Divider, {\n          type: \"vertical\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }), React.createElement(\"a\", {\n          onClick: function onClick() {\n            return console.log(11);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \"Delete\")) : React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          disabled: editingKey !== '',\n          onClick: function onClick() {\n            return edit(record);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"Edit\"));\n      }\n    }];\n    return _this2;\n  }\n\n  _createClass(EditableTable, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(_ref) {\n      var curItemKey = _ref.curItemKey;\n\n      if (curItemKey !== this.props.curItemKey) {\n        this.setState({\n          data: this.props.options\n        });\n      }\n    }\n  }, {\n    key: \"save\",\n    value: function save(form, key) {\n      var _this3 = this;\n\n      form.validateFields(function (error, row) {\n        if (error) {\n          return;\n        }\n\n        var newData = _toConsumableArray(_this3.state.data);\n\n        var index = newData.findIndex(function (item) {\n          return key === item.key;\n        });\n\n        if (index > -1) {\n          var item = newData[index];\n          newData.splice(index, 1, _objectSpread({}, item, row));\n        } else {\n          newData.push(row);\n        }\n\n        _this3.props.getDataSource(newData);\n\n        _this3.setState({\n          data: newData,\n          editingKey: ''\n        });\n      });\n    }\n  }, {\n    key: \"edit\",\n    value: function edit(key) {\n      console.log(key);\n      this.setState({\n        editingKey: key\n      });\n      console.log(this.state.editingKey);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var components = {\n        body: {\n          cell: EditableCell\n        }\n      };\n      var columns = this.columns.map(function (col) {\n        if (!col.editable) {\n          return col;\n        }\n\n        return _objectSpread({}, col, {\n          onCell: function onCell(record) {\n            return {\n              record: record,\n              inputType: col.dataIndex === 'value' ? 'number' : 'text',\n              dataIndex: col.dataIndex,\n              title: col.title,\n              editing: _this4.isEditing(record)\n            };\n          }\n        });\n      });\n      return React.createElement(EditableContext.Provider, {\n        value: this.props.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        disabled: this.props.disabled,\n        onClick: this.add,\n        type: \"primary\",\n        style: {\n          marginBottom: 16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"\\u6DFB\\u52A0\\u9009\\u9879\"), React.createElement(_Table, {\n        components: components,\n        bordered: true,\n        dataSource: this.state.data,\n        columns: columns,\n        rowClassName: \"editable-row\",\n        pagination: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EditableTable;\n}(React.Component);\n\nexport { EditableTable as default };\nEditableCell.propTypes = {\n  editing: PropTypes.bool,\n  dataIndex: PropTypes.string,\n  title: PropTypes.string,\n  inputType: PropTypes.string,\n  record: PropTypes.object,\n  index: PropTypes.string,\n  children: PropTypes.array.isRequired,\n  restProps: PropTypes.object\n};\nEditableTable.propTypes = {\n  form: PropTypes.object.isRequired,\n  getDataSource: PropTypes.func.isRequired,\n  curItemKey: PropTypes.string.isRequired,\n  options: PropTypes.array,\n  disabled: PropTypes.bool.isRequired\n};","map":{"version":3,"sources":["F:\\documents\\bl-device-manage-test\\src\\layouts\\TableEdit\\EditableTable\\index.js"],"names":["React","PropTypes","EditableContext","createContext","EditableCell","getInput","props","inputType","renderCell","editing","dataIndex","title","record","index","children","restProps","margin","required","Component","EditableTable","EditRef","createRef","cancel","setState","editingKey","delete","key","data","state","getDataSource","filter","item","add","count","newData","label","value","options","length","isEditing","toString","edit","setEditingKey","e","console","log","columns","width","editable","render","_","marginRight","curItemKey","form","validateFields","error","row","findIndex","splice","push","components","body","cell","map","col","onCell","disabled","marginBottom","propTypes","bool","string","object","array","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Table, Input, InputNumber, Form, Button, Popconfirm, Divider } from 'antd';\r\n\r\nconst EditableContext = React.createContext();\r\n\r\nclass EditableCell extends React.Component {\r\n  getInput = () => {\r\n    if (this.props.inputType === 'number') {\r\n      return <InputNumber />;\r\n    }\r\n    return <Input />;\r\n  };\r\n\r\n  renderCell = () => {\r\n    const {\r\n      editing,\r\n      dataIndex,\r\n      title,\r\n      inputType,\r\n      record,\r\n      index,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <td {...restProps}>\r\n        {editing ? (\r\n          <Form.Item style={{ margin: 0 }} name={dataIndex} rules={[{ required: true }]}>\r\n            {this.getInput()}\r\n          </Form.Item>\r\n        ) : (\r\n          children\r\n        )}\r\n      </td>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>;\r\n  }\r\n}\r\n\r\nexport default class EditableTable extends React.Component {\r\n  EditRef = React.createRef();\r\n  constructor(props) {\r\n    super(props);\r\n    const { options } = this.props;\r\n    this.state = { data: options, editingKey: '', count: options.length };\r\n    const isEditing = record => record.key === this.state.editingKey.toString();\r\n    const edit = (record) => {\r\n      setEditingKey(record.key);\r\n    };\r\n    const cancel = (e) => {\r\n      console.log(e);\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: '显示值',\r\n        dataIndex: 'label',\r\n        width: '30%',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: '传递值',\r\n        dataIndex: 'value',\r\n        width: '30%',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: '操作',\r\n        dataIndex: 'operation',\r\n        render: (_, record) => {\r\n          const editable = isEditing(record);\r\n          return editable ? (\r\n            <span>\r\n              <a\r\n                onClick={() => console.log(11)}\r\n                style={{\r\n                  marginRight: 8,\r\n                }}\r\n              >\r\n                Save\r\n              </a>\r\n              <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n                <a>Cancel</a>\r\n              </Popconfirm>\r\n              <Divider type='vertical'/>\r\n              <a onClick={() =>console.log(11)}>Delete</a>\r\n            </span>\r\n          ) : (\r\n            <span>\r\n              <a disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n                Edit\r\n              </a>\r\n            </span>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n  }\r\n\r\n  componentDidUpdate({ curItemKey }) {\r\n    if (curItemKey !== this.props.curItemKey) {\r\n      this.setState({ data: this.props.options })\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  cancel = () => {\r\n    this.setState({ editingKey: '' });\r\n  };\r\n\r\n  save(form, key) {\r\n    form.validateFields((error, row) => {\r\n      if (error) {\r\n        return;\r\n      }\r\n      const newData = [...this.state.data];\r\n      const index = newData.findIndex(item => key === item.key);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...row,\r\n        });\r\n      } else {\r\n        newData.push(row);\r\n      }\r\n      this.props.getDataSource(newData)\r\n      this.setState({ data: newData, editingKey: '' });\r\n    });\r\n  }\r\n\r\n  edit(key) {\r\n    console.log(key);\r\n    this.setState({ editingKey: key });\r\n    console.log(this.state.editingKey);\r\n  }\r\n\r\n  delete = key => {\r\n    const data = [...this.state.data];\r\n    this.props.getDataSource(data.filter(item => item.key !== key))\r\n    this.setState({ data: data.filter(item => item.key !== key) });\r\n  };\r\n\r\n  add = () => {\r\n    const { count, data } = this.state;\r\n    const newData = {\r\n      key: count,\r\n      label: `选项 ${count}`,\r\n      value: count\r\n    };\r\n    this.props.getDataSource([...data, newData])\r\n    this.setState({\r\n      data: [...data, newData],\r\n      count: count + 1,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const components = {\r\n      body: {\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n\r\n    const columns = this.columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: record => ({\r\n          record,\r\n          inputType: col.dataIndex === 'value' ? 'number' : 'text',\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          editing: this.isEditing(record),\r\n        }),\r\n      };\r\n    });\r\n    return (\r\n      <EditableContext.Provider value={this.props.form}>\r\n        <Button disabled={this.props.disabled} onClick={this.add} type=\"primary\" style={{ marginBottom: 16 }}>添加选项</Button>\r\n        <Table\r\n          components={components}\r\n          bordered\r\n          dataSource={this.state.data}\r\n          columns={columns}\r\n          rowClassName=\"editable-row\"\r\n          pagination={false}\r\n        />\r\n      </EditableContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nEditableCell.propTypes = {\r\n  editing: PropTypes.bool,\r\n  dataIndex: PropTypes.string,\r\n  title: PropTypes.string,\r\n  inputType: PropTypes.string,\r\n  record: PropTypes.object,\r\n  index: PropTypes.string,\r\n  children: PropTypes.array.isRequired,\r\n  restProps: PropTypes.object,\r\n}\r\n\r\nEditableTable.propTypes = {\r\n  form: PropTypes.object.isRequired,\r\n  getDataSource: PropTypes.func.isRequired,\r\n  curItemKey: PropTypes.string.isRequired,\r\n  options: PropTypes.array,\r\n  disabled: PropTypes.bool.isRequired\r\n}\r\n"]},"metadata":{},"sourceType":"module"}