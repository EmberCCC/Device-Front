{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nimport React from 'react';\nimport { useTools } from '../../hooks';\nimport \"./Extra.css\";\n\nvar Extra = function Extra(_ref) {\n  var schema = _ref.schema;\n  var extra = schema.extra;\n\n  var _useTools = useTools(),\n      widgets = _useTools.widgets;\n\n  if (!extra) return null; // widget 这个api也可以不对外\n\n  var widgetName = extra.widget;\n  var Widget = widgets[widgetName];\n  if (Widget) return /*#__PURE__*/React.createElement(Widget, {\n    schema: schema\n  });\n  var __html = '';\n\n  if (typeof extra === 'string') {\n    __html = extra;\n  } // 内部BU使用的口子，这个api不对外，也没有必要\n\n\n  if (_typeof(extra) === 'object' && extra.text) {\n    __html = extra.text;\n  }\n\n  return __html && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fr-form-item-extra\",\n    dangerouslySetInnerHTML: {\n      __html: __html\n    }\n  });\n};\n\nexport default Extra;","map":null,"metadata":{},"sourceType":"module"}