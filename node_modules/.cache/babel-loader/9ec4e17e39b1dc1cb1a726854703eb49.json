{"ast":null,"code":"import _slicedToArray from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nvar _jsxFileName = \"F:\\\\documents\\\\bl-device-manage-test\\\\src\\\\layouts\\\\FlowManage\\\\index.js\";\nimport React, { useState, useRef, useCallback } from 'react';\nimport ReactFlow, { ReactFlowProvider, addEdge, useNodesState, useEdgesState, Controls } from 'react-flow-renderer';\nimport Sidebar from './Sidebar';\nimport './index.css';\nvar Header = _Layout.Header,\n    Sider = _Layout.Sider,\n    Content = _Layout.Content;\nvar initialNodes = [{\n  id: '1',\n  type: 'input',\n  data: {\n    label: 'input node'\n  },\n  position: {\n    x: 250,\n    y: 5\n  }\n}];\nvar id = 0;\n\nvar getId = function getId() {\n  return \"dndnode_\".concat(id++);\n};\n\nvar DnDFlow = function DnDFlow() {\n  var reactFlowWrapper = useRef(null);\n\n  var _useNodesState = useNodesState(initialNodes),\n      _useNodesState2 = _slicedToArray(_useNodesState, 3),\n      nodes = _useNodesState2[0],\n      setNodes = _useNodesState2[1],\n      onNodesChange = _useNodesState2[2];\n\n  var _useEdgesState = useEdgesState([]),\n      _useEdgesState2 = _slicedToArray(_useEdgesState, 3),\n      edges = _useEdgesState2[0],\n      setEdges = _useEdgesState2[1],\n      onEdgesChange = _useEdgesState2[2];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      reactFlowInstance = _useState2[0],\n      setReactFlowInstance = _useState2[1];\n\n  var onConnect = useCallback(function (params) {\n    return setEdges(function (eds) {\n      return addEdge(params, eds);\n    });\n  }, []);\n  var onDragOver = useCallback(function (event) {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n  var onDrop = useCallback(function (event) {\n    event.preventDefault();\n    var reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    var type = event.dataTransfer.getData('application/reactflow'); // check if the dropped element is valid\n\n    if (typeof type === 'undefined' || !type) {\n      return;\n    }\n\n    var position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    });\n    var newNode = {\n      id: getId(),\n      type: type,\n      position: position,\n      data: {\n        label: \"\".concat(type, \" node\")\n      }\n    };\n    setNodes(function (nds) {\n      return nds.concat(newNode);\n    });\n  }, [reactFlowInstance]);\n  var onSave = useCallback(function () {\n    if (reactFlowInstance) {\n      var flow = reactFlowInstance.toObject();\n      console.log(flow);\n      localStorage.setItem('example-flow', JSON.stringify(flow));\n    }\n  }, [reactFlowInstance]);\n  return React.createElement(_Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"11\"));\n};\n\nexport default DnDFlow;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage-test\\src\\layouts\\FlowManage\\index.js"],"names":["React","useState","useRef","useCallback","ReactFlow","ReactFlowProvider","addEdge","useNodesState","useEdgesState","Controls","Sidebar","Header","Sider","Content","initialNodes","id","type","data","label","position","x","y","getId","DnDFlow","reactFlowWrapper","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","reactFlowInstance","setReactFlowInstance","onConnect","params","eds","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","reactFlowBounds","current","getBoundingClientRect","getData","project","clientX","left","clientY","top","newNode","nds","concat","onSave","flow","toObject","console","log","localStorage","setItem","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\r\nimport { Layout, Button, Menu, Dropdown, Divider } from 'antd';\r\nimport ReactFlow, {\r\n  ReactFlowProvider,\r\n  addEdge,\r\n  useNodesState,\r\n  useEdgesState,\r\n  Controls,\r\n} from 'react-flow-renderer';\r\n\r\nimport Sidebar from './Sidebar';\r\n\r\nimport './index.css';\r\nconst { Header, Sider, Content } = Layout;\r\nconst initialNodes = [\r\n  {\r\n    id: '1',\r\n    type: 'input',\r\n    data: { label: 'input node' },\r\n    position: { x: 250, y: 5 },\r\n  },\r\n];\r\n\r\nlet id = 0;\r\nconst getId = () => `dndnode_${id++}`;\r\n\r\nconst DnDFlow = () => {\r\n  const reactFlowWrapper = useRef(null);\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n\r\n  const onConnect = useCallback((params) => setEdges((eds) => addEdge(params, eds)), []);\r\n\r\n  const onDragOver = useCallback((event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'move';\r\n  }, []);\r\n\r\n  const onDrop = useCallback(\r\n    (event) => {\r\n      event.preventDefault();\r\n\r\n      const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n      const type = event.dataTransfer.getData('application/reactflow');\r\n\r\n      // check if the dropped element is valid\r\n      if (typeof type === 'undefined' || !type) {\r\n        return;\r\n      }\r\n\r\n      const position = reactFlowInstance.project({\r\n        x: event.clientX - reactFlowBounds.left,\r\n        y: event.clientY - reactFlowBounds.top,\r\n      });\r\n      const newNode = {\r\n        id: getId(),\r\n        type,\r\n        position,\r\n        data: { label: `${type} node` },\r\n      };\r\n\r\n      setNodes((nds) => nds.concat(newNode));\r\n    },\r\n    [reactFlowInstance]\r\n  );\r\n\r\n  const onSave = useCallback(() => {\r\n    if (reactFlowInstance) {\r\n      const flow = reactFlowInstance.toObject();\r\n      console.log(flow);\r\n      localStorage.setItem('example-flow', JSON.stringify(flow));\r\n    }\r\n  }, [reactFlowInstance]);\r\n\r\n  return (\r\n    <Layout>\r\n      <Header>\r\n        11\r\n      </Header>\r\n      {/* <div className=\"dndflow\">\r\n        <ReactFlowProvider>\r\n          <Content>\r\n            <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n              <ReactFlow\r\n                nodes={nodes}\r\n                edges={edges}\r\n                onNodesChange={onNodesChange}\r\n                onEdgesChange={onEdgesChange}\r\n                onConnect={onConnect}\r\n                onInit={setReactFlowInstance}\r\n                onDrop={onDrop}\r\n                onDragOver={onDragOver}\r\n                fitView\r\n              >\r\n                <Controls />\r\n              </ReactFlow>\r\n            </div>\r\n          </Content>\r\n          <button onClick={onSave}>save</button>\r\n          <Sidebar />\r\n        </ReactFlowProvider>\r\n      </div> */}\r\n    </Layout>\r\n\r\n  );\r\n};\r\n\r\nexport default DnDFlow;\r\n"]},"metadata":{},"sourceType":"module"}