{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport _classCallCheck from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\documents\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"F:\\\\documents\\\\bl-device-manage\\\\src\\\\layouts\\\\BasicManage\\\\MaintainPage\\\\Repair\\\\ServerMenu.js\";\n\nimport React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport GlobalList from 'components/GlobalList';\nimport { setServerColumns } from '../cell/methods';\nvar ServerMenu = (_dec = inject('DeviceMaintainStore'), _dec(_class = observer(_class = (_temp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ServerMenu, _Component);\n\n  function ServerMenu(props) {\n    var _this;\n\n    _classCallCheck(this, ServerMenu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ServerMenu).call(this, props));\n\n    _this.handleVisible = function () {\n      _this.store.editVisible = !_this.store.editVisible;\n    };\n\n    _this.handleEdit = function (value) {\n      _this.store.status = 'edit';\n\n      _this.store.getInfo({\n        id: value\n      }, 'server').then(function () {\n        _this.handleVisible();\n      });\n    };\n\n    _this.handleDelete = function (value) {\n      _Modal.confirm({\n        title: '提示',\n        content: '确定删除当前点检内容？',\n        okText: '确定',\n        cancelText: '取消',\n        onOk: function onOk() {\n          _this.store.delete({\n            id: value\n          }, 'server');\n        }\n      });\n    };\n\n    _this.handleSelect = function (selectedRowKeys) {\n      _this.setState({\n        selectedRowKeys: selectedRowKeys\n      });\n    };\n\n    _this.store = _this.props.DeviceMaintainStore;\n    _this.state = {\n      selectedRowKeys: []\n    };\n    return _this;\n  }\n\n  _createClass(ServerMenu, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$store = this.store,\n          serverList = _this$store.serverList,\n          isLoading = _this$store.isLoading;\n      return React.createElement(\"div\", {\n        style: {\n          marginTop: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(GlobalList, {\n        table: {\n          rowKey: 'id',\n          columns: setServerColumns({\n            handleEdit: this.handleEdit,\n            handleDelete: this.handleDelete,\n            contentLabel: '故障'\n          }),\n          dataSource: serverList,\n          pagination: false,\n          loading: isLoading,\n          btns: [{\n            name: '新增',\n            onClick: function onClick() {\n              _this2.store.status = 'add';\n\n              _this2.handleVisible('add');\n            },\n            type: 'primary'\n          }]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }));\n    }\n    /* ------------弹窗的显隐 */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.store.getMaintainServer({\n        maintainType: 4\n      });\n    }\n  }]);\n\n  return ServerMenu;\n}(Component), _temp)) || _class) || _class);\nexport default ServerMenu;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage\\src\\layouts\\BasicManage\\MaintainPage\\Repair\\ServerMenu.js"],"names":["React","Component","inject","observer","GlobalList","setServerColumns","ServerMenu","props","handleVisible","store","editVisible","handleEdit","value","status","getInfo","id","then","handleDelete","confirm","title","content","okText","cancelText","onOk","delete","handleSelect","selectedRowKeys","setState","DeviceMaintainStore","state","serverList","isLoading","marginTop","rowKey","columns","contentLabel","dataSource","pagination","loading","btns","name","onClick","type","getMaintainServer","maintainType"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAEA,SAASC,gBAAT,QAAkC,iBAAlC;IAKMC,U,WAFLJ,MAAM,CAAC,qBAAD,C,gBACNC,Q;;;;;AAEA,sBAAYI,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,oFAAMA,KAAN;;AADkB,UAwCnBC,aAxCmB,GAwCH,YAAM;AACrB,YAAKC,KAAL,CAAWC,WAAX,GAAyB,CAAC,MAAKD,KAAL,CAAWC,WAArC;AACA,KA1CkB;;AAAA,UA4CnBC,UA5CmB,GA4CN,UAAAC,KAAK,EAAI;AACrB,YAAKH,KAAL,CAAWI,MAAX,GAAoB,MAApB;;AACA,YAAKJ,KAAL,CAAWK,OAAX,CAAmB;AAAEC,QAAAA,EAAE,EAAEH;AAAN,OAAnB,EAAiC,QAAjC,EAA2CI,IAA3C,CAAgD,YAAI;AACnD,cAAKR,aAAL;AACA,OAFD;AAGA,KAjDkB;;AAAA,UAkDnBS,YAlDmB,GAkDJ,UAACL,KAAD,EAAW;AACzB,aAAMM,OAAN,CAAc;AACbC,QAAAA,KAAK,EAAE,IADM;AAEbC,QAAAA,OAAO,EAAE,aAFI;AAGbC,QAAAA,MAAM,EAAE,IAHK;AAIbC,QAAAA,UAAU,EAAE,IAJC;AAKbC,QAAAA,IAAI,EAAE,gBAAM;AACX,gBAAKd,KAAL,CAAWe,MAAX,CACC;AACCT,YAAAA,EAAE,EAAEH;AADL,WADD,EAIC,QAJD;AAMA;AAZY,OAAd;AAcA,KAjEkB;;AAAA,UAkEnBa,YAlEmB,GAkEJ,UAAAC,eAAe,EAAI;AACjC,YAAKC,QAAL,CAAc;AAAED,QAAAA,eAAe,EAAfA;AAAF,OAAd;AACA,KApEkB;;AAElB,UAAKjB,KAAL,GAAa,MAAKF,KAAL,CAAWqB,mBAAxB;AACA,UAAKC,KAAL,GAAa;AACZH,MAAAA,eAAe,EAAE;AADL,KAAb;AAHkB;AAMlB;;;;6BACQ;AAAA;;AAAA,wBAIJ,KAAKjB,KAJD;AAAA,UAEPqB,UAFO,eAEPA,UAFO;AAAA,UAGPC,SAHO,eAGPA,SAHO;AAKR,aACC;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,UAAD;AACC,QAAA,KAAK,EAAE;AACNC,UAAAA,MAAM,EAAE,IADF;AAENC,UAAAA,OAAO,EAAE7B,gBAAgB,CAAC;AACzBM,YAAAA,UAAU,EAAC,KAAKA,UADS;AACEM,YAAAA,YAAY,EAAC,KAAKA,YADpB;AACiCkB,YAAAA,YAAY,EAAC;AAD9C,WAAD,CAFnB;AAKNC,UAAAA,UAAU,EAAEN,UALN;AAMNO,UAAAA,UAAU,EAAE,KANN;AAONC,UAAAA,OAAO,EAAEP,SAPH;AAQNQ,UAAAA,IAAI,EAAE,CACL;AACCC,YAAAA,IAAI,EAAE,IADP;AAECC,YAAAA,OAAO,EAAE,mBAAM;AACd,cAAA,MAAI,CAAChC,KAAL,CAAWI,MAAX,GAAoB,KAApB;;AACA,cAAA,MAAI,CAACL,aAAL,CAAmB,KAAnB;AACA,aALF;AAMCkC,YAAAA,IAAI,EAAE;AANP,WADK;AARA,SADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD;AA0BA;AACD;;;;wCA8BoB;AACnB,WAAKjC,KAAL,CAAWkC,iBAAX,CAA6B;AAACC,QAAAA,YAAY,EAAC;AAAd,OAA7B;AACA;;;;EAxEuB3C,S;AA0EzB,eAAeK,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport GlobalList from 'components/GlobalList';\nimport { Modal, } from 'antd';\nimport { setServerColumns, } from '../cell/methods';\n\n\n@inject('DeviceMaintainStore')\n@observer\nclass ServerMenu extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.store = this.props.DeviceMaintainStore;\n\t\tthis.state = {\n\t\t\tselectedRowKeys: [],\n\t\t};\n\t}\n\trender() {\n\t\tconst {\n\t\t\tserverList,\n\t\t\tisLoading,\n\t\t} = this.store;\n\t\treturn (\n\t\t\t<div style={{ marginTop: '10px'}}>\n\t\t\t\t<GlobalList\n\t\t\t\t\ttable={{\n\t\t\t\t\t\trowKey: 'id',\n\t\t\t\t\t\tcolumns: setServerColumns({\n\t\t\t\t\t\t\thandleEdit:this.handleEdit,handleDelete:this.handleDelete,contentLabel:'故障'\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tdataSource: serverList,\n\t\t\t\t\t\tpagination: false,\n\t\t\t\t\t\tloading: isLoading,\n\t\t\t\t\t\tbtns: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: '新增',\n\t\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\t\tthis.store.status = 'add';\n\t\t\t\t\t\t\t\t\tthis.handleVisible('add');\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ttype: 'primary'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}}\n\t\t\t\t\t\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\t/* ------------弹窗的显隐 */\n\thandleVisible = () => {\n\t\tthis.store.editVisible = !this.store.editVisible;\n\t};\n\t/* table - operate */\n\thandleEdit = value => {\n\t\tthis.store.status = 'edit';\n\t\tthis.store.getInfo({ id: value },'server').then(()=>{\n\t\t\tthis.handleVisible();\n\t\t});\n\t};\n\thandleDelete = (value) => {\n\t\tModal.confirm({\n\t\t\ttitle: '提示',\n\t\t\tcontent: '确定删除当前点检内容？',\n\t\t\tokText: '确定',\n\t\t\tcancelText: '取消',\n\t\t\tonOk: () => {\n\t\t\t\tthis.store.delete(\n\t\t\t\t\t{\n\t\t\t\t\t\tid: value\n\t\t\t\t\t},\n\t\t\t\t\t'server'\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t};\n\thandleSelect = selectedRowKeys => {\n\t\tthis.setState({ selectedRowKeys });\n\t};\n\tcomponentDidMount() {\n\t\tthis.store.getMaintainServer({maintainType:4});\n\t}\n}\nexport default ServerMenu;\n"]},"metadata":{},"sourceType":"module"}