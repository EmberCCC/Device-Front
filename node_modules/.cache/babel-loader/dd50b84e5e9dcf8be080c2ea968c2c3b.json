{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _dec2, _class, _descriptor, _descriptor2, _descriptor3, _temp;\n\n/*\r\n * @Author: your name\r\n * @Date: 2022-03-31 23:08:16\r\n * @LastEditTime: 2022-04-07 10:48:22\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n * @FilePath: \\bl-device-manage-test\\src\\stores\\SpareStore\r\n */\nimport { observable, action } from 'mobx';\nimport { isDataExist } from '../utils/dataTools';\nimport * as services from '../services/basic';\nvar Basic = (_dec = action.bound, _dec2 = action.bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function Basic() {\n    _classCallCheck(this, Basic);\n\n    _initializerDefineProperty(this, \"columns\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"dataSource\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"PageInfo\", _descriptor3, this);\n  }\n\n  _createClass(Basic, [{\n    key: \"queryAll\",\n    value: function () {\n      var _queryAll = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(params) {\n        var res, data, columns, dataSource, i, obj, j, label;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return services.getRequest(services.requestList.getFieldNameAndType, params);\n\n              case 3:\n                res = _context.sent;\n                res.data.data = [{\n                  \"fromId\": 1,\n                  \"formName\": \"机房\",\n                  \"data\": [{\n                    \"typeId\": 1,\n                    \"name\": \"Input\",\n                    \"label\": \"文本框\",\n                    \"attr\": {\n                      \"style\": {\n                        \"width\": \"60%\"\n                      },\n                      \"value\": \"机房一\",\n                      \"placeholder\": \"请输入\"\n                    }\n                  }, {\n                    \"typeId\": 1,\n                    \"name\": \"Input\",\n                    \"label\": \"文本框\",\n                    \"attr\": {\n                      \"style\": {\n                        \"width\": \"60%\"\n                      },\n                      \"value\": \"机房二\",\n                      \"placeholder\": \"请输入\"\n                    }\n                  }],\n                  \"tenement_id\": 1\n                }, {\n                  \"fromId\": 1,\n                  \"formName\": \"机房\",\n                  \"data\": [{\n                    \"typeId\": 1,\n                    \"name\": \"Input\",\n                    \"label\": \"文本框\",\n                    \"attr\": {\n                      \"style\": {\n                        \"width\": \"60%\"\n                      },\n                      \"value\": \"机房2\",\n                      \"placeholder\": \"请输入\"\n                    }\n                  }, {\n                    \"typeId\": 1,\n                    \"name\": \"Input\",\n                    \"label\": \"文本框\",\n                    \"attr\": {\n                      \"style\": {\n                        \"width\": \"60%\"\n                      },\n                      \"value\": \"机房3\",\n                      \"placeholder\": \"请输入\"\n                    }\n                  }],\n                  \"tenement_id\": 1\n                }];\n                console.log(res);\n\n                if (isDataExist(res)) {\n                  data = res.data.data;\n                  console.log(data);\n                  columns = [];\n                  dataSource = [];\n\n                  for (i = 0; i < data[0].data.length; i++) {\n                    obj = {};\n                    obj.title = data[0].data[0].label;\n                    obj.dataIndex = data[0].data[0].label;\n                    obj.key = data[0].data[0].label;\n                    columns.push(obj);\n                  }\n\n                  this.columns = columns;\n\n                  for (i = 0; i < data.length; i++) {\n                    obj = {};\n                    obj.key = (i + 1).toString();\n\n                    for (j = 0; j < data[i].data.length; j++) {\n                      label = data[i].data[j].label;\n                      obj[label] = data[i].data[j].attr.value;\n                    }\n\n                    dataSource.push(obj);\n                  }\n\n                  this.dataSource = dataSource;\n                }\n\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 9]]);\n      }));\n\n      function queryAll(_x) {\n        return _queryAll.apply(this, arguments);\n      }\n\n      return queryAll;\n    }()\n  }, {\n    key: \"addNew\",\n    value: function () {\n      var _addNew = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return services.putRequest(services.requestList.saveDatabase, params);\n\n              case 3:\n                res = _context2.sent;\n                console.log(params);\n\n                if (!isDataExist(res)) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", res);\n\n              case 7:\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 9]]);\n      }));\n\n      function addNew(_x2) {\n        return _addNew.apply(this, arguments);\n      }\n\n      return addNew;\n    }()\n  }]);\n\n  return Basic;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"columns\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"dataSource\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"PageInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"queryAll\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"queryAll\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"addNew\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"addNew\"), _class.prototype)), _class));\nvar BasicStore = new Basic();\nexport default BasicStore;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage-test\\src\\stores\\BasicStore.js"],"names":["observable","action","isDataExist","services","Basic","bound","params","getRequest","requestList","getFieldNameAndType","res","data","console","log","columns","dataSource","i","length","obj","title","label","dataIndex","key","push","toString","j","attr","value","putRequest","saveDatabase","BasicStore"],"mappings":"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","sourcesContent":["/*\r\n * @Author: your name\r\n * @Date: 2022-03-31 23:08:16\r\n * @LastEditTime: 2022-04-07 10:48:22\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n * @FilePath: \\bl-device-manage-test\\src\\stores\\SpareStore\r\n */\r\nimport { observable, action } from 'mobx';\r\nimport { isDataExist } from '../utils/dataTools';\r\nimport * as services from '../services/basic';\r\n\r\nclass Basic {\r\n    @observable columns = [];\r\n    @observable dataSource = [];\r\n    @observable PageInfo = {};\r\n\r\n    @action.bound async queryAll(params) {\r\n        try {\r\n            let res = await services.getRequest(services.requestList.getFieldNameAndType, params);\r\n            res.data.data = [\r\n                {\r\n                    \"fromId\": 1,\r\n                    \"formName\": \"机房\",\r\n                    \"data\": [\r\n                        {\r\n                            \"typeId\": 1,\r\n                            \"name\": \"Input\",\r\n                            \"label\": \"文本框\",\r\n                            \"attr\": {\r\n                                \"style\": {\r\n                                    \"width\": \"60%\"\r\n                                },\r\n                                \"value\": \"机房一\",\r\n                                \"placeholder\": \"请输入\"\r\n                            }\r\n                        },\r\n                        {\r\n                            \"typeId\": 1,\r\n                            \"name\": \"Input\",\r\n                            \"label\": \"文本框\",\r\n                            \"attr\": {\r\n                                \"style\": {\r\n                                    \"width\": \"60%\"\r\n                                },\r\n                                \"value\": \"机房二\",\r\n                                \"placeholder\": \"请输入\"\r\n                            }\r\n                        }\r\n                    ],\r\n                    \"tenement_id\": 1\r\n                },\r\n                {\r\n                    \"fromId\": 1,\r\n                    \"formName\": \"机房\",\r\n                    \"data\": [\r\n                        {\r\n                            \"typeId\": 1,\r\n                            \"name\": \"Input\",\r\n                            \"label\": \"文本框\",\r\n                            \"attr\": {\r\n                                \"style\": {\r\n                                    \"width\": \"60%\"\r\n                                },\r\n                                \"value\": \"机房2\",\r\n                                \"placeholder\": \"请输入\"\r\n                            }\r\n                        },\r\n                        {\r\n                            \"typeId\": 1,\r\n                            \"name\": \"Input\",\r\n                            \"label\": \"文本框\",\r\n                            \"attr\": {\r\n                                \"style\": {\r\n                                    \"width\": \"60%\"\r\n                                },\r\n                                \"value\": \"机房3\",\r\n                                \"placeholder\": \"请输入\"\r\n                            }\r\n                        }\r\n                    ],\r\n                    \"tenement_id\": 1\r\n                }]\r\n            console.log(res);\r\n            if (isDataExist(res)) {\r\n                const data = res.data.data\r\n                console.log(data);\r\n                const columns = [];\r\n                const dataSource = [];\r\n                for (var i = 0; i < data[0].data.length; i++) {\r\n                    var obj = {}\r\n                    obj.title = data[0].data[0].label\r\n                    obj.dataIndex = data[0].data[0].label\r\n                    obj.key = data[0].data[0].label\r\n                    columns.push(obj)\r\n                }\r\n                this.columns = columns\r\n                for (var i = 0; i < data.length; i++) {\r\n                    var obj = {}\r\n                    obj.key = (i + 1).toString()\r\n                    for (var j = 0; j < data[i].data.length; j++) {\r\n                        const label = data[i].data[j].label\r\n                        obj[label] = data[i].data[j].attr.value\r\n                    }\r\n                    dataSource.push(obj)\r\n                }\r\n                this.dataSource = dataSource;\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    @action.bound async addNew(params) {\r\n        try {\r\n            let res = await services.putRequest(services.requestList.saveDatabase, params);\r\n            console.log(params);\r\n            if (isDataExist(res)) {\r\n                return res;\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nlet BasicStore = new Basic();\r\nexport default BasicStore;"]},"metadata":{},"sourceType":"module"}