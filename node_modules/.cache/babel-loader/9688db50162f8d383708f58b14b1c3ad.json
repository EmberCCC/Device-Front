{"ast":null,"code":"import \"antd/lib/input-number/style\";\nimport _InputNumber from \"antd/lib/input-number\";\nimport \"antd/lib/checkbox/style\";\nimport _Checkbox from \"antd/lib/checkbox\";\nimport \"antd/lib/date-picker/style\";\nimport _DatePicker from \"antd/lib/date-picker\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/radio/style\";\nimport _Radio from \"antd/lib/radio\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/divider/style\";\nimport _Divider from \"antd/lib/divider\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nvar _jsxFileName = \"F:\\\\documents\\\\bl-device-manage\\\\src\\\\layouts\\\\ZCloudDevice\\\\DeviceMaintain\\\\methods.js\";\nimport React from 'react';\nimport TimeInput from './cell/TimeInput';\nimport { circleStatus } from 'components/StateLess';\nimport { isEmpty } from 'lodash';\nvar Option = _Select.Option;\nvar _window$GLOBAL_PARAMS = window.GLOBAL_PARAMS,\n    locale = _window$GLOBAL_PARAMS.locale,\n    moment = _window$GLOBAL_PARAMS.moment;\n/* 保养库的列表title */\n\nexport function setServerColumns(_ref) {\n  var handleEdit = _ref.handleEdit,\n      handleDelete = _ref.handleDelete,\n      type = _ref.type;\n  return [{\n    title: '设备类型',\n    dataIndex: 'deviceType',\n    key: 'deviceType'\n  }, {\n    title: type === 'repair' ? '点检类型' : '保养类型',\n    dataIndex: 'contentType',\n    key: 'contentType',\n    render: function render(value) {\n      return value === 1 ? '是否型' : value === 2 ? '选项型' : '输入型';\n    }\n  }, {\n    title: type === 'repair' ? '点检内容' : '保养内容',\n    dataIndex: 'content',\n    key: 'content'\n  }, {\n    title: '创建时间',\n    dataIndex: 'createTime',\n    key: 'createTime'\n  }, {\n    title: '创建人',\n    dataIndex: 'creater',\n    key: 'creater'\n  }, {\n    title: '操作',\n    dataIndex: 'maintainId',\n    key: 'maintainId',\n    align: 'right',\n    render: function render(value) {\n      return React.createElement(\"span\", {\n        style: {\n          color: 'var(--PC)',\n          cursor: 'pointer'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: function onClick() {\n          return handleEdit(value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"\\u7F16\\u8F91\"), React.createElement(_Divider, {\n        type: \"vertical\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        onClick: function onClick() {\n          return handleDelete({\n            value: value,\n            type: 'single'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"\\u5220\\u9664\"));\n    }\n  }];\n}\n/* 保养方案的列表title */\n\nexport function setSchemaColumns(_ref2) {\n  var handleEdit = _ref2.handleEdit,\n      handleDelete = _ref2.handleDelete,\n      type = _ref2.type;\n  return [{\n    title: '设备类型',\n    dataIndex: 'deviceType',\n    key: 'deviceType'\n  }, {\n    title: '方案名',\n    dataIndex: 'planName',\n    key: 'planName'\n  }, {\n    title: type === 'repair' ? '点检项' : '保养项',\n    dataIndex: 'contentIds',\n    key: 'contentIds',\n    render: function render(value) {\n      return value ? value.split(',').length : '-';\n    }\n  }, {\n    title: '备注信息',\n    dataIndex: 'description',\n    key: 'description',\n    render: function render(value) {\n      return value || '-';\n    }\n  }, {\n    title: '创建时间',\n    dataIndex: 'createTime',\n    key: 'createTime',\n    render: function render(value) {\n      return value || '-';\n    }\n  }, {\n    title: '创建人',\n    dataIndex: 'creater',\n    key: 'creater',\n    render: function render(value) {\n      return value || '-';\n    }\n  }, {\n    title: '操作',\n    dataIndex: 'id',\n    key: 'id',\n    align: 'right',\n    render: function render(value) {\n      return React.createElement(\"span\", {\n        style: {\n          color: 'var(--PC)',\n          cursor: 'pointer'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: function onClick() {\n          return handleEdit(value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"\\u7F16\\u8F91\"), React.createElement(_Divider, {\n        type: \"vertical\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        onClick: function onClick() {\n          return handleDelete({\n            type: 'single',\n            value: value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"\\u5220\\u9664\"));\n    }\n  }];\n}\n/* 设置form-columns */\n\nexport function setFormColumns(_ref3) {\n  var type = _ref3.type,\n      status = _ref3.status,\n      currentMain = _ref3.currentMain,\n      handleRadio = _ref3.handleRadio,\n      contentType = _ref3.contentType,\n      onAddItem = _ref3.onAddItem,\n      onDelItem = _ref3.onDelItem,\n      handleDataValue = _ref3.handleDataValue,\n      minValue = _ref3.minValue,\n      maxValue = _ref3.maxValue;\n  return [{\n    key: 'content',\n    label: type === 'repair' ? '点检内容' : '保养内容',\n    value: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      style: {\n        width: '330px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }),\n    getFieldDecorator: {\n      initialValue: status === 'edit' ? currentMain.content : undefined,\n      rules: [{\n        required: true,\n        message: '请输入内容'\n      }]\n    }\n  }, {\n    key: 'contentType',\n    label: type === 'repair' ? '点检类型' : '保养类型',\n    value: React.createElement(_Radio.Group, {\n      onChange: handleRadio,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(_Radio, {\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"\\u662F\\u5426\\u578B\"), React.createElement(_Radio, {\n      value: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"\\u9009\\u9879\\u578B\"), React.createElement(_Radio, {\n      value: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"\\u8F93\\u5165\\u578B\")),\n    getFieldDecorator: {\n      initialValue: status === 'edit' ? currentMain.contentType : 1,\n      rules: [{\n        required: true,\n        message: '请选择类型'\n      }]\n    }\n  }, {\n    key: 'extendBtn',\n    label: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }),\n    displayNone: contentType === 1,\n    colon: false,\n    value: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, contentType === 2 ? [React.createElement(_Button, {\n      type: \"primary\",\n      onClick: onAddItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"\\u589E\\u52A0\\u9009\\u9879\"), React.createElement(_Button, {\n      style: {\n        marginLeft: '5px'\n      },\n      onClick: onDelItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"\\u5220\\u9664\\u9009\\u9879\")] : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"\\u8BF7\\u8F93\\u5165\\u6570\\u636E\\u533A\\u95F4\\u503C\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"\\u6700\\u5C0F\\u503C\\uFF1A\", React.createElement(_Input, {\n      style: {\n        width: '200px'\n      },\n      value: minValue,\n      onChange: function onChange(e) {\n        return handleDataValue('minValue', e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"\\u6700\\u5927\\u503C\\uFF1A\", React.createElement(_Input, {\n      style: {\n        width: '200px'\n      },\n      value: maxValue,\n      onChange: function onChange(e) {\n        return handleDataValue('maxValue', e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }))))\n  }];\n}\n/* 保养方案 form-columns */\n\nexport function setSchemaFormColumns(_ref4) {\n  var status = _ref4.status,\n      currentMain = _ref4.currentMain,\n      type = _ref4.type;\n  return [{\n    key: 'planName',\n    label: type === 'repair' ? '点检方案' : '保养方案',\n    value: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      style: {\n        width: '330px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }),\n    getFieldDecorator: {\n      initialValue: status === 'edit' ? currentMain.planName : undefined,\n      rules: [{\n        required: true,\n        message: '请输入内容'\n      }]\n    }\n  }, {\n    key: 'description',\n    label: '备注信息',\n    value: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      style: {\n        width: '330px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }),\n    getFieldDecorator: {\n      initialValue: status === 'edit' ? currentMain.description : undefined\n    }\n  }];\n}\n/* 设置保养方案中弹窗的table */\n\nexport function setSchemaModalColumns(_ref5) {\n  var type = _ref5.type;\n  return [{\n    title: type === 'repair' ? '点检类型' : '保养类型',\n    dataIndex: 'contentType',\n    key: 'contentType',\n    render: function render(value) {\n      return value === 1 ? '是否型' : value === 2 ? '选项型' : '输入型';\n    }\n  }, {\n    title: type === 'repair' ? '点检内容' : '保养内容',\n    dataIndex: 'content',\n    key: 'content'\n  }];\n}\n/* 设置保养计划中的columns */\n\nexport function setPlanColumns(_ref6) {\n  var handleDelete = _ref6.handleDelete,\n      handleEdit = _ref6.handleEdit,\n      handleToDetail = _ref6.handleToDetail;\n  return [{\n    title: '计划名称',\n    dataIndex: 'planName',\n    key: 'planName'\n  }, {\n    title: '设备名称',\n    dataIndex: 'devName',\n    key: 'devName'\n  }, {\n    title: '方案名称',\n    dataIndex: 'schemaName',\n    key: 'schemaName'\n  }, {\n    title: '计划执行时间',\n    dataIndex: 'excuteTime',\n    key: 'excuteTime'\n  }, {\n    title: '计划等待时间',\n    dataIndex: 'waitTime',\n    key: 'waitTime',\n    render: function render(value, record) {\n      return value + record.excuteUnit;\n    }\n  }, {\n    title: '执行周期',\n    dataIndex: 'excuteCycle',\n    key: 'excuteCycle',\n    render: function render(value) {\n      return value === 1 ? '天' : '周';\n    }\n  }, {\n    title: '创建人',\n    dataIndex: 'creater',\n    key: 'creater'\n  }, {\n    title: '创建时间',\n    dataIndex: 'createTime',\n    key: 'createTime'\n  }, {\n    title: '操作',\n    dataIndex: 'excuteStatus',\n    key: 'excuteStatus',\n    render: function render(value, record) {\n      return React.createElement(\"span\", {\n        style: {\n          color: 'var(--PC)',\n          cursor: 'pointer'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: function onClick() {\n          return handleEdit(record.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \"\\u7F16\\u8F91\"), React.createElement(_Divider, {\n        type: \"vertical\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        onClick: function onClick() {\n          return handleDelete({\n            value: record.id,\n            type: 'single'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, \"\\u5220\\u9664\")));\n    }\n  }];\n}\n/* 设置保养计划弹窗-columns */\n\nexport function setPlanModalColumns(_ref7) {\n  var status = _ref7.status,\n      currentMain = _ref7.currentMain,\n      deviceByIdList = _ref7.deviceByIdList,\n      schemaByIdList = _ref7.schemaByIdList;\n  return [{\n    key: 'planName',\n    label: '计划名称',\n    value: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      style: {\n        width: '250px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }),\n    getFieldDecorator: {\n      initialValue: status === 'edit' ? currentMain.planName : undefined,\n      rules: [{\n        required: true,\n        message: '必填'\n      }]\n    }\n  }, {\n    key: 'deviceId',\n    label: '选择设备',\n    value: React.createElement(_Select, {\n      showSearch: true,\n      allowClear: true,\n      style: {\n        width: 250\n      },\n      placeholder: \"\\u9009\\u62E9\\u8BBE\\u5907\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, deviceByIdList && deviceByIdList.map(function (item) {\n      return React.createElement(Option, {\n        key: item.id,\n        value: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, item.devName);\n    })),\n    getFieldDecorator: {\n      initialValue: status === 'edit' ? Number(currentMain.deviceId) : undefined,\n      rules: [{\n        required: true,\n        message: '必填'\n      }]\n    }\n  }, {\n    key: 'schemaId',\n    label: '选择方案',\n    value: React.createElement(_Select, {\n      showSearch: true,\n      allowClear: true,\n      style: {\n        width: 250\n      },\n      placeholder: \"\\u9009\\u62E9\\u65B9\\u6848\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, schemaByIdList && schemaByIdList.map(function (item) {\n      return React.createElement(Option, {\n        key: item.id,\n        value: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, item.planName);\n    })),\n    getFieldDecorator: {\n      initialValue: status === 'edit' ? currentMain.schemaId : undefined,\n      rules: [{\n        required: true,\n        message: '必填'\n      }]\n    }\n  }, {\n    key: 'excuteTime',\n    label: '计划执行时间',\n    value: React.createElement(_DatePicker, {\n      mode: \"time\",\n      showTime: true,\n      format: \"HH:mm:ss\",\n      locale: locale,\n      placeholder: \"\\u8BF7\\u9009\\u62E9\\u65F6\\u95F4\",\n      style: {\n        width: '250px',\n        display: 'inline-block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }),\n    getFieldDecorator: {\n      initialValue: status === 'edit' ? moment(currentMain.excuteTime) : undefined,\n      rules: [{\n        required: true,\n        message: '必填'\n      }]\n    }\n  }, {\n    key: 'planWaitTime',\n    label: '计划等待时间',\n    value: React.createElement(TimeInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }),\n    getFieldDecorator: {\n      initialValue: status === 'edit' ? {\n        waitTime: currentMain.waitTime,\n        excuteUnit: currentMain.excuteUnit\n      } : undefined,\n      rules: [{\n        required: true,\n        message: '等待时间大于0'\n      }]\n    }\n  }, {\n    key: 'excuteCycle',\n    label: '执行周期',\n    value: React.createElement(_Select, {\n      showSearch: true,\n      allowClear: true,\n      style: {\n        width: 250\n      },\n      placeholder: \"\\u9009\\u62E9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, \"\\u5929\"), React.createElement(Option, {\n      value: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, \"\\u5468\")),\n    getFieldDecorator: {\n      initialValue: status === 'edit' ? currentMain.excuteCycle : 1,\n      rules: [{\n        required: true,\n        message: '必填'\n      }]\n    }\n  }];\n}\n/* 设置保养操作的 - columns */\n\nexport function setOperateColumns(_ref8) {\n  var handleEdit = _ref8.handleEdit,\n      type = _ref8.type;\n  return [{\n    title: '方案名称',\n    dataIndex: 'planName',\n    key: 'planName'\n  }, {\n    title: '设备名称',\n    dataIndex: 'devName',\n    key: 'devName'\n  }, {\n    title: type === 'repair' ? '点检项' : '保养项',\n    dataIndex: 'contentIds',\n    key: 'contentIds',\n    render: function render(value) {\n      return value ? value.split(',').length : '-';\n    }\n  }, {\n    title: '操作',\n    dataIndex: 'contentIds',\n    key: 'contentIds',\n    // align:'right',\n    render: function render(value, record) {\n      return React.createElement(\"span\", {\n        style: {\n          color: 'var(--PC)',\n          cursor: 'pointer'\n        },\n        onClick: function onClick() {\n          return handleEdit(value, record);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, \"\\u5904\\u7406\");\n    }\n  }];\n}\n/* 设置 操作弹窗columns */\n\nexport function setModalOperateColumns(_ref9) {\n  var type = _ref9.type,\n      onRadioChange = _ref9.onRadioChange,\n      onCheckBoxChange = _ref9.onCheckBoxChange,\n      onInputNumber = _ref9.onInputNumber,\n      onDescription = _ref9.onDescription,\n      contents = _ref9.contents;\n  return [{\n    title: type === 'repair' ? '点检名称' : '保养名称',\n    dataIndex: 'content',\n    key: 'content'\n  }, {\n    title: type === 'repair' ? '点检类型' : '保养类型',\n    dataIndex: 'contentType',\n    key: 'contentType',\n    render: function render(value) {\n      return value === 1 ? '是否型' : value === 2 ? '选项型' : '输入型';\n    }\n  }, {\n    title: type === 'repair' ? '点检结果' : '保养结果',\n    dataIndex: 'contentType',\n    key: 'result',\n    render: function render(value, record) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }, value === 1 ? React.createElement(_Radio.Group, {\n        onChange: function onChange(e) {\n          return onRadioChange(record, e.target.value);\n        },\n        defaultValue: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      }, React.createElement(_Radio, {\n        value: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, \"\\u662F\"), React.createElement(_Radio, {\n        value: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }, \"\\u5426\")) : value === 2 ? !isEmpty(contents) && React.createElement(_Checkbox.Group, {\n        options: contents[record.maintainID].strList,\n        onChange: function onChange(e) {\n          return onCheckBoxChange(record, e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }) : value === 3 ? !isEmpty(contents) && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        },\n        __self: this\n      }, contents[record.maintainID].minValue, ' < ', \" \"), React.createElement(_InputNumber, {\n        style: {\n          width: '80px'\n        },\n        min: contents[record.maintainID].minValue,\n        max: contents[record.maintainID].maxValue // value = {}\n        ,\n        onChange: function onChange(e) {\n          return onInputNumber(record, e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }, ' < ', contents[record.maintainID].maxValue)) : null);\n    }\n  }, {\n    title: '备注',\n    dataIndex: 'description',\n    key: 'description',\n    render: function render(value, record) {\n      return React.createElement(_Input, {\n        onChange: function onChange(e) {\n          return onDescription(record, e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543\n        },\n        __self: this\n      });\n    }\n  }];\n}\n/* 保养查询 */\n\nexport function Query_Result(type) {\n  return {\n    1: type === 'repair' ? '点检完成' : '保养通过',\n    2: '超时',\n    3: type === 'repair' ? '点检未完成' : '保养未通过',\n    4: type === 'repair' ? '超时未完成' : '超时未通过',\n    5: '未保养'\n  };\n}\nexport function setQueryColumns(type) {\n  return [{\n    title: '设备类型',\n    dataIndex: 'deviceType',\n    key: 'deviceType'\n  }, {\n    title: '设备名称',\n    dataIndex: 'devName',\n    key: 'devName'\n  }, {\n    title: type === 'repair' ? '点检方案' : '保养方案',\n    dataIndex: 'schemaName',\n    key: 'schemaName'\n  }, {\n    title: type === 'repair' ? '点检结果' : '保养结果',\n    dataIndex: 'result',\n    key: 'result',\n    render: function render(value) {\n      return circleStatus(value, 'maintain', Query_Result(type));\n    }\n  }, {\n    title: type === 'repair' ? '计划点检时间' : '计划保养时间',\n    dataIndex: 'excuteTime',\n    key: 'excuteTime'\n  }, {\n    title: type === 'repair' ? '实际点检时间' : '实际保养时间',\n    dataIndex: 'actualTime',\n    key: 'actualTime'\n  }];\n}","map":{"version":3,"sources":["F:\\documents\\bl-device-manage\\src\\layouts\\ZCloudDevice\\DeviceMaintain\\methods.js"],"names":["React","TimeInput","circleStatus","isEmpty","Option","window","GLOBAL_PARAMS","locale","moment","setServerColumns","handleEdit","handleDelete","type","title","dataIndex","key","render","value","align","color","cursor","setSchemaColumns","split","length","setFormColumns","status","currentMain","handleRadio","contentType","onAddItem","onDelItem","handleDataValue","minValue","maxValue","label","width","getFieldDecorator","initialValue","content","undefined","rules","required","message","displayNone","colon","marginLeft","e","setSchemaFormColumns","planName","description","setSchemaModalColumns","setPlanColumns","handleToDetail","record","excuteUnit","id","setPlanModalColumns","deviceByIdList","schemaByIdList","map","item","devName","Number","deviceId","schemaId","display","excuteTime","waitTime","excuteCycle","setOperateColumns","setModalOperateColumns","onRadioChange","onCheckBoxChange","onInputNumber","onDescription","contents","target","maintainID","strList","Query_Result","setQueryColumns"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,OAAT,QAAwB,QAAxB;IACQC,M,WAAAA,M;4BACmBC,MAAM,CAACC,a;IAA1BC,M,yBAAAA,M;IAAQC,M,yBAAAA,M;AAEhB;;AACA,OAAO,SAASC,gBAAT,OAEJ;AAAA,MADDC,UACC,QADDA,UACC;AAAA,MADWC,YACX,QADWA,YACX;AAAA,MADyBC,IACzB,QADyBA,IACzB;AACD,SAAO,CACL;AACEC,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,YAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GADK,EAML;AACEF,IAAAA,KAAK,EAAED,IAAI,KAAK,QAAT,GAAoB,MAApB,GAA6B,MADtC;AAEEE,IAAAA,SAAS,EAAE,aAFb;AAGEC,IAAAA,GAAG,EAAE,aAHP;AAIEC,IAAAA,MAAM,EAAE,gBAAAC,KAAK;AAAA,aACXA,KAAK,KAAK,CAAV,GAAc,KAAd,GAAsBA,KAAK,KAAK,CAAV,GAAc,KAAd,GAAsB,KADjC;AAAA;AAJf,GANK,EAaL;AACEJ,IAAAA,KAAK,EAAED,IAAI,KAAK,QAAT,GAAoB,MAApB,GAA6B,MADtC;AAEEE,IAAAA,SAAS,EAAE,SAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GAbK,EAkBL;AACEF,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,YAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GAlBK,EAuBL;AACEF,IAAAA,KAAK,EAAE,KADT;AAEEC,IAAAA,SAAS,EAAE,SAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GAvBK,EA4BL;AACEF,IAAAA,KAAK,EAAE,IADT;AAEEC,IAAAA,SAAS,EAAE,YAFb;AAGEC,IAAAA,GAAG,EAAE,YAHP;AAIEG,IAAAA,KAAK,EAAE,OAJT;AAKEF,IAAAA,MAAM,EAAE,gBAAAC,KAAK,EAAI;AACf,aACE;AAAM,QAAA,KAAK,EAAE;AAAEE,UAAAA,KAAK,EAAE,WAAT;AAAsBC,UAAAA,MAAM,EAAE;AAA9B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,OAAO,EAAE;AAAA,iBAAMV,UAAU,CAACO,KAAD,CAAhB;AAAA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAS,QAAA,IAAI,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAM,QAAA,OAAO,EAAE;AAAA,iBAAMN,YAAY,CAAC;AAAEM,YAAAA,KAAK,EAALA,KAAF;AAASL,YAAAA,IAAI,EAAE;AAAf,WAAD,CAAlB;AAAA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,CADF;AASD;AAfH,GA5BK,CAAP;AA8CD;AACD;;AACA,OAAO,SAASS,gBAAT,QAIL;AAAA,MAFEX,UAEF,SAFEA,UAEF;AAAA,MAFcC,YAEd,SAFcA,YAEd;AAAA,MAF4BC,IAE5B,SAF4BA,IAE5B;AACA,SAAO,CACL;AACEC,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,YAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GADK,EAML;AACEF,IAAAA,KAAK,EAAE,KADT;AAEEC,IAAAA,SAAS,EAAE,UAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GANK,EAWL;AACEF,IAAAA,KAAK,EAAED,IAAI,KAAK,QAAT,GAAoB,KAApB,GAA4B,KADrC;AAEEE,IAAAA,SAAS,EAAE,YAFb;AAGEC,IAAAA,GAAG,EAAE,YAHP;AAIEC,IAAAA,MAAM,EAAE,gBAAAC,KAAK;AAAA,aAAIA,KAAK,GAAGA,KAAK,CAACK,KAAN,CAAY,GAAZ,EAAiBC,MAApB,GAA6B,GAAtC;AAAA;AAJf,GAXK,EAiBL;AACEV,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,aAFb;AAGEC,IAAAA,GAAG,EAAE,aAHP;AAGsBC,IAAAA,MAAM,EAAE,gBAACC,KAAD;AAAA,aAAWA,KAAK,IAAI,GAApB;AAAA;AAH9B,GAjBK,EAsBL;AACEJ,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,YAFb;AAGEC,IAAAA,GAAG,EAAE,YAHP;AAGqBC,IAAAA,MAAM,EAAE,gBAACC,KAAD;AAAA,aAAWA,KAAK,IAAI,GAApB;AAAA;AAH7B,GAtBK,EA2BL;AACEJ,IAAAA,KAAK,EAAE,KADT;AAEEC,IAAAA,SAAS,EAAE,SAFb;AAGEC,IAAAA,GAAG,EAAE,SAHP;AAGkBC,IAAAA,MAAM,EAAE,gBAACC,KAAD;AAAA,aAAWA,KAAK,IAAI,GAApB;AAAA;AAH1B,GA3BK,EAgCL;AACEJ,IAAAA,KAAK,EAAE,IADT;AAEEC,IAAAA,SAAS,EAAE,IAFb;AAGEC,IAAAA,GAAG,EAAE,IAHP;AAIEG,IAAAA,KAAK,EAAE,OAJT;AAKEF,IAAAA,MAAM,EAAE,gBAAAC,KAAK,EAAI;AACf,aACE;AAAM,QAAA,KAAK,EAAE;AAAEE,UAAAA,KAAK,EAAE,WAAT;AAAsBC,UAAAA,MAAM,EAAE;AAA9B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,OAAO,EAAE;AAAA,iBAAMV,UAAU,CAACO,KAAD,CAAhB;AAAA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAS,QAAA,IAAI,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAM,QAAA,OAAO,EAAE;AAAA,iBAAMN,YAAY,CAAC;AAAEC,YAAAA,IAAI,EAAE,QAAR;AAAkBK,YAAAA,KAAK,EAALA;AAAlB,WAAD,CAAlB;AAAA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,CADF;AASD;AAfH,GAhCK,CAAP;AAkDD;AAED;;AACA,OAAO,SAASO,cAAT,QAEJ;AAAA,MADDZ,IACC,SADDA,IACC;AAAA,MADKa,MACL,SADKA,MACL;AAAA,MADaC,WACb,SADaA,WACb;AAAA,MAD0BC,WAC1B,SAD0BA,WAC1B;AAAA,MADuCC,WACvC,SADuCA,WACvC;AAAA,MADoDC,SACpD,SADoDA,SACpD;AAAA,MAD+DC,SAC/D,SAD+DA,SAC/D;AAAA,MAD0EC,eAC1E,SAD0EA,eAC1E;AAAA,MAD2FC,QAC3F,SAD2FA,QAC3F;AAAA,MADqGC,QACrG,SADqGA,QACrG;AACD,SAAO,CACL;AACElB,IAAAA,GAAG,EAAE,SADP;AAEEmB,IAAAA,KAAK,EAAEtB,IAAI,KAAK,QAAT,GAAoB,MAApB,GAA6B,MAFtC;AAGEK,IAAAA,KAAK,EAAE;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAyB,MAAA,KAAK,EAAE;AAAEkB,QAAAA,KAAK,EAAE;AAAT,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHT;AAIEC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,YAAY,EAAEZ,MAAM,KAAK,MAAX,GAAoBC,WAAW,CAACY,OAAhC,GAA0CC,SADvC;AAEjBC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK;AAFU;AAJrB,GADK,EAeL;AACE3B,IAAAA,GAAG,EAAE,aADP;AAEEmB,IAAAA,KAAK,EAAEtB,IAAI,KAAK,QAAT,GAAoB,MAApB,GAA6B,MAFtC;AAGEK,IAAAA,KAAK,EACH,2BAAO,KAAP;AAAa,MAAA,QAAQ,EAAEU,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAO,MAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,EAGE;AAAO,MAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHF,CAJJ;AAUES,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,YAAY,EAAEZ,MAAM,KAAK,MAAX,GAAoBC,WAAW,CAACE,WAAhC,GAA8C,CAD3C;AAEjBY,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK;AAFU;AAVrB,GAfK,EAmCL;AACE3B,IAAAA,GAAG,EAAE,WADP;AAEEmB,IAAAA,KAAK,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFT;AAGES,IAAAA,WAAW,EAAEf,WAAW,KAAK,CAH/B;AAIEgB,IAAAA,KAAK,EAAE,KAJT;AAKE3B,IAAAA,KAAK,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGW,WAAW,KAAK,CAAhB,GACC,CACE;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAEC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAIE;AAAQ,MAAA,KAAK,EAAE;AAAEgB,QAAAA,UAAU,EAAE;AAAd,OAAf;AAAsC,MAAA,OAAO,EAAEf,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAJF,CADD,GAUG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEA;AACI,MAAA,KAAK,EAAE;AAAEK,QAAAA,KAAK,EAAE;AAAT,OADX;AAEI,MAAA,KAAK,EAAEH,QAFX;AAGI,MAAA,QAAQ,EAAE,kBAACc,CAAD;AAAA,eAAOf,eAAe,CAAC,UAAD,EAAae,CAAb,CAAtB;AAAA,OAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CAFF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEA;AACI,MAAA,KAAK,EAAE;AAAEX,QAAAA,KAAK,EAAE;AAAT,OADX;AAEI,MAAA,KAAK,EAAEF,QAFX;AAGI,MAAA,QAAQ,EAAE,kBAACa,CAAD;AAAA,eAAOf,eAAe,CAAC,UAAD,EAAae,CAAb,CAAtB;AAAA,OAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CAVF,CAXN;AANJ,GAnCK,CAAP;AA4ED;AAED;;AACA,OAAO,SAASC,oBAAT,QAEJ;AAAA,MADDtB,MACC,SADDA,MACC;AAAA,MADOC,WACP,SADOA,WACP;AAAA,MADoBd,IACpB,SADoBA,IACpB;AACD,SAAO,CACL;AACEG,IAAAA,GAAG,EAAE,UADP;AAEEmB,IAAAA,KAAK,EAAEtB,IAAI,KAAK,QAAT,GAAoB,MAApB,GAA6B,MAFtC;AAGEK,IAAAA,KAAK,EAAE;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAyB,MAAA,KAAK,EAAE;AAAEkB,QAAAA,KAAK,EAAE;AAAT,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHT;AAIEC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,YAAY,EAAEZ,MAAM,KAAK,MAAX,GAAoBC,WAAW,CAACsB,QAAhC,GAA2CT,SADxC;AAEjBC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK;AAFU;AAJrB,GADK,EAeL;AACE3B,IAAAA,GAAG,EAAE,aADP;AAEEmB,IAAAA,KAAK,EAAE,MAFT;AAGEjB,IAAAA,KAAK,EACH;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAyB,MAAA,KAAK,EAAE;AAAEkB,QAAAA,KAAK,EAAE;AAAT,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ;AAMEC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,YAAY,EAAEZ,MAAM,KAAK,MAAX,GAAoBC,WAAW,CAACuB,WAAhC,GAA8CV;AAD3C;AANrB,GAfK,CAAP;AA2BD;AAED;;AACA,OAAO,SAASW,qBAAT,QAAyC;AAAA,MAARtC,IAAQ,SAARA,IAAQ;AAC9C,SAAO,CACL;AACEC,IAAAA,KAAK,EAAED,IAAI,KAAK,QAAT,GAAoB,MAApB,GAA6B,MADtC;AAEEE,IAAAA,SAAS,EAAE,aAFb;AAGEC,IAAAA,GAAG,EAAE,aAHP;AAIEC,IAAAA,MAAM,EAAE,gBAACC,KAAD;AAAA,aAAWA,KAAK,KAAK,CAAV,GAAc,KAAd,GAAsBA,KAAK,KAAK,CAAV,GAAc,KAAd,GAAsB,KAAvD;AAAA;AAJV,GADK,EAMF;AACDJ,IAAAA,KAAK,EAAED,IAAI,KAAK,QAAT,GAAoB,MAApB,GAA6B,MADnC;AAEDE,IAAAA,SAAS,EAAE,SAFV;AAGDC,IAAAA,GAAG,EAAE;AAHJ,GANE,CAAP;AAYD;AAED;;AACA,OAAO,SAASoC,cAAT,QAEJ;AAAA,MADDxC,YACC,SADDA,YACC;AAAA,MADaD,UACb,SADaA,UACb;AAAA,MADyB0C,cACzB,SADyBA,cACzB;AACD,SAAO,CACL;AACEvC,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,UAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GADK,EAML;AACEF,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,SAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GANK,EAWL;AACEF,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,YAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GAXK,EAgBL;AACEF,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,SAAS,EAAE,YAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GAhBK,EAqBL;AACEF,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,SAAS,EAAE,UAFb;AAGEC,IAAAA,GAAG,EAAE,UAHP;AAIEC,IAAAA,MAAM,EAAE,gBAACC,KAAD,EAAQoC,MAAR,EAAmB;AACzB,aAAOpC,KAAK,GAAGoC,MAAM,CAACC,UAAtB;AACD;AANH,GArBK,EA6BL;AACEzC,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,aAFb;AAGEC,IAAAA,GAAG,EAAE,aAHP;AAIEC,IAAAA,MAAM,EAAE,gBAACC,KAAD;AAAA,aAAWA,KAAK,KAAK,CAAV,GAAc,GAAd,GAAoB,GAA/B;AAAA;AAJV,GA7BK,EAmCL;AACEJ,IAAAA,KAAK,EAAE,KADT;AAEEC,IAAAA,SAAS,EAAE,SAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GAnCK,EAwCL;AACEF,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,YAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GAxCK,EA6CL;AACEF,IAAAA,KAAK,EAAE,IADT;AAEEC,IAAAA,SAAS,EAAE,cAFb;AAGEC,IAAAA,GAAG,EAAE,cAHP;AAIEC,IAAAA,MAAM,EAAE,gBAACC,KAAD,EAAQoC,MAAR,EAAmB;AACzB,aAAO;AAAM,QAAA,KAAK,EAAE;AAAElC,UAAAA,KAAK,EAAE,WAAT;AAAsBC,UAAAA,MAAM,EAAE;AAA9B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACL,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,OAAO,EAAE;AAAA,iBAAMV,UAAU,CAAC2C,MAAM,CAACE,EAAR,CAAhB;AAAA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAS,QAAA,IAAI,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAM,QAAA,OAAO,EAAE;AAAA,iBAAM5C,YAAY,CAAC;AAAEM,YAAAA,KAAK,EAAEoC,MAAM,CAACE,EAAhB;AAAoB3C,YAAAA,IAAI,EAAE;AAA1B,WAAD,CAAlB;AAAA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,CADK,CAAP;AAiBD;AAtBH,GA7CK,CAAP;AAuED;AACD;;AACA,OAAO,SAAS4C,mBAAT,QAEJ;AAAA,MADD/B,MACC,SADDA,MACC;AAAA,MADOC,WACP,SADOA,WACP;AAAA,MADoB+B,cACpB,SADoBA,cACpB;AAAA,MADoCC,cACpC,SADoCA,cACpC;AACD,SAAO,CACL;AACE3C,IAAAA,GAAG,EAAE,UADP;AAEEmB,IAAAA,KAAK,EAAE,MAFT;AAGEjB,IAAAA,KAAK,EAAE;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAyB,MAAA,KAAK,EAAE;AAAEkB,QAAAA,KAAK,EAAE;AAAT,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHT;AAIEC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,YAAY,EAAEZ,MAAM,KAAK,MAAX,GAAoBC,WAAW,CAACsB,QAAhC,GAA2CT,SADxC;AAEjBC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK;AAFU;AAJrB,GADK,EAeL;AACE3B,IAAAA,GAAG,EAAE,UADP;AAEEmB,IAAAA,KAAK,EAAE,MAFT;AAGEjB,IAAAA,KAAK,EACH;AACE,MAAA,UAAU,MADZ;AACa,MAAA,UAAU,MADvB;AAEE,MAAA,KAAK,EAAE;AAAEkB,QAAAA,KAAK,EAAE;AAAT,OAFT;AAGE,MAAA,WAAW,EAAC,0BAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMIsB,cAAc,IAAIA,cAAc,CAACE,GAAf,CAAmB,UAAAC,IAAI,EAAI;AAC3C,aAAO,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAEA,IAAI,CAACL,EAAlB;AAAsB,QAAA,KAAK,EAAEK,IAAI,CAACL,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJK,IAAI,CAACC,OADD,CAAP;AAGD,KAJiB,CANtB,CAJJ;AAkBEzB,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,YAAY,EAAEZ,MAAM,KAAK,MAAX,GAAoBqC,MAAM,CAACpC,WAAW,CAACqC,QAAb,CAA1B,GAAmDxB,SADhD;AAEjBC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK;AAFU;AAlBrB,GAfK,EA2CL;AACE3B,IAAAA,GAAG,EAAE,UADP;AAEEmB,IAAAA,KAAK,EAAE,MAFT;AAGEjB,IAAAA,KAAK,EACH;AACE,MAAA,UAAU,MADZ;AACa,MAAA,UAAU,MADvB;AAEE,MAAA,KAAK,EAAE;AAAEkB,QAAAA,KAAK,EAAE;AAAT,OAFT;AAGE,MAAA,WAAW,EAAC,0BAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMIuB,cAAc,IAAIA,cAAc,CAACC,GAAf,CAAmB,UAAAC,IAAI,EAAI;AAC3C,aAAO,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAEA,IAAI,CAACL,EAAlB;AAAsB,QAAA,KAAK,EAAEK,IAAI,CAACL,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJK,IAAI,CAACZ,QADD,CAAP;AAGD,KAJiB,CANtB,CAJJ;AAkBEZ,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,YAAY,EAAEZ,MAAM,KAAK,MAAX,GAAoBC,WAAW,CAACsC,QAAhC,GAA2CzB,SADxC;AAEjBC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK;AAFU;AAlBrB,GA3CK,EAuEL;AACE3B,IAAAA,GAAG,EAAE,YADP;AAEEmB,IAAAA,KAAK,EAAE,QAFT;AAGEjB,IAAAA,KAAK,EAAE;AACL,MAAA,IAAI,EAAC,MADA;AACO,MAAA,QAAQ,MADf;AAEL,MAAA,MAAM,EAAC,UAFF;AAGL,MAAA,MAAM,EAAEV,MAHH;AAIL,MAAA,WAAW,EAAC,gCAJP;AAKL,MAAA,KAAK,EAAE;AAAE4B,QAAAA,KAAK,EAAE,OAAT;AAAkB8B,QAAAA,OAAO,EAAE;AAA3B,OALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHT;AAUE7B,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,YAAY,EAAEZ,MAAM,KAAK,MAAX,GAAoBjB,MAAM,CAACkB,WAAW,CAACwC,UAAb,CAA1B,GAAqD3B,SADlD;AAEjBC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK;AAFU;AAVrB,GAvEK,EA2FL;AACE3B,IAAAA,GAAG,EAAE,cADP;AAEEmB,IAAAA,KAAK,EAAE,QAFT;AAGEjB,IAAAA,KAAK,EAAE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHT;AAIEmB,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,YAAY,EAAEZ,MAAM,KAAK,MAAX,GACZ;AAAE0C,QAAAA,QAAQ,EAAEzC,WAAW,CAACyC,QAAxB;AAAkCb,QAAAA,UAAU,EAAE5B,WAAW,CAAC4B;AAA1D,OADY,GAC6Df,SAF1D;AAGjBC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK;AAHU;AAJrB,GA3FK,EA0GL;AACE3B,IAAAA,GAAG,EAAE,aADP;AAEEmB,IAAAA,KAAK,EAAE,MAFT;AAGEjB,IAAAA,KAAK,EAAE;AACL,MAAA,UAAU,MADL;AACM,MAAA,UAAU,MADhB;AAEL,MAAA,KAAK,EAAE;AAAEkB,QAAAA,KAAK,EAAE;AAAT,OAFF;AAGL,MAAA,WAAW,EAAC,cAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKL,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALK,EAML,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANK,CAHT;AAWEC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,YAAY,EAAEZ,MAAM,KAAK,MAAX,GAAoBC,WAAW,CAAC0C,WAAhC,GAA8C,CAD3C;AAEjB5B,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK;AAFU;AAXrB,GA1GK,CAAP;AAgID;AAED;;AACA,OAAO,SAAS2B,iBAAT,QAAiD;AAAA,MAApB3D,UAAoB,SAApBA,UAAoB;AAAA,MAARE,IAAQ,SAARA,IAAQ;AACtD,SAAO,CACL;AACEC,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,UAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GADK,EAML;AACEF,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,SAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GANK,EAWL;AACEF,IAAAA,KAAK,EAAED,IAAI,KAAK,QAAT,GAAoB,KAApB,GAA4B,KADrC;AAEEE,IAAAA,SAAS,EAAE,YAFb;AAGEC,IAAAA,GAAG,EAAE,YAHP;AAIEC,IAAAA,MAAM,EAAE,gBAAAC,KAAK;AAAA,aAAIA,KAAK,GAAGA,KAAK,CAACK,KAAN,CAAY,GAAZ,EAAiBC,MAApB,GAA6B,GAAtC;AAAA;AAJf,GAXK,EAiBL;AACEV,IAAAA,KAAK,EAAE,IADT;AAEEC,IAAAA,SAAS,EAAE,YAFb;AAGEC,IAAAA,GAAG,EAAE,YAHP;AAIE;AACAC,IAAAA,MAAM,EAAE,gBAACC,KAAD,EAAQoC,MAAR;AAAA,aAAmB;AACzB,QAAA,KAAK,EAAE;AAAElC,UAAAA,KAAK,EAAE,WAAT;AAAsBC,UAAAA,MAAM,EAAE;AAA9B,SADkB;AAEzB,QAAA,OAAO,EAAE;AAAA,iBAAMV,UAAU,CAACO,KAAD,EAAQoC,MAAR,CAAhB;AAAA,SAFgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAnB;AAAA;AALV,GAjBK,CAAP;AA4BD;AAED;;AACA,OAAO,SAASiB,sBAAT,QAEJ;AAAA,MADD1D,IACC,SADDA,IACC;AAAA,MADK2D,aACL,SADKA,aACL;AAAA,MADoBC,gBACpB,SADoBA,gBACpB;AAAA,MADsCC,aACtC,SADsCA,aACtC;AAAA,MADqDC,aACrD,SADqDA,aACrD;AAAA,MADoEC,QACpE,SADoEA,QACpE;AACD,SAAO,CACL;AACE9D,IAAAA,KAAK,EAAED,IAAI,KAAK,QAAT,GAAoB,MAApB,GAA6B,MADtC;AAEEE,IAAAA,SAAS,EAAE,SAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GADK,EAML;AACEF,IAAAA,KAAK,EAAED,IAAI,KAAK,QAAT,GAAoB,MAApB,GAA6B,MADtC;AAEEE,IAAAA,SAAS,EAAE,aAFb;AAGEC,IAAAA,GAAG,EAAE,aAHP;AAIEC,IAAAA,MAAM,EAAE,gBAAAC,KAAK;AAAA,aAAIA,KAAK,KAAK,CAAV,GAAc,KAAd,GAAsBA,KAAK,KAAK,CAAV,GAAc,KAAd,GAAsB,KAAhD;AAAA;AAJf,GANK,EAYL;AACEJ,IAAAA,KAAK,EAAED,IAAI,KAAK,QAAT,GAAoB,MAApB,GAA6B,MADtC;AAEEE,IAAAA,SAAS,EAAE,aAFb;AAGEC,IAAAA,GAAG,EAAE,QAHP;AAIEC,IAAAA,MAAM,EAAE,gBAACC,KAAD,EAAQoC,MAAR,EAAmB;AACzB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEHpC,KAAK,KAAK,CAAV,GAAc,2BAAO,KAAP;AACZ,QAAA,QAAQ,EAAE,kBAAC6B,CAAD;AAAA,iBAAOyB,aAAa,CAAClB,MAAD,EAASP,CAAC,CAAC8B,MAAF,CAAS3D,KAAlB,CAApB;AAAA,SADE;AAEZ,QAAA,YAAY,EAAE,CAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIZ;AAAO,QAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJY,EAKZ;AAAO,QAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALY,CAAd,GAMiBA,KAAK,KAAK,CAAV,GAAc,CAACd,OAAO,CAACwE,QAAD,CAAR,IAAsB,8BAAU,KAAV;AACnD,QAAA,OAAO,EAAEA,QAAQ,CAACtB,MAAM,CAACwB,UAAR,CAAR,CAA4BC,OADc;AAEnD,QAAA,QAAQ,EAAE,kBAAChC,CAAD;AAAA,iBAAO0B,gBAAgB,CAACnB,MAAD,EAASP,CAAT,CAAvB;AAAA,SAFyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApC,GAGZ7B,KAAK,KAAK,CAAV,GAAc,CAACd,OAAO,CAACwE,QAAD,CAAR,IAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,QAAQ,CAACtB,MAAM,CAACwB,UAAR,CAAR,CAA4B7C,QAAnC,EAA6C,KAA7C,MADuC,EAEvC;AACE,QAAA,KAAK,EAAE;AAAEG,UAAAA,KAAK,EAAE;AAAT,SADT;AAEE,QAAA,GAAG,EAAEwC,QAAQ,CAACtB,MAAM,CAACwB,UAAR,CAAR,CAA4B7C,QAFnC;AAGE,QAAA,GAAG,EAAE2C,QAAQ,CAACtB,MAAM,CAACwB,UAAR,CAAR,CAA4B5C,QAHnC,CAIE;AAJF;AAKE,QAAA,QAAQ,EAAE,kBAACa,CAAD;AAAA,iBAAO2B,aAAa,CAACpB,MAAD,EAASP,CAAT,CAApB;AAAA,SALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFuC,EASvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAP,EAAc6B,QAAQ,CAACtB,MAAM,CAACwB,UAAR,CAAR,CAA4B5C,QAA1C,CATuC,CAApC,GAUK,IArBP,CAAP;AAwBD;AA7BH,GAZK,EA2CL;AACEpB,IAAAA,KAAK,EAAE,IADT;AAEEC,IAAAA,SAAS,EAAE,aAFb;AAGEC,IAAAA,GAAG,EAAE,aAHP;AAIEC,IAAAA,MAAM,EAAE,gBAACC,KAAD,EAAQoC,MAAR,EAAmB;AACzB,aAAO;AAAO,QAAA,QAAQ,EAAE,kBAACP,CAAD;AAAA,iBAAO4B,aAAa,CAACrB,MAAD,EAASP,CAAC,CAAC8B,MAAF,CAAS3D,KAAlB,CAApB;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AANH,GA3CK,CAAP;AAoDD;AACD;;AACA,OAAO,SAAS8D,YAAT,CAAsBnE,IAAtB,EAA4B;AACjC,SAAO;AACL,OAAGA,IAAI,KAAK,QAAT,GAAoB,MAApB,GAA6B,MAD3B;AAEL,OAAG,IAFE;AAGL,OAAGA,IAAI,KAAK,QAAT,GAAoB,OAApB,GAA8B,OAH5B;AAIL,OAAGA,IAAI,KAAK,QAAT,GAAoB,OAApB,GAA8B,OAJ5B;AAKL,OAAG;AALE,GAAP;AAOD;AACD,OAAO,SAASoE,eAAT,CAAyBpE,IAAzB,EAA+B;AACpC,SAAO,CACL;AACEC,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,YAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GADK,EAML;AACEF,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,SAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GANK,EAWL;AACEF,IAAAA,KAAK,EAAED,IAAI,KAAK,QAAT,GAAoB,MAApB,GAA6B,MADtC;AAEEE,IAAAA,SAAS,EAAE,YAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GAXK,EAgBL;AACEF,IAAAA,KAAK,EAAED,IAAI,KAAK,QAAT,GAAoB,MAApB,GAA6B,MADtC;AAEEE,IAAAA,SAAS,EAAE,QAFb;AAGEC,IAAAA,GAAG,EAAE,QAHP;AAIEC,IAAAA,MAAM,EAAE,gBAAAC,KAAK;AAAA,aAAIf,YAAY,CAACe,KAAD,EAAQ,UAAR,EAAoB8D,YAAY,CAACnE,IAAD,CAAhC,CAAhB;AAAA;AAJf,GAhBK,EAsBL;AACEC,IAAAA,KAAK,EAAED,IAAI,KAAK,QAAT,GAAoB,QAApB,GAA+B,QADxC;AAEEE,IAAAA,SAAS,EAAE,YAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GAtBK,EA2BL;AACEF,IAAAA,KAAK,EAAED,IAAI,KAAK,QAAT,GAAoB,QAApB,GAA+B,QADxC;AAEEE,IAAAA,SAAS,EAAE,YAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GA3BK,CAAP;AAsCD","sourcesContent":["import React from 'react'\nimport { Divider, Input, Radio, Button, Select, DatePicker, Checkbox, InputNumber } from 'antd'\nimport TimeInput from './cell/TimeInput'\nimport { circleStatus } from 'components/StateLess'\nimport { isEmpty } from 'lodash'\nconst { Option } = Select\nconst { locale, moment } = window.GLOBAL_PARAMS\n\n/* 保养库的列表title */\nexport function setServerColumns({\n  handleEdit, handleDelete, type\n}) {\n  return [\n    {\n      title: '设备类型',\n      dataIndex: 'deviceType',\n      key: 'deviceType'\n    },\n    {\n      title: type === 'repair' ? '点检类型' : '保养类型',\n      dataIndex: 'contentType',\n      key: 'contentType',\n      render: value =>\n        value === 1 ? '是否型' : value === 2 ? '选项型' : '输入型'\n    },\n    {\n      title: type === 'repair' ? '点检内容' : '保养内容',\n      dataIndex: 'content',\n      key: 'content'\n    },\n    {\n      title: '创建时间',\n      dataIndex: 'createTime',\n      key: 'createTime'\n    },\n    {\n      title: '创建人',\n      dataIndex: 'creater',\n      key: 'creater'\n    },\n    {\n      title: '操作',\n      dataIndex: 'maintainId',\n      key: 'maintainId',\n      align: 'right',\n      render: value => {\n        return (\n          <span style={{ color: 'var(--PC)', cursor: 'pointer' }}>\n            <span onClick={() => handleEdit(value)}>编辑</span>\n            <Divider type='vertical' />\n            <span onClick={() => handleDelete({ value, type: 'single' })}>\n              删除\n            </span>\n          </span>\n        );\n      }\n    }\n  ];\n}\n/* 保养方案的列表title */\nexport function setSchemaColumns(\n  {\n    handleEdit, handleDelete, type,\n  }\n) {\n  return [\n    {\n      title: '设备类型',\n      dataIndex: 'deviceType',\n      key: 'deviceType'\n    },\n    {\n      title: '方案名',\n      dataIndex: 'planName',\n      key: 'planName'\n    },\n    {\n      title: type === 'repair' ? '点检项' : '保养项',\n      dataIndex: 'contentIds',\n      key: 'contentIds',\n      render: value => value ? value.split(',').length : '-'\n    },\n    {\n      title: '备注信息',\n      dataIndex: 'description',\n      key: 'description', render: (value) => value || '-'\n    },\n    {\n      title: '创建时间',\n      dataIndex: 'createTime',\n      key: 'createTime', render: (value) => value || '-'\n    },\n    {\n      title: '创建人',\n      dataIndex: 'creater',\n      key: 'creater', render: (value) => value || '-'\n    },\n    {\n      title: '操作',\n      dataIndex: 'id',\n      key: 'id',\n      align: 'right',\n      render: value => {\n        return (\n          <span style={{ color: 'var(--PC)', cursor: 'pointer' }}>\n            <span onClick={() => handleEdit(value)}>编辑</span>\n            <Divider type='vertical' />\n            <span onClick={() => handleDelete({ type: 'single', value })}>\n              删除\n            </span>\n          </span>\n        );\n      }\n    }\n  ];\n}\n\n/* 设置form-columns */\nexport function setFormColumns({\n  type, status, currentMain, handleRadio, contentType, onAddItem, onDelItem, handleDataValue, minValue, maxValue\n}) {\n  return [\n    {\n      key: 'content',\n      label: type === 'repair' ? '点检内容' : '保养内容',\n      value: <Input placeholder='请输入' style={{ width: '330px' }} />,\n      getFieldDecorator: {\n        initialValue: status === 'edit' ? currentMain.content : undefined,\n        rules: [\n          {\n            required: true,\n            message: '请输入内容'\n          }\n        ]\n      }\n    },\n    {\n      key: 'contentType',\n      label: type === 'repair' ? '点检类型' : '保养类型',\n      value: (\n        <Radio.Group onChange={handleRadio}>\n          <Radio value={1}>是否型</Radio>\n          <Radio value={2}>选项型</Radio>\n          <Radio value={3}>输入型</Radio>\n        </Radio.Group>\n      ),\n      getFieldDecorator: {\n        initialValue: status === 'edit' ? currentMain.contentType : 1,\n        rules: [\n          {\n            required: true,\n            message: '请选择类型'\n          }\n        ]\n      }\n    },\n    {\n      key: 'extendBtn',\n      label: <div />,\n      displayNone: contentType === 1,\n      colon: false,\n      value: (\n        <div>\n          {contentType === 2 ? (\n            [\n              <Button type='primary' onClick={onAddItem}>\n                增加选项\n              </Button>,\n              <Button style={{ marginLeft: '5px' }} onClick={onDelItem}>\n                删除选项\n              </Button>\n            ]\n          ) : (\n              <div>\n                <span>请输入数据区间值</span>\n                <div>\n                  最小值：\n                <Input\n                    style={{ width: '200px' }}\n                    value={minValue}\n                    onChange={(e) => handleDataValue('minValue', e)}\n                  />\n                </div>\n                <div>\n                  最大值：\n                <Input\n                    style={{ width: '200px' }}\n                    value={maxValue}\n                    onChange={(e) => handleDataValue('maxValue', e)}\n                  />\n                </div>\n              </div>\n            )}\n        </div>\n      )\n    }\n  ];\n}\n\n/* 保养方案 form-columns */\nexport function setSchemaFormColumns({\n  status, currentMain, type\n}) {\n  return [\n    {\n      key: 'planName',\n      label: type === 'repair' ? '点检方案' : '保养方案',\n      value: <Input placeholder='请输入' style={{ width: '330px' }} />,\n      getFieldDecorator: {\n        initialValue: status === 'edit' ? currentMain.planName : undefined,\n        rules: [\n          {\n            required: true,\n            message: '请输入内容'\n          }\n        ]\n      }\n    },\n    {\n      key: 'description',\n      label: '备注信息',\n      value: (\n        <Input placeholder='请输入' style={{ width: '330px' }} />\n      ),\n      getFieldDecorator: {\n        initialValue: status === 'edit' ? currentMain.description : undefined,\n\n      }\n    },\n  ]\n}\n\n/* 设置保养方案中弹窗的table */\nexport function setSchemaModalColumns({ type }) {\n  return [\n    {\n      title: type === 'repair' ? '点检类型' : '保养类型',\n      dataIndex: 'contentType',\n      key: 'contentType',\n      render: (value) => value === 1 ? '是否型' : value === 2 ? '选项型' : '输入型'\n    }, {\n      title: type === 'repair' ? '点检内容' : '保养内容',\n      dataIndex: 'content',\n      key: 'content',\n    }\n  ]\n}\n\n/* 设置保养计划中的columns */\nexport function setPlanColumns({\n  handleDelete, handleEdit, handleToDetail\n}) {\n  return [\n    {\n      title: '计划名称',\n      dataIndex: 'planName',\n      key: 'planName'\n    },\n    {\n      title: '设备名称',\n      dataIndex: 'devName',\n      key: 'devName'\n    },\n    {\n      title: '方案名称',\n      dataIndex: 'schemaName',\n      key: 'schemaName'\n    },\n    {\n      title: '计划执行时间',\n      dataIndex: 'excuteTime',\n      key: 'excuteTime'\n    },\n    {\n      title: '计划等待时间',\n      dataIndex: 'waitTime',\n      key: 'waitTime',\n      render: (value, record) => {\n        return value + record.excuteUnit\n      }\n    },\n    {\n      title: '执行周期',\n      dataIndex: 'excuteCycle',\n      key: 'excuteCycle',\n      render: (value) => value === 1 ? '天' : '周'\n    },\n    {\n      title: '创建人',\n      dataIndex: 'creater',\n      key: 'creater'\n    },\n    {\n      title: '创建时间',\n      dataIndex: 'createTime',\n      key: 'createTime'\n    },\n    {\n      title: '操作',\n      dataIndex: 'excuteStatus',\n      key: 'excuteStatus',\n      render: (value, record) => {\n        return <span style={{ color: 'var(--PC)', cursor: 'pointer' }}>\n          <React.Fragment>\n            <span onClick={() => handleEdit(record.id)}>编辑</span>\n            <Divider type='vertical' />\n            <span onClick={() => handleDelete({ value: record.id, type: 'single' })}>删除</span>\n          </React.Fragment>\n          {/*\n            value === 1 && <React.Fragment>\n              <span onClick={() => handleEdit(record)}>编辑</span>\n              <Divider type='vertical' />\n              <span onClick={() => handleDelete({ value: record.id, type: 'single' })}>删除</span>\n              <Divider type='vertical' />\n              <span onClick={() => handleToDetail(record)}>下发</span>\n            </React.Fragment>\n          */}\n          {/*value === 2 && <span>已下发</span>*/}\n        </span>\n      }\n    },\n\n  ]\n}\n/* 设置保养计划弹窗-columns */\nexport function setPlanModalColumns({\n  status, currentMain, deviceByIdList, schemaByIdList\n}) {\n  return [\n    {\n      key: 'planName',\n      label: '计划名称',\n      value: <Input placeholder='请输入' style={{ width: '250px' }} />,\n      getFieldDecorator: {\n        initialValue: status === 'edit' ? currentMain.planName : undefined,\n        rules: [\n          {\n            required: true,\n            message: '必填'\n          }\n        ]\n      }\n    },\n    {\n      key: 'deviceId',\n      label: '选择设备',\n      value: (\n        <Select\n          showSearch allowClear\n          style={{ width: 250, }}\n          placeholder='选择设备'\n        >\n          {\n            deviceByIdList && deviceByIdList.map(item => {\n              return <Option key={item.id} value={item.id}>\n                {item.devName}\n              </Option>\n            })\n          }\n        </Select>\n      ),\n      getFieldDecorator: {\n        initialValue: status === 'edit' ? Number(currentMain.deviceId) : undefined,\n        rules: [\n          {\n            required: true,\n            message: '必填'\n          }\n        ]\n      }\n    },\n    {\n      key: 'schemaId',\n      label: '选择方案',\n      value: (\n        <Select\n          showSearch allowClear\n          style={{ width: 250, }}\n          placeholder='选择方案'\n        >\n          {\n            schemaByIdList && schemaByIdList.map(item => {\n              return <Option key={item.id} value={item.id}>\n                {item.planName}\n              </Option>\n            })\n          }\n        </Select>\n      ),\n      getFieldDecorator: {\n        initialValue: status === 'edit' ? currentMain.schemaId : undefined,\n        rules: [\n          {\n            required: true,\n            message: '必填'\n          }\n        ]\n      }\n    },\n    {\n      key: 'excuteTime',\n      label: '计划执行时间',\n      value: <DatePicker\n        mode='time' showTime\n        format=\"HH:mm:ss\"\n        locale={locale}\n        placeholder=\"请选择时间\"\n        style={{ width: '250px', display: 'inline-block' }}\n      />,\n      getFieldDecorator: {\n        initialValue: status === 'edit' ? moment(currentMain.excuteTime) : undefined,\n        rules: [\n          {\n            required: true,\n            message: '必填'\n          }\n        ]\n      }\n    },\n    {\n      key: 'planWaitTime',\n      label: '计划等待时间',\n      value: <TimeInput />,\n      getFieldDecorator: {\n        initialValue: status === 'edit' ?\n          { waitTime: currentMain.waitTime, excuteUnit: currentMain.excuteUnit } : undefined,\n        rules: [\n          {\n            required: true,\n            message: '等待时间大于0'\n          }\n        ]\n      }\n    },\n    {\n      key: 'excuteCycle',\n      label: '执行周期',\n      value: <Select\n        showSearch allowClear\n        style={{ width: 250, }}\n        placeholder='选择'\n      >\n        <Option value={1}>天</Option>\n        <Option value={2}>周</Option>\n      </Select>,\n      getFieldDecorator: {\n        initialValue: status === 'edit' ? currentMain.excuteCycle : 1,\n        rules: [\n          {\n            required: true,\n            message: '必填'\n          }\n        ]\n      }\n    },\n  ]\n}\n\n/* 设置保养操作的 - columns */\nexport function setOperateColumns({ handleEdit, type }) {\n  return [\n    {\n      title: '方案名称',\n      dataIndex: 'planName',\n      key: 'planName'\n    },\n    {\n      title: '设备名称',\n      dataIndex: 'devName',\n      key: 'devName'\n    },\n    {\n      title: type === 'repair' ? '点检项' : '保养项',\n      dataIndex: 'contentIds',\n      key: 'contentIds',\n      render: value => value ? value.split(',').length : '-'\n    },\n    {\n      title: '操作',\n      dataIndex: 'contentIds',\n      key: 'contentIds',\n      // align:'right',\n      render: (value, record) => <span\n        style={{ color: 'var(--PC)', cursor: 'pointer' }}\n        onClick={() => handleEdit(value, record)}\n      >处理</span>\n    },\n  ]\n}\n\n/* 设置 操作弹窗columns */\nexport function setModalOperateColumns({\n  type, onRadioChange, onCheckBoxChange, onInputNumber, onDescription, contents\n}) {\n  return [\n    {\n      title: type === 'repair' ? '点检名称' : '保养名称',\n      dataIndex: 'content',\n      key: 'content'\n    },\n    {\n      title: type === 'repair' ? '点检类型' : '保养类型',\n      dataIndex: 'contentType',\n      key: 'contentType',\n      render: value => value === 1 ? '是否型' : value === 2 ? '选项型' : '输入型'\n    },\n    {\n      title: type === 'repair' ? '点检结果' : '保养结果',\n      dataIndex: 'contentType',\n      key: 'result',\n      render: (value, record) => {\n        return <div>\n          {\n            value === 1 ? <Radio.Group\n              onChange={(e) => onRadioChange(record, e.target.value)}\n              defaultValue={1}\n            >\n              <Radio value={1}>是</Radio>\n              <Radio value={2}>否</Radio>\n            </Radio.Group> : value === 2 ? !isEmpty(contents) && <Checkbox.Group\n              options={contents[record.maintainID].strList}\n              onChange={(e) => onCheckBoxChange(record, e)}\n            /> : value === 3 ? !isEmpty(contents) && <span>\n              <span>{contents[record.maintainID].minValue}{' < '} </span>\n              <InputNumber\n                style={{ width: '80px' }}\n                min={contents[record.maintainID].minValue}\n                max={contents[record.maintainID].maxValue}\n                // value = {}\n                onChange={(e) => onInputNumber(record, e)}\n              />\n              <span>{' < '}{contents[record.maintainID].maxValue}</span>\n            </span> : null\n          }\n        </div>\n      }\n    },\n    {\n      title: '备注',\n      dataIndex: 'description',\n      key: 'description',\n      render: (value, record) => {\n        return <Input onChange={(e) => onDescription(record, e.target.value)} />\n      }\n    },\n  ]\n}\n/* 保养查询 */\nexport function Query_Result(type) {\n  return {\n    1: type === 'repair' ? '点检完成' : '保养通过',\n    2: '超时',\n    3: type === 'repair' ? '点检未完成' : '保养未通过',\n    4: type === 'repair' ? '超时未完成' : '超时未通过',\n    5: '未保养'\n  }\n}\nexport function setQueryColumns(type) {\n  return [\n    {\n      title: '设备类型',\n      dataIndex: 'deviceType',\n      key: 'deviceType'\n    },\n    {\n      title: '设备名称',\n      dataIndex: 'devName',\n      key: 'devName'\n    },\n    {\n      title: type === 'repair' ? '点检方案' : '保养方案',\n      dataIndex: 'schemaName',\n      key: 'schemaName'\n    },\n    {\n      title: type === 'repair' ? '点检结果' : '保养结果',\n      dataIndex: 'result',\n      key: 'result',\n      render: value => circleStatus(value, 'maintain', Query_Result(type))\n    },\n    {\n      title: type === 'repair' ? '计划点检时间' : '计划保养时间',\n      dataIndex: 'excuteTime',\n      key: 'excuteTime'\n    },\n    {\n      title: type === 'repair' ? '实际点检时间' : '实际保养时间',\n      dataIndex: 'actualTime',\n      key: 'actualTime'\n    },\n    // {\n    //   title: type === 'repair' ? '点检人' : '保养人',\n    //   dataIndex: 'excuteUser',\n    //   key: 'excuteUser'\n    // },\n  ]\n}\n\n"]},"metadata":{},"sourceType":"module"}