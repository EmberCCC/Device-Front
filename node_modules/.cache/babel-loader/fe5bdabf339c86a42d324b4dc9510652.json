{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _mapSelf = require('rc-util/lib/Children/mapSelf');\n\nvar _mapSelf2 = _interopRequireDefault(_mapSelf);\n\nvar _MonthPanel = require('../month/MonthPanel');\n\nvar _MonthPanel2 = _interopRequireDefault(_MonthPanel);\n\nvar _YearPanel = require('../year/YearPanel');\n\nvar _YearPanel2 = _interopRequireDefault(_YearPanel);\n\nvar _DecadePanel = require('../decade/DecadePanel');\n\nvar _DecadePanel2 = _interopRequireDefault(_DecadePanel);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction goMonth(direction) {\n  var next = this.props.value.clone();\n  next.add(direction, 'months');\n  this.props.onValueChange(next);\n}\n\nfunction goYear(direction) {\n  var next = this.props.value.clone();\n  next.add(direction, 'years');\n  this.props.onValueChange(next);\n}\n\nfunction showIf(condition, el) {\n  return condition ? el : null;\n}\n\nvar CalendarHeader = function (_React$Component) {\n  (0, _inherits3['default'])(CalendarHeader, _React$Component);\n\n  function CalendarHeader(props) {\n    (0, _classCallCheck3['default'])(this, CalendarHeader);\n\n    var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    _this.nextMonth = goMonth.bind(_this, 1);\n    _this.previousMonth = goMonth.bind(_this, -1);\n    _this.nextYear = goYear.bind(_this, 1);\n    _this.previousYear = goYear.bind(_this, -1);\n    _this.state = {\n      yearPanelReferer: null\n    };\n    return _this;\n  }\n\n  CalendarHeader.prototype.render = function render() {\n    var _this2 = this;\n\n    var props = this.props;\n    var prefixCls = props.prefixCls,\n        locale = props.locale,\n        mode = props.mode,\n        value = props.value,\n        showTimePicker = props.showTimePicker,\n        enableNext = props.enableNext,\n        enablePrev = props.enablePrev,\n        disabledMonth = props.disabledMonth,\n        renderFooter = props.renderFooter;\n    var panel = null;\n\n    if (mode === 'month') {\n      panel = _react2['default'].createElement(_MonthPanel2['default'], {\n        locale: locale,\n        value: value,\n        rootPrefixCls: prefixCls,\n        onSelect: this.onMonthSelect,\n        onYearPanelShow: function onYearPanelShow() {\n          return _this2.showYearPanel('month');\n        },\n        disabledDate: disabledMonth,\n        cellRender: props.monthCellRender,\n        contentRender: props.monthCellContentRender,\n        renderFooter: renderFooter,\n        changeYear: this.changeYear\n      });\n    }\n\n    if (mode === 'year') {\n      panel = _react2['default'].createElement(_YearPanel2['default'], {\n        locale: locale,\n        defaultValue: value,\n        rootPrefixCls: prefixCls,\n        onSelect: this.onYearSelect,\n        onDecadePanelShow: this.showDecadePanel,\n        renderFooter: renderFooter\n      });\n    }\n\n    if (mode === 'decade') {\n      panel = _react2['default'].createElement(_DecadePanel2['default'], {\n        locale: locale,\n        defaultValue: value,\n        rootPrefixCls: prefixCls,\n        onSelect: this.onDecadeSelect,\n        renderFooter: renderFooter\n      });\n    }\n\n    return _react2['default'].createElement('div', {\n      className: prefixCls + '-header'\n    }, _react2['default'].createElement('div', {\n      style: {\n        position: 'relative'\n      }\n    }, showIf(enablePrev && !showTimePicker, _react2['default'].createElement('a', {\n      className: prefixCls + '-prev-year-btn',\n      role: 'button',\n      onClick: this.previousYear,\n      title: locale.previousYear\n    })), showIf(enablePrev && !showTimePicker, _react2['default'].createElement('a', {\n      className: prefixCls + '-prev-month-btn',\n      role: 'button',\n      onClick: this.previousMonth,\n      title: locale.previousMonth\n    })), this.monthYearElement(showTimePicker), showIf(enableNext && !showTimePicker, _react2['default'].createElement('a', {\n      className: prefixCls + '-next-month-btn',\n      onClick: this.nextMonth,\n      title: locale.nextMonth\n    })), showIf(enableNext && !showTimePicker, _react2['default'].createElement('a', {\n      className: prefixCls + '-next-year-btn',\n      onClick: this.nextYear,\n      title: locale.nextYear\n    }))), panel);\n  };\n\n  return CalendarHeader;\n}(_react2['default'].Component);\n\nCalendarHeader.propTypes = {\n  prefixCls: _propTypes2['default'].string,\n  value: _propTypes2['default'].object,\n  onValueChange: _propTypes2['default'].func,\n  showTimePicker: _propTypes2['default'].bool,\n  onPanelChange: _propTypes2['default'].func,\n  locale: _propTypes2['default'].object,\n  enablePrev: _propTypes2['default'].any,\n  enableNext: _propTypes2['default'].any,\n  disabledMonth: _propTypes2['default'].func,\n  renderFooter: _propTypes2['default'].func,\n  onMonthSelect: _propTypes2['default'].func\n};\nCalendarHeader.defaultProps = {\n  enableNext: 1,\n  enablePrev: 1,\n  onPanelChange: function onPanelChange() {},\n  onValueChange: function onValueChange() {}\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.onMonthSelect = function (value) {\n    _this3.props.onPanelChange(value, 'date');\n\n    if (_this3.props.onMonthSelect) {\n      _this3.props.onMonthSelect(value);\n    } else {\n      _this3.props.onValueChange(value);\n    }\n  };\n\n  this.onYearSelect = function (value) {\n    var referer = _this3.state.yearPanelReferer;\n\n    _this3.setState({\n      yearPanelReferer: null\n    });\n\n    _this3.props.onPanelChange(value, referer);\n\n    _this3.props.onValueChange(value);\n  };\n\n  this.onDecadeSelect = function (value) {\n    _this3.props.onPanelChange(value, 'year');\n\n    _this3.props.onValueChange(value);\n  };\n\n  this.changeYear = function (direction) {\n    if (direction > 0) {\n      _this3.nextYear();\n    } else {\n      _this3.previousYear();\n    }\n  };\n\n  this.monthYearElement = function (showTimePicker) {\n    var props = _this3.props;\n    var prefixCls = props.prefixCls;\n    var locale = props.locale;\n    var value = props.value;\n    var localeData = value.localeData();\n    var monthBeforeYear = locale.monthBeforeYear;\n    var selectClassName = prefixCls + '-' + (monthBeforeYear ? 'my-select' : 'ym-select');\n    var timeClassName = showTimePicker ? ' ' + prefixCls + '-time-status' : '';\n\n    var year = _react2['default'].createElement('a', {\n      className: prefixCls + '-year-select' + timeClassName,\n      role: 'button',\n      onClick: showTimePicker ? null : function () {\n        return _this3.showYearPanel('date');\n      },\n      title: showTimePicker ? null : locale.yearSelect\n    }, value.format(locale.yearFormat));\n\n    var month = _react2['default'].createElement('a', {\n      className: prefixCls + '-month-select' + timeClassName,\n      role: 'button',\n      onClick: showTimePicker ? null : _this3.showMonthPanel,\n      title: showTimePicker ? null : locale.monthSelect\n    }, locale.monthFormat ? value.format(locale.monthFormat) : localeData.monthsShort(value));\n\n    var day = void 0;\n\n    if (showTimePicker) {\n      day = _react2['default'].createElement('a', {\n        className: prefixCls + '-day-select' + timeClassName,\n        role: 'button'\n      }, value.format(locale.dayFormat));\n    }\n\n    var my = [];\n\n    if (monthBeforeYear) {\n      my = [month, day, year];\n    } else {\n      my = [year, month, day];\n    }\n\n    return _react2['default'].createElement('span', {\n      className: selectClassName\n    }, (0, _mapSelf2['default'])(my));\n  };\n\n  this.showMonthPanel = function () {\n    // null means that users' interaction doesn't change value\n    _this3.props.onPanelChange(null, 'month');\n  };\n\n  this.showYearPanel = function (referer) {\n    _this3.setState({\n      yearPanelReferer: referer\n    });\n\n    _this3.props.onPanelChange(null, 'year');\n  };\n\n  this.showDecadePanel = function () {\n    _this3.props.onPanelChange(null, 'decade');\n  };\n};\n\nexports['default'] = CalendarHeader;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}