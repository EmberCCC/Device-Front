{"ast":null,"code":"import _slicedToArray from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\documents\\\\bl-device-manage-test\\\\src\\\\layouts\\\\FlowManage\\\\index.js\";\nimport React, { useState, useRef, useCallback } from 'react';\nimport ReactFlow, { ReactFlowProvider, addEdge, useNodesState, useEdgesState, Controls } from 'react-flow-renderer';\nimport Sidebar from './Sidebar';\nimport './index.css';\nvar initialNodes = [{\n  id: '1',\n  type: 'input',\n  data: {\n    label: 'input node'\n  },\n  position: {\n    x: 250,\n    y: 5\n  }\n}];\nvar id = 0;\n\nvar getId = function getId() {\n  return \"dndnode_\".concat(id++);\n};\n\nvar DnDFlow = function DnDFlow() {\n  var reactFlowWrapper = useRef(null);\n\n  var _useNodesState = useNodesState(initialNodes),\n      _useNodesState2 = _slicedToArray(_useNodesState, 3),\n      nodes = _useNodesState2[0],\n      setNodes = _useNodesState2[1],\n      onNodesChange = _useNodesState2[2];\n\n  var _useEdgesState = useEdgesState([]),\n      _useEdgesState2 = _slicedToArray(_useEdgesState, 3),\n      edges = _useEdgesState2[0],\n      setEdges = _useEdgesState2[1],\n      onEdgesChange = _useEdgesState2[2];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      reactFlowInstance = _useState2[0],\n      setReactFlowInstance = _useState2[1];\n\n  var onConnect = useCallback(function (params) {\n    return setEdges(function (eds) {\n      return addEdge(params, eds);\n    });\n  }, []);\n  var onDragOver = useCallback(function (event) {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n  var onDrop = useCallback(function (event) {// event.preventDefault();\n    // const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    // const type = event.dataTransfer.getData('application/reactflow');\n    // // check if the dropped element is valid\n    // if (typeof type === 'undefined' || !type) {\n    //   return;\n    // }\n    // const position = reactFlowInstance.project({\n    //   x: event.clientX - reactFlowBounds.left,\n    //   y: event.clientY - reactFlowBounds.top,\n    // });\n    // const newNode = {\n    //   id: getId(),\n    //   type,\n    //   position,\n    //   data: { label: `${type} node` },\n    // };\n    // setNodes((nds) => nds.concat(newNode));\n  }, [reactFlowInstance]);\n  return React.createElement(\"div\", {\n    className: \"dndflow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(ReactFlowProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"reactflow-wrapper\",\n    ref: reactFlowWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(ReactFlow, {\n    nodes: nodes,\n    edges: edges,\n    onNodesChange: onNodesChange,\n    onEdgesChange: onEdgesChange,\n    onConnect: onConnect,\n    onInit: setReactFlowInstance,\n    onDrop: onDrop,\n    onDragOver: onDragOver,\n    fitView: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(Controls, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(Sidebar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })));\n};\n\nexport default DnDFlow;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage-test\\src\\layouts\\FlowManage\\index.js"],"names":["React","useState","useRef","useCallback","ReactFlow","ReactFlowProvider","addEdge","useNodesState","useEdgesState","Controls","Sidebar","initialNodes","id","type","data","label","position","x","y","getId","DnDFlow","reactFlowWrapper","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","reactFlowInstance","setReactFlowInstance","onConnect","params","eds","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,WAAlC,QAAqD,OAArD;AACA,OAAOC,SAAP,IACEC,iBADF,EAEEC,OAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,QALF,QAMO,qBANP;AAQA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,aAAP;AAEA,IAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAHR;AAIEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,CAAC,EAAE,GAAL;AAAUC,IAAAA,CAAC,EAAE;AAAb;AAJZ,CADmB,CAArB;AASA,IAAIN,EAAE,GAAG,CAAT;;AACA,IAAMO,KAAK,GAAG,SAARA,KAAQ;AAAA,2BAAiBP,EAAE,EAAnB;AAAA,CAAd;;AAEA,IAAMQ,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,MAAMC,gBAAgB,GAAGnB,MAAM,CAAC,IAAD,CAA/B;;AADoB,uBAEqBK,aAAa,CAACI,YAAD,CAFlC;AAAA;AAAA,MAEbW,KAFa;AAAA,MAENC,QAFM;AAAA,MAEIC,aAFJ;;AAAA,uBAGqBhB,aAAa,CAAC,EAAD,CAHlC;AAAA;AAAA,MAGbiB,KAHa;AAAA,MAGNC,QAHM;AAAA,MAGIC,aAHJ;;AAAA,kBAI8B1B,QAAQ,CAAC,IAAD,CAJtC;AAAA;AAAA,MAIb2B,iBAJa;AAAA,MAIMC,oBAJN;;AAMpB,MAAMC,SAAS,GAAG3B,WAAW,CAAC,UAAC4B,MAAD;AAAA,WAAYL,QAAQ,CAAC,UAACM,GAAD;AAAA,aAAS1B,OAAO,CAACyB,MAAD,EAASC,GAAT,CAAhB;AAAA,KAAD,CAApB;AAAA,GAAD,EAAsD,EAAtD,CAA7B;AAEA,MAAMC,UAAU,GAAG9B,WAAW,CAAC,UAAC+B,KAAD,EAAW;AACxCA,IAAAA,KAAK,CAACC,cAAN;AACAD,IAAAA,KAAK,CAACE,YAAN,CAAmBC,UAAnB,GAAgC,MAAhC;AACD,GAH6B,EAG3B,EAH2B,CAA9B;AAKA,MAAMC,MAAM,GAAGnC,WAAW,CAAC,UAAC+B,KAAD,EAAW,CACpC;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACD,GAvByB,EAwBxB,CAACN,iBAAD,CAxBwB,CAA1B;AA2BA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAmC,IAAA,GAAG,EAAEP,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEC,KADT;AAEE,IAAA,KAAK,EAAEG,KAFT;AAGE,IAAA,aAAa,EAAED,aAHjB;AAIE,IAAA,aAAa,EAAEG,aAJjB;AAKE,IAAA,SAAS,EAAEG,SALb;AAME,IAAA,MAAM,EAAED,oBANV;AAOE,IAAA,MAAM,EAAES,MAPV;AAQE,IAAA,UAAU,EAAEL,UARd;AASE,IAAA,OAAO,MATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAYE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF,EAeE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF,CADF;AAqBD,CA7DD;;AA+DA,eAAeb,OAAf","sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\r\nimport ReactFlow, {\r\n  ReactFlowProvider,\r\n  addEdge,\r\n  useNodesState,\r\n  useEdgesState,\r\n  Controls,\r\n} from 'react-flow-renderer';\r\n\r\nimport Sidebar from './Sidebar';\r\n\r\nimport './index.css';\r\n\r\nconst initialNodes = [\r\n  {\r\n    id: '1',\r\n    type: 'input',\r\n    data: { label: 'input node' },\r\n    position: { x: 250, y: 5 },\r\n  },\r\n];\r\n\r\nlet id = 0;\r\nconst getId = () => `dndnode_${id++}`;\r\n\r\nconst DnDFlow = () => {\r\n  const reactFlowWrapper = useRef(null);\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n\r\n  const onConnect = useCallback((params) => setEdges((eds) => addEdge(params, eds)), []);\r\n\r\n  const onDragOver = useCallback((event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'move';\r\n  }, []);\r\n\r\n  const onDrop = useCallback((event) => {\r\n    // event.preventDefault();\r\n\r\n    // const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n    // const type = event.dataTransfer.getData('application/reactflow');\r\n\r\n    // // check if the dropped element is valid\r\n    // if (typeof type === 'undefined' || !type) {\r\n    //   return;\r\n    // }\r\n\r\n    // const position = reactFlowInstance.project({\r\n    //   x: event.clientX - reactFlowBounds.left,\r\n    //   y: event.clientY - reactFlowBounds.top,\r\n    // });\r\n    // const newNode = {\r\n    //   id: getId(),\r\n    //   type,\r\n    //   position,\r\n    //   data: { label: `${type} node` },\r\n    // };\r\n\r\n    // setNodes((nds) => nds.concat(newNode));\r\n  },\r\n    [reactFlowInstance]\r\n  );\r\n\r\n  return (\r\n    <div className=\"dndflow\">\r\n      <ReactFlowProvider>\r\n        <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n          <ReactFlow\r\n            nodes={nodes}\r\n            edges={edges}\r\n            onNodesChange={onNodesChange}\r\n            onEdgesChange={onEdgesChange}\r\n            onConnect={onConnect}\r\n            onInit={setReactFlowInstance}\r\n            onDrop={onDrop}\r\n            onDragOver={onDragOver}\r\n            fitView>\r\n          </ReactFlow>\r\n          <Controls />\r\n        </div>\r\n        <Sidebar />\r\n      </ReactFlowProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DnDFlow;\r\n"]},"metadata":{},"sourceType":"module"}