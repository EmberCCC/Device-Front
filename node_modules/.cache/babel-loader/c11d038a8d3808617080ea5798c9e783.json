{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _tinycolor = require('tinycolor2');\n\nvar _tinycolor2 = _interopRequireDefault(_tinycolor);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar Color = function () {\n  function Color(input) {\n    var _this = this;\n\n    _classCallCheck(this, Color);\n\n    this.initRgb = function () {\n      var _color$toRgb = _this.color.toRgb(),\n          r = _color$toRgb.r,\n          g = _color$toRgb.g,\n          b = _color$toRgb.b;\n\n      _this.redValue = r;\n      _this.greenValue = g;\n      _this.blueValue = b;\n    };\n\n    this.initHsb = function () {\n      var _color$toHsv = _this.color.toHsv(),\n          h = _color$toHsv.h,\n          s = _color$toHsv.s,\n          v = _color$toHsv.v;\n\n      _this.hueValue = h;\n      _this.saturationValue = s;\n      _this.brightnessValue = v;\n    };\n\n    this.toHexString = function () {\n      return _this.color.toHexString();\n    };\n\n    this.toRgbString = function () {\n      return _this.color.toRgbString();\n    };\n\n    this.color = (0, _tinycolor2[\"default\"])(input);\n    this.initRgb();\n    this.initHsb();\n    var initAlpha = input && input.alpha || this.color.toRgb().a;\n    this.alphaValue = Math.min(1, initAlpha) * 100;\n  }\n\n  Color.isValidHex = function isValidHex(hex) {\n    return (0, _tinycolor2[\"default\"])(hex).isValid();\n  };\n\n  _createClass(Color, [{\n    key: 'hex',\n    get: function get() {\n      return this.color.toHex();\n    } // 色调\n\n  }, {\n    key: 'hue',\n    set: function set(value) {\n      this.color = (0, _tinycolor2[\"default\"])({\n        h: value,\n        s: this.saturation,\n        v: this.brightness\n      });\n      this.initRgb();\n      this.hueValue = value;\n    },\n    get: function get() {\n      return this.hueValue;\n    } // 饱和度\n\n  }, {\n    key: 'saturation',\n    set: function set(value) {\n      this.color = (0, _tinycolor2[\"default\"])({\n        h: this.hue,\n        s: value,\n        v: this.brightness\n      });\n      this.initRgb();\n      this.saturationValue = value;\n    },\n    get: function get() {\n      return this.saturationValue;\n    } // 亮度\n\n  }, {\n    key: 'lightness',\n    set: function set(value) {\n      this.color = (0, _tinycolor2[\"default\"])({\n        h: this.hue,\n        s: this.saturation,\n        l: value\n      });\n      this.initRgb();\n      this.lightnessValue = value;\n    },\n    get: function get() {\n      return this.lightnessValue;\n    }\n  }, {\n    key: 'brightness',\n    set: function set(value) {\n      this.color = (0, _tinycolor2[\"default\"])({\n        h: this.hue,\n        s: this.saturation,\n        v: value\n      });\n      this.initRgb();\n      this.brightnessValue = value;\n    },\n    get: function get() {\n      return this.brightnessValue;\n    } // red\n\n  }, {\n    key: 'red',\n    set: function set(value) {\n      var rgb = this.color.toRgb();\n      this.color = (0, _tinycolor2[\"default\"])(_extends({}, rgb, {\n        r: value\n      }));\n      this.initHsb();\n      this.redValue = value;\n    },\n    get: function get() {\n      return this.redValue;\n    } // green\n\n  }, {\n    key: 'green',\n    set: function set(value) {\n      var rgb = this.color.toRgb();\n      this.color = (0, _tinycolor2[\"default\"])(_extends({}, rgb, {\n        g: value\n      }));\n      this.initHsb();\n      this.greenValue = value;\n    },\n    get: function get() {\n      return this.greenValue;\n    } // blue\n\n  }, {\n    key: 'blue',\n    set: function set(value) {\n      var rgb = this.color.toRgb();\n      this.color = (0, _tinycolor2[\"default\"])(_extends({}, rgb, {\n        b: value\n      }));\n      this.initHsb();\n      this.blueValue = value;\n    },\n    get: function get() {\n      return this.blueValue;\n    } // alpha\n\n  }, {\n    key: 'alpha',\n    set: function set(value) {\n      this.color.setAlpha(value / 100);\n    },\n    get: function get() {\n      return this.color.getAlpha() * 100;\n    }\n  }, {\n    key: 'RGB',\n    get: function get() {\n      return [this.red, this.green, this.blue];\n    }\n  }, {\n    key: 'HSB',\n    get: function get() {\n      return [this.hue, this.saturation, this.brightness];\n    }\n  }]);\n\n  return Color;\n}();\n\nexports[\"default\"] = Color;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}