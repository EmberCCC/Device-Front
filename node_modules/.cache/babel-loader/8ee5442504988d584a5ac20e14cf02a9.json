{"ast":null,"code":"import \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/tabs/style\";\nimport _Tabs from \"antd/lib/tabs\";\nimport _classCallCheck from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"F:\\\\documents\\\\bl-device-manage-test\\\\src\\\\components\\\\GlobalForm2\\\\index.js\";\n\n/*\r\n * @Author: your name\r\n * @Date: 2022-04-05 11:02:45\r\n * @LastEditTime: 2022-05-06 03:45:28\r\n * @LastEditors: EmberCCC 1810888456@qq.com\r\n * @Description: 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n * @FilePath: \\bl-device-manage-test\\src\\components\\GlobalForm\\index.js\r\n */\nimport React from 'react';\nimport { EditOutlined } from '@ant-design/icons';\nimport { GlobalComponent } from 'layouts/TableEdit/config';\nimport { inject, observer } from 'mobx-react';\nimport { typeName } from 'constants/status_constant';\nimport { toJS } from 'mobx';\nimport moment from 'moment';\nimport '../../layouts/TableEdit/index.css';\nvar Option = _Select.Option;\nvar GlobalForm = (_dec = inject('HomeStore', 'TableStore', 'MessageStore'), _dec(_class = observer(_class = (_temp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GlobalForm, _React$Component);\n\n  function GlobalForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GlobalForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GlobalForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      secondFormId: 0\n    };\n    return _this;\n  }\n\n  _createClass(GlobalForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var secondFormId = this.state.secondFormId;\n      var _this$props$MessageSt = this.props.MessageStore,\n          itemInfo = _this$props$MessageSt.itemInfo,\n          field = _this$props$MessageSt.field,\n          itemField = _this$props$MessageSt.itemField;\n      var TabPane = _Tabs.TabPane;\n      var itemData = []; //转换为所需对象\n\n      var changeField = function changeField() {\n        console.log(itemInfo);\n        var obj = [];\n\n        if (field.length != 0) {\n          var itemData1 = field.filter(function (txt) {\n            return txt.secondFormId == secondFormId;\n          });\n\n          if (itemData1.length == 0) {\n            return [];\n          }\n\n          toJS(itemData1);\n\n          if (itemData1[0].properties != undefined && itemData1[0].properties.length != 0) {\n            var properties = {};\n            properties = toJS(itemData1[0].properties);\n\n            if (properties != undefined && itemField.length != 0) {\n              properties.forEach(function (element) {\n                var ele = {};\n                ele.label = element.name;\n                ele.attr = element.others;\n\n                if (element.propertyId && itemField.data[element.propertyId] && itemField.data) {\n                  ele.attr.value = itemField.data[element.propertyId];\n                }\n\n                ele.propertyId = element.propertyId;\n                ele.name = typeName[element.typeId];\n                obj.push(ele);\n              });\n            }\n          } else {\n            itemData = [];\n            return [];\n          }\n        }\n\n        itemData = obj;\n        return obj;\n      };\n\n      var handleLabelChange = function handleLabelChange(e) {\n        var x = Object.keys(e);\n        itemData.map(function (item) {\n          if (item.label == x[0]) {\n            if (item.name == \"RangePicker\") {\n              var time = [];\n              e[x[0]].map(function (item) {\n                time.push(moment(item).format('lll   '));\n              });\n              item.attr.value = time;\n            } else if (item.name == \"DatePicker\") {\n              var _time = [];\n\n              _time.push(moment(e[x[0]]).format('lll'));\n\n              item.attr.value = _time;\n            } else {\n              item.attr.value = e[x[0]];\n            }\n          }\n        });\n      };\n\n      var dateFormat = 'lll';\n\n      var renderDiffComponents = function renderDiffComponents(item, indexs, ComponentInfo) {\n        switch (item.name) {\n          case 'Divider':\n            return React.createElement(ComponentInfo, Object.assign({\n              key: indexs\n            }, item.attr, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 97\n              },\n              __self: this\n            }));\n\n          case 'Select':\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 100\n              },\n              __self: this\n            }, React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 101\n              },\n              __self: this\n            }, item.label), React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 102\n              },\n              __self: this\n            }, item.attr.value)) // <ComponentInfo key={indexs} defaultValue={item.attr.value}>\n            //     {\n            //         item.attr.options.map(subItem => <Option key={subItem.key} value={subItem.value + ''}>{subItem.label}</Option>)\n            //     }\n            // </ComponentInfo>\n            ;\n\n          case \"RangePicker\":\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 112\n              },\n              __self: this\n            }, React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 113\n              },\n              __self: this\n            }, item.label), React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 114\n              },\n              __self: this\n            }, item.attr.value[0] || '', \"--\", item.attr.value[1] || ''));\n          // if (item.attr.value != undefined) {\n          //     return <ComponentInfo key={indexs} {...item.attr} defaultValue={[moment(item.attr.value[0], dateFormat), moment(item.attr.value[1], dateFormat)]} format={dateFormat} />\n          // } else {\n          //     return <ComponentInfo key={indexs} {...item.attr} format={dateFormat} />\n          // }\n\n          case \"DatePicker\":\n            if (item.attr.value.length != 0) {\n              return React.createElement(\"div\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 125\n                },\n                __self: this\n              }, React.createElement(\"p\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 126\n                },\n                __self: this\n              }, item.label), React.createElement(\"p\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 127\n                },\n                __self: this\n              }, item.attr.value[0] || ''));\n            } else {\n              return React.createElement(\"div\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 132\n                },\n                __self: this\n              }, React.createElement(\"p\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 133\n                },\n                __self: this\n              }, item.label), React.createElement(\"p\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 134\n                },\n                __self: this\n              }, ''));\n            }\n\n          // console.log(item.attr);\n          // let value = item.attr.value[0]\n          // console.log(value);\n          // if (item.attr.value != undefined) {\n          //     return <ComponentInfo key={indexs} {...item.attr} defaultValue={moment(value, dateFormat) || ''} format={dateFormat} />\n          // } else {\n          //     return <ComponentInfo key={indexs} {...item.attr} format={dateFormat} />\n          // }\n\n          case 'InputNumber':\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 147\n              },\n              __self: this\n            }, React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 148\n              },\n              __self: this\n            }, item.label), React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 149\n              },\n              __self: this\n            }, Number(item.attr.value)));\n          // return <ComponentInfo key={indexs} {...item.attr} defaultValue={Number(item.attr.value)} />\n\n          default:\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 155\n              },\n              __self: this\n            }, React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 156\n              },\n              __self: this\n            }, item.label), React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 157\n              },\n              __self: this\n            }, item.attr.value));\n          // return <ComponentInfo key={indexs} {...item.attr} defaultValue={item.attr.value} />\n        }\n      }; // 递归函数\n\n\n      var loop = function loop(arr, index) {\n        arr = changeField();\n        return arr.map(function (item, i) {\n          var indexs = index === '' ? String(i) : \"\".concat(index, \"-\").concat(i);\n\n          if (item) {\n            var ComponentInfo = GlobalComponent[item.name];\n            var text = item.attr.descripe || '';\n            return React.createElement(_Form.Item, {\n              key: indexs // label={item.label}\n              // name={item.label}\n              ,\n              className: \"formItemStyle\",\n              extra: text,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 173\n              },\n              __self: this\n            }, renderDiffComponents(item, indexs, ComponentInfo), React.createElement(\"hr\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 183\n              },\n              __self: this\n            }));\n          } else {\n            return null;\n          }\n        });\n      };\n\n      var sub = function sub(values) {\n        var _this2$props$HomeStor = _this2.props.HomeStore,\n            firstFormId = _this2$props$HomeStor.firstFormId,\n            addNew = _this2$props$HomeStor.addNew,\n            uploadData = _this2$props$HomeStor.uploadData;\n        var itemObj = uploadData;\n        itemData.forEach(function (element) {\n          var key = element.propertyId;\n\n          if ('value' in element.attr) {\n            itemObj[key] = element.attr.value;\n          }\n        });\n        var params = {};\n        params.firstFormId = firstFormId;\n        params.secondFormId = 0;\n\n        _this2.props.HomeStore.countObj({\n          firstFormId: firstFormId\n        });\n\n        if (_this2.props.type == true) {\n          _Modal.confirm({\n            title: '提示',\n            content: '是否修改此条数据？',\n            okText: '确认',\n            cancelText: '取消',\n            onOk: function onOk() {\n              params.updateData = toJS(uploadData);\n              params.dataId = toJS(_this2.props.dataInfo).id;\n              console.log(params);\n              console.log(_this2.props.dataInfo);\n\n              _this2.props.HomeStore.updataObj(params).then(function (res) {\n                _message.success('修改成功');\n              });\n            }\n          });\n        } else {\n          _Modal.confirm({\n            title: '提示',\n            content: '是否添加此条数据？',\n            okText: '确认',\n            cancelText: '取消',\n            onOk: function onOk() {\n              params.data = toJS(uploadData);\n              addNew(params).then(function (res) {\n                _message.success('添加成功');\n              });\n            }\n          });\n        }\n      };\n\n      var changeTabs = function changeTabs(e) {\n        _this2.setState({\n          secondFormId: Number(e)\n        });\n\n        var itemObj = _this2.props.HomeStore.uploadData;\n        itemData.forEach(function (element) {\n          var key = element.propertyId;\n\n          if ('value' in element.attr) {\n            itemObj[key] = element.attr.value;\n          }\n        });\n      };\n\n      return React.createElement(\"div\", {\n        style: {\n          width: '50%',\n          borderRight: 'solid 1px grey'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, this.props.MessageStore.field.length > 1 && React.createElement(_Tabs, {\n        activeKey: this.state.secondFormId.toString(),\n        onChange: changeTabs,\n        type: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, this.props.HomeStore.field.map(function (item, index) {\n        return React.createElement(TabPane, {\n          tab: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 256\n            },\n            __self: this\n          }, React.createElement(EditOutlined, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 256\n            },\n            __self: this\n          }), item.secondFormId + 1),\n          key: index.toString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        });\n      })), React.createElement(_Form, {\n        layout: 'vertical',\n        onFinish: sub,\n        onValuesChange: handleLabelChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, loop(itemData, '')));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.MessageStore.setItemInfo({});\n    }\n  }]);\n\n  return GlobalForm;\n}(React.Component), _temp)) || _class) || _class);\nexport default GlobalForm;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage-test\\src\\components\\GlobalForm2\\index.js"],"names":["React","EditOutlined","GlobalComponent","inject","observer","typeName","toJS","moment","Option","GlobalForm","state","secondFormId","props","MessageStore","itemInfo","field","itemField","TabPane","itemData","changeField","console","log","obj","length","itemData1","filter","txt","properties","undefined","forEach","element","ele","label","name","attr","others","propertyId","data","value","typeId","push","handleLabelChange","e","x","Object","keys","map","item","time","format","dateFormat","renderDiffComponents","indexs","ComponentInfo","Number","loop","arr","index","i","String","text","descripe","sub","values","HomeStore","firstFormId","addNew","uploadData","itemObj","key","params","countObj","type","confirm","title","content","okText","cancelText","onOk","updateData","dataId","dataInfo","id","updataObj","then","res","success","changeTabs","setState","width","borderRight","toString","setItemInfo","Component"],"mappings":"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","sourcesContent":["/*\r\n * @Author: your name\r\n * @Date: 2022-04-05 11:02:45\r\n * @LastEditTime: 2022-05-06 03:45:28\r\n * @LastEditors: EmberCCC 1810888456@qq.com\r\n * @Description: 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n * @FilePath: \\bl-device-manage-test\\src\\components\\GlobalForm\\index.js\r\n */\r\n\r\nimport React from 'react'\r\nimport { Form, Button, Select, Modal, message, Tabs } from 'antd'\r\nimport { EditOutlined } from '@ant-design/icons';\r\nimport { GlobalComponent } from 'layouts/TableEdit/config';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { typeName } from 'constants/status_constant';\r\nimport { toJS } from 'mobx';\r\nimport moment from 'moment';\r\nimport '../../layouts/TableEdit/index.css'\r\n\r\nconst { Option } = Select;\r\n@inject('HomeStore', 'TableStore', 'MessageStore')\r\n@observer\r\nclass GlobalForm extends React.Component {\r\n    state = {\r\n        secondFormId: 0\r\n    };\r\n    render() {\r\n        const secondFormId = this.state.secondFormId;\r\n        const { itemInfo, field, itemField } = this.props.MessageStore;\r\n        const { TabPane } = Tabs;\r\n        let itemData = []\r\n        //转换为所需对象\r\n        const changeField = () => {\r\n            console.log(itemInfo);\r\n            let obj = []\r\n            if (field.length != 0) {\r\n                let itemData1 = field.filter(function (txt) {\r\n                    return txt.secondFormId == secondFormId\r\n                })\r\n                if (itemData1.length == 0) {\r\n                    return [];\r\n                }\r\n                toJS(itemData1)\r\n                if (itemData1[0].properties != undefined && itemData1[0].properties.length != 0) {\r\n                    let properties = {}\r\n                    properties = toJS(itemData1[0].properties)\r\n                    if (properties != undefined && itemField.length != 0) {\r\n                        properties.forEach(element => {\r\n                            let ele = {}\r\n                            ele.label = element.name\r\n                            ele.attr = element.others\r\n                            if (element.propertyId && itemField.data[element.propertyId] && itemField.data) {\r\n                                ele.attr.value = itemField.data[element.propertyId]\r\n                            }\r\n                            ele.propertyId = element.propertyId\r\n                            ele.name = typeName[element.typeId]\r\n                            obj.push(ele)\r\n                        });\r\n                    }\r\n\r\n                } else {\r\n                    itemData = []\r\n                    return []\r\n                }\r\n            }\r\n            itemData = obj\r\n            return obj\r\n        }\r\n\r\n\r\n        const handleLabelChange = (e) => {\r\n            const x = Object.keys(e);\r\n            itemData.map(item => {\r\n                if (item.label == x[0]) {\r\n                    if (item.name == \"RangePicker\") {\r\n                        let time = []\r\n                        e[x[0]].map((item) => {\r\n                            time.push(moment(item).format('lll   '))\r\n                        })\r\n                        item.attr.value = time\r\n                    } else if (item.name == \"DatePicker\") {\r\n                        let time = []\r\n                        time.push(moment(e[x[0]]).format('lll'))\r\n                        item.attr.value = time\r\n                    } else {\r\n                        item.attr.value = e[x[0]];\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n        const dateFormat = 'lll';\r\n\r\n        const renderDiffComponents = (item, indexs, ComponentInfo) => {\r\n            switch (item.name) {\r\n                case 'Divider':\r\n                    return <ComponentInfo key={indexs} {...item.attr}></ComponentInfo>\r\n                case 'Select':\r\n                    return (\r\n                        <div>\r\n                            <p>{item.label}</p>\r\n                            <p>{item.attr.value}</p>\r\n                        </div>\r\n                        // <ComponentInfo key={indexs} defaultValue={item.attr.value}>\r\n                        //     {\r\n                        //         item.attr.options.map(subItem => <Option key={subItem.key} value={subItem.value + ''}>{subItem.label}</Option>)\r\n                        //     }\r\n                        // </ComponentInfo>\r\n                    )\r\n                case \"RangePicker\":\r\n                    return (\r\n                        <div>\r\n                            <p>{item.label}</p>\r\n                            <p>{item.attr.value[0] || ''}--{item.attr.value[1] || ''}</p>\r\n                        </div>\r\n                    )\r\n                    // if (item.attr.value != undefined) {\r\n                    //     return <ComponentInfo key={indexs} {...item.attr} defaultValue={[moment(item.attr.value[0], dateFormat), moment(item.attr.value[1], dateFormat)]} format={dateFormat} />\r\n                    // } else {\r\n                    //     return <ComponentInfo key={indexs} {...item.attr} format={dateFormat} />\r\n                    // }\r\n                case \"DatePicker\":\r\n                    if (item.attr.value.length != 0) {\r\n                        return (\r\n                            <div>\r\n                                <p>{item.label}</p>\r\n                                <p>{item.attr.value[0] || ''}</p>\r\n                            </div>\r\n                        )\r\n                    }else{\r\n                    return (\r\n                        <div>\r\n                            <p>{item.label}</p>\r\n                            <p>{''}</p>\r\n                        </div>\r\n                    )}\r\n                    // console.log(item.attr);\r\n                    // let value = item.attr.value[0]\r\n                    // console.log(value);\r\n                    // if (item.attr.value != undefined) {\r\n                    //     return <ComponentInfo key={indexs} {...item.attr} defaultValue={moment(value, dateFormat) || ''} format={dateFormat} />\r\n                    // } else {\r\n                    //     return <ComponentInfo key={indexs} {...item.attr} format={dateFormat} />\r\n                    // }\r\n                case 'InputNumber':\r\n                    return (\r\n                        <div>\r\n                            <p>{item.label}</p>\r\n                            <p>{Number(item.attr.value)}</p>\r\n                        </div>\r\n                    )\r\n                    // return <ComponentInfo key={indexs} {...item.attr} defaultValue={Number(item.attr.value)} />\r\n                default:\r\n                    return (\r\n                        <div>\r\n                            <p>{item.label}</p>\r\n                            <p>{item.attr.value}</p>\r\n                        </div>\r\n                    )\r\n                    // return <ComponentInfo key={indexs} {...item.attr} defaultValue={item.attr.value} />\r\n            }\r\n        }\r\n        // 递归函数\r\n        const loop = (arr, index) => {\r\n            arr = changeField()\r\n            return (\r\n                arr.map((item, i) => {\r\n                    const indexs = index === '' ? String(i) : `${index}-${i}`;\r\n                    if (item) {\r\n                        const ComponentInfo = GlobalComponent[item.name]\r\n                        const text = item.attr.descripe || ''\r\n                        return (\r\n                            <Form.Item\r\n                                key={indexs}\r\n                                // label={item.label}\r\n                                // name={item.label}\r\n                                className='formItemStyle'\r\n                                extra={text}\r\n                            >\r\n                                {\r\n                                    renderDiffComponents(item, indexs, ComponentInfo)\r\n                                }\r\n                                <hr></hr>\r\n                            </Form.Item>\r\n\r\n                        )\r\n                    } else {\r\n                        return null\r\n                    }\r\n                })\r\n            )\r\n        };\r\n\r\n        const sub = (values) => {\r\n            const { firstFormId, addNew, uploadData } = this.props.HomeStore\r\n            let itemObj = uploadData\r\n            itemData.forEach(element => {\r\n                let key = element.propertyId\r\n                if ('value' in element.attr) {\r\n                    itemObj[key] = element.attr.value\r\n                }\r\n            });\r\n            let params = {};\r\n            params.firstFormId = firstFormId\r\n            params.secondFormId = 0;\r\n            this.props.HomeStore.countObj({ firstFormId: firstFormId });\r\n            if (this.props.type == true) {\r\n                Modal.confirm({\r\n                    title: '提示',\r\n                    content: '是否修改此条数据？',\r\n                    okText: '确认',\r\n                    cancelText: '取消',\r\n                    onOk: () => {\r\n                        params.updateData = toJS(uploadData)\r\n                        params.dataId = toJS(this.props.dataInfo).id\r\n                        console.log(params);\r\n                        console.log(this.props.dataInfo);\r\n                        this.props.HomeStore.updataObj(params).then(res => {\r\n                            message.success('修改成功')\r\n                        })\r\n                    },\r\n                });\r\n            } else {\r\n                Modal.confirm({\r\n                    title: '提示',\r\n                    content: '是否添加此条数据？',\r\n                    okText: '确认',\r\n                    cancelText: '取消',\r\n                    onOk: () => {\r\n                        params.data = toJS(uploadData)\r\n\r\n                        addNew(params).then(res => {\r\n                            message.success('添加成功')\r\n                        })\r\n                    },\r\n                });\r\n            }\r\n        }\r\n\r\n        const changeTabs = (e) => {\r\n            this.setState({\r\n                secondFormId: Number(e)\r\n            })\r\n            let itemObj = this.props.HomeStore.uploadData\r\n            itemData.forEach(element => {\r\n                let key = element.propertyId\r\n                if ('value' in element.attr) {\r\n                    itemObj[key] = element.attr.value\r\n                }\r\n            });\r\n        }\r\n        return <div style={{ width: '50%', borderRight: 'solid 1px grey' }}>\r\n            {\r\n                this.props.MessageStore.field.length > 1 && <Tabs activeKey={this.state.secondFormId.toString()} onChange={changeTabs} type='card'>\r\n                    {this.props.HomeStore.field.map((item, index) => {\r\n                        return <TabPane tab={<div><EditOutlined />{item.secondFormId + 1}</div>} key={(index).toString()} />\r\n                    })}\r\n                </Tabs>\r\n            }\r\n            <Form layout={'vertical'} onFinish={sub} onValuesChange={handleLabelChange}>\r\n                {loop(itemData, '')}\r\n                {/* <Form.Item>\r\n                    <Button type=\"primary\" onClick={sub}>Submit</Button>\r\n                </Form.Item> */}\r\n            </Form>\r\n        </div>\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.MessageStore.setItemInfo({});\r\n    }\r\n}\r\nexport default GlobalForm"]},"metadata":{},"sourceType":"module"}