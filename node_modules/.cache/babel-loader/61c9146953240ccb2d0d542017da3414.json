{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _dec2, _class, _descriptor, _descriptor2, _temp;\n\n/*\r\n * @Author: your name\r\n * @Date: 2022-03-31 23:08:16\r\n * @LastEditTime: 2022-05-04 21:38:37\r\n * @LastEditors: EmberCCC 1810888456@qq.com\r\n * @Description: 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n * @FilePath: \\bl-device-manage-test\\src\\stores\\SpareStore\r\n */\nimport { observable, action, toJS } from 'mobx';\nimport { isDataExist } from '../utils/dataTools';\nimport * as services from '../services/design';\nvar Design = (_dec = action.bound, _dec2 = action.bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function Design() {\n    _classCallCheck(this, Design);\n\n    _initializerDefineProperty(this, \"DesignId\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"PersonList\", _descriptor2, this);\n  }\n\n  _createClass(Design, [{\n    key: \"changeDesignId\",\n    value: function changeDesignId(value) {\n      this.DesignId = value;\n    } //添加一条新的数据\n\n  }, {\n    key: \"addFlow\",\n    value: function () {\n      var _addFlow = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.isLoading = true;\n                _context.prev = 1;\n                _context.next = 4;\n                return services.putRequest(services.requestList.addFlow, params);\n\n              case 4:\n                res = _context.sent;\n                this.isLoading = false;\n\n                if (!isDataExist(res)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", res);\n\n              case 8:\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 10]]);\n      }));\n\n      function addFlow(_x) {\n        return _addFlow.apply(this, arguments);\n      }\n\n      return addFlow;\n    }()\n  }, {\n    key: \"queryPerson\",\n    value: function () {\n      var _queryPerson = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(params) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.isLoading = true;\n                _context2.prev = 1;\n                _context2.next = 4;\n                return services.putRequest(services.requestList.queryPerson, params);\n\n              case 4:\n                res = _context2.sent;\n                this.isLoading = false;\n\n                if (isDataExist(res)) {\n                  this.PersonList = res.data.data;\n                  console.log(toJS(this.PersonList));\n                }\n\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.log(_context2.t0);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 9]]);\n      }));\n\n      function queryPerson(_x2) {\n        return _queryPerson.apply(this, arguments);\n      }\n\n      return queryPerson;\n    }()\n  }]);\n\n  return Design;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"DesignId\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '1';\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"PersonList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"changeDesignId\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"changeDesignId\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"addFlow\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"addFlow\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"queryPerson\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"queryPerson\"), _class.prototype)), _class));\nvar DesignStore = new Design();\nexport default DesignStore;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage-test\\src\\stores\\DesignStore.js"],"names":["observable","action","toJS","isDataExist","services","Design","bound","value","DesignId","params","isLoading","putRequest","requestList","addFlow","res","console","log","queryPerson","PersonList","data","DesignStore"],"mappings":";;;;;;;;;;AAAA;;;;;;;;AAQA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,IAA7B,QAAyC,MAAzC;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAO,KAAKC,QAAZ,MAA0B,oBAA1B;IAEMC,M,WASDJ,MAAM,CAACK,K,UAaPL,MAAM,CAACK,K;;;;;;;;;;;;;mCAlBeC,K,EAAO;AAC1B,WAAKC,QAAL,GAAgBD,KAAhB;AACH,K,CAED;;;;;;;gDAC4BE,M;;;;;;AACxB,qBAAKC,SAAL,GAAiB,IAAjB;;;uBAEoBN,QAAQ,CAACO,UAAT,CAAoBP,QAAQ,CAACQ,WAAT,CAAqBC,OAAzC,EAAkDJ,MAAlD,C;;;AAAZK,gBAAAA,G;AACJ,qBAAKJ,SAAL,GAAiB,KAAjB;;qBACIP,WAAW,CAACW,GAAD,C;;;;;iDACJA,G;;;;;;;;;AAGXC,gBAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;;;;;;;;;;;iDAIwBP,M;;;;;;AAC5B,qBAAKC,SAAL,GAAiB,IAAjB;;;uBAEoBN,QAAQ,CAACO,UAAT,CAAoBP,QAAQ,CAACQ,WAAT,CAAqBK,WAAzC,EAAsDR,MAAtD,C;;;AAAZK,gBAAAA,G;AACJ,qBAAKJ,SAAL,GAAiB,KAAjB;;AACA,oBAAIP,WAAW,CAACW,GAAD,CAAf,EAAsB;AAClB,uBAAKI,UAAL,GAAkBJ,GAAG,CAACK,IAAJ,CAASA,IAA3B;AACAJ,kBAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAAC,KAAKgB,UAAN,CAAhB;AACH;;;;;;;;AAEDH,gBAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;;;;;;;;;qFA/BPhB,U;;;;;WAAsB,G;;8EACtBA,U;;;;;WAAwB,E;;mEAExBC,M;AAkCL,IAAImB,WAAW,GAAG,IAAIf,MAAJ,EAAlB;AACA,eAAee,WAAf","sourcesContent":["/*\r\n * @Author: your name\r\n * @Date: 2022-03-31 23:08:16\r\n * @LastEditTime: 2022-05-04 21:38:37\r\n * @LastEditors: EmberCCC 1810888456@qq.com\r\n * @Description: 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n * @FilePath: \\bl-device-manage-test\\src\\stores\\SpareStore\r\n */\r\nimport { observable, action, toJS } from 'mobx';\r\nimport { isDataExist } from '../utils/dataTools';\r\nimport * as services from '../services/design';\r\n\r\nclass Design {\r\n    @observable DesignId = '1'\r\n    @observable PersonList = []\r\n\r\n    @action changeDesignId(value) {\r\n        this.DesignId = value\r\n    }\r\n\r\n    //添加一条新的数据\r\n    @action.bound async addFlow(params) {\r\n        this.isLoading = true;\r\n        try {\r\n            let res = await services.putRequest(services.requestList.addFlow, params);\r\n            this.isLoading = false\r\n            if (isDataExist(res)) {\r\n                return res;\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    @action.bound async queryPerson(params){\r\n        this.isLoading = true;\r\n        try {\r\n            let res = await services.putRequest(services.requestList.queryPerson, params);\r\n            this.isLoading = false\r\n            if (isDataExist(res)) {\r\n                this.PersonList = res.data.data\r\n                console.log(toJS(this.PersonList));\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nlet DesignStore = new Design();\r\nexport default DesignStore;"]},"metadata":{},"sourceType":"module"}