{"ast":null,"code":"import _classCallCheck from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nvar _dec,\n    _class,\n    _jsxFileName = \"D:\\\\GGdownload\\\\\\u8BBE\\u5907\\u8FD0\\u7EF4\\u524D\\u7AEF\\\\bl-device-manage\\\\src\\\\layouts\\\\HomeLayout\\\\HomePage\\\\LineChart.js\";\n\nimport React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { toJS } from 'mobx';\nimport { Chart, Geom, Axis, Tooltip } from \"bizcharts\";\nvar AreaChart = (_dec = inject('HomeStore'), _dec(_class = observer(_class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AreaChart, _React$Component);\n\n  function AreaChart() {\n    _classCallCheck(this, AreaChart);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AreaChart).apply(this, arguments));\n  }\n\n  _createClass(AreaChart, [{\n    key: \"render\",\n    value: function render() {\n      var data = toJS(this.props.HomeStore.workInfo); // console.log(data)\n      // const data = [{ currentDate: '2019-07-07', number: 1 }, { currentDate: '2019-07-08', number: 1 }, { currentDate: '2019-07-09', number: 2 }, { currentDate: '2019-07-10', number: 1 }, { currentDate: '2019-07-11', number: 1 }, { currentDate: '2019-07-12', number: 0 }, { currentDate: '2019-07-13', number: 1 },]\n\n      var cols = {\n        currentDate: {// min: 10000\n        },\n        number: {\n          range: [0, 1]\n        }\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        height: \"300\",\n        padding: \"auto\",\n        data: data,\n        scale: cols,\n        forceFit: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Axis, {\n        name: \"currentDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(Axis, {\n        name: \"number\" // label={{\n        //   formatter: val => {\n        //     return (val / 10000).toFixed(1) + \"k\";\n        //   }\n        // }}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        crosshairs: {\n          type: \"line\"\n        },\n        itemTpl: \"<li><span style=\\\"background-color:{color};\\\" class=\\\"g2-tooltip-marker\\\"></span>\\u7ED3\\u7B97\\u5DE5\\u5355\\u6570: {value}</li>\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(Geom, {\n        type: \"line\",\n        position: \"currentDate*number\",\n        shape: \"smooth\",\n        size: 2,\n        color: \"l(90) 0:#32C5FF  1:#BEF4FF\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AreaChart;\n}(React.Component)) || _class) || _class);\nexport default AreaChart;","map":{"version":3,"sources":["D:\\GGdownload\\设备运维前端\\bl-device-manage\\src\\layouts\\HomeLayout\\HomePage\\LineChart.js"],"names":["React","inject","observer","toJS","Chart","Geom","Axis","Tooltip","AreaChart","data","props","HomeStore","workInfo","cols","currentDate","number","range","type","Component"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,SACEC,KADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,OAJF,QAKO,WALP;IASMC,S,WAFLP,MAAM,CAAC,WAAD,C,gBACNC,Q;;;;;;;;;;;;;6BAEU;AACP,UAAMO,IAAI,GAAGN,IAAI,CAAC,KAAKO,KAAL,CAAWC,SAAX,CAAqBC,QAAtB,CAAjB,CADO,CAEP;AACA;;AACA,UAAMC,IAAI,GAAG;AACXC,QAAAA,WAAW,EAAE,CACX;AADW,SADF;AAIXC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ;AADD;AAJG,OAAb;AAQA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACL,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAC,KAAd;AAAoB,QAAA,OAAO,EAAC,MAA5B;AAAmC,QAAA,IAAI,EAAEP,IAAzC;AAA+C,QAAA,KAAK,EAAEI,IAAtD;AAA4D,QAAA,QAAQ,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AACE,QAAA,IAAI,EAAC,QADP,CAEA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAUE,oBAAC,OAAD;AACE,QAAA,UAAU,EAAE;AACVI,UAAAA,IAAI,EAAE;AADI,SADd;AAIE,QAAA,OAAO,EAAC,+HAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAiBE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,QAAQ,EAAC,oBAA3B;AAAgD,QAAA,KAAK,EAAC,QAAtD;AAA+D,QAAA,IAAI,EAAE,CAArE;AAAwE,QAAA,KAAK,EAAC,4BAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBF,CADK,CAAP;AAqBD;;;;EAlCqBjB,KAAK,CAACkB,S;AAoC9B,eAAeV,SAAf","sourcesContent":["import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { toJS } from 'mobx';\nimport {\n  Chart,\n  Geom,\n  Axis,\n  Tooltip,\n} from \"bizcharts\";\n\n@inject('HomeStore')\n@observer\nclass AreaChart extends React.Component {\n  render() {\n    const data = toJS(this.props.HomeStore.workInfo);\n    // console.log(data)\n    // const data = [{ currentDate: '2019-07-07', number: 1 }, { currentDate: '2019-07-08', number: 1 }, { currentDate: '2019-07-09', number: 2 }, { currentDate: '2019-07-10', number: 1 }, { currentDate: '2019-07-11', number: 1 }, { currentDate: '2019-07-12', number: 0 }, { currentDate: '2019-07-13', number: 1 },]\n    const cols = {\n      currentDate: {\n        // min: 10000\n      },\n      number: {\n        range: [0, 1]\n      }\n    };\n    return <div>\n      <Chart height='300' padding='auto' data={data} scale={cols} forceFit >\n        <Axis name=\"currentDate\" />\n        <Axis\n          name=\"number\"\n        // label={{\n        //   formatter: val => {\n        //     return (val / 10000).toFixed(1) + \"k\";\n        //   }\n        // }}\n        />\n        <Tooltip\n          crosshairs={{\n            type: \"line\"\n          }}\n          itemTpl=\"<li><span style=&quot;background-color:{color};&quot; class=&quot;g2-tooltip-marker&quot;></span>结算工单数: {value}</li>\"\n        />\n        {/*<Geom type=\"area\" position=\"currentDate*number\" shape=\"smooth\" />*/}\n        <Geom type=\"line\" position=\"currentDate*number\" shape=\"smooth\" size={2} color=\"l(90) 0:#32C5FF  1:#BEF4FF\" />\n      </Chart>\n    </div>\n  }\n}\nexport default AreaChart;"]},"metadata":{},"sourceType":"module"}