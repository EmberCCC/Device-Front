{"ast":null,"code":"import \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nvar _excluded = [\"value\", \"prefix\", \"suffix\", \"addonText\", \"onChange\"];\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport { isUrl } from '../../utils';\n\nvar UrlNode = function UrlNode(_ref) {\n  var value = _ref.value,\n      _ref$addonText = _ref.addonText,\n      addonText = _ref$addonText === void 0 ? '测试链接' : _ref$addonText;\n  var useUrl = isUrl(value);\n\n  if (useUrl) {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      target: \"_blank\",\n      href: value\n    }, addonText);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", null, addonText);\n};\n\nexport default function UrlInput(_ref2) {\n  var value = _ref2.value,\n      prefix = _ref2.prefix,\n      suffix = _ref2.suffix,\n      addonText = _ref2.addonText,\n      onChange = _ref2.onChange,\n      rest = _objectWithoutProperties(_ref2, _excluded);\n\n  var _value = value || '';\n\n  if (prefix) {\n    _value = _value.replace(prefix, '');\n  }\n\n  if (suffix) {\n    _value = _value.replace(suffix, '');\n  }\n\n  var handleChange = function handleChange(e) {\n    var _value = e.target.value;\n\n    if (!_value) {\n      onChange(_value);\n      return;\n    }\n\n    if (prefix) {\n      _value = prefix + _value;\n    }\n\n    if (suffix) {\n      _value = _value + suffix;\n    }\n\n    onChange(_value);\n  };\n\n  return /*#__PURE__*/React.createElement(_Input, _extends({\n    value: _value,\n    prefix: prefix,\n    suffix: suffix,\n    onChange: handleChange,\n    addonAfter: /*#__PURE__*/React.createElement(UrlNode, {\n      value: value,\n      prefix: prefix,\n      suffix: suffix,\n      addonText: addonText\n    })\n  }, rest));\n}","map":null,"metadata":{},"sourceType":"module"}