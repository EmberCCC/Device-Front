{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"F:\\\\documents\\\\bl-device-manage-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _temp;\n\nimport { observable, action, toJS } from 'mobx';\nimport { isDataExist } from 'Utils/dataTools';\nimport * as services from '../services/home';\nimport { isEmpty, uniqBy } from 'lodash';\nimport { checkCurrentMenu } from 'utils/dataTools';\nimport { MenuObj, First_Menu_List } from '../constants/configs';\n\nvar uuid = require('uuid/v1');\n\nvar Home = (_dec = action.bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function Home() {\n    _classCallCheck(this, Home);\n\n    _initializerDefineProperty(this, \"contentScrollHeight\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"collapsed\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"menuObj\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"openKeys\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"selectedKeys\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"crumbsList\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"size_class\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"isClickCollapsed\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"followMenuList\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"isRecommend\", _descriptor10, this);\n\n    _initializerDefineProperty(this, \"customMenu\", _descriptor11, this);\n\n    _initializerDefineProperty(this, \"isLoading\", _descriptor12, this);\n\n    _initializerDefineProperty(this, \"toggledActionId\", _descriptor13, this);\n\n    _initializerDefineProperty(this, \"isAuth\", _descriptor14, this);\n\n    _initializerDefineProperty(this, \"model\", _descriptor15, this);\n\n    this.itemData = [];\n\n    this.setLastMenuHistory = function (actionItem, actionId) {\n      var history = sessionStorage.getItem('menu') || [];\n      var index = -1;\n      if (!isEmpty(history)) history = JSON.parse(history);\n\n      for (var i = 0; i < history.length; i++) {\n        if (history[i].id === actionId) {\n          index = i;\n        }\n      }\n\n      if (index > -1) {\n        history.splice(index, 1);\n      }\n\n      history.push(actionItem);\n\n      if (history.length >= 4) {\n        history.splice(0, 1);\n      }\n\n      history = uniqBy(history, 'id');\n      sessionStorage.setItem('menu', JSON.stringify(history));\n    };\n  }\n\n  _createClass(Home, [{\n    key: \"setLogin\",\n\n    /* 设置登陆信息 */\n    value: function () {\n      var _setLogin = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(params, finished) {\n        var result, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.isLoading = true;\n                result = {\n                  success: false,\n                  token: null\n                };\n                _context.prev = 2;\n                _context.next = 5;\n                return services.posts('setLogin')(params);\n\n              case 5:\n                res = _context.sent;\n                this.isLoading = false;\n\n                if (isDataExist(res)) {\n                  console.log(res);\n                  result.success = true;\n                  result.token = res.data.access_token;\n                }\n\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n\n              case 13:\n                if (finished) finished(result);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 10]]);\n      }));\n\n      function setLogin(_x, _x2) {\n        return _setLogin.apply(this, arguments);\n      }\n\n      return setLogin;\n    }()\n    /* 首页初始化获取菜单信息 */\n\n  }, {\n    key: \"getMenuList\",\n    value: function () {\n      var _getMenuList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var menuObj;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                menuObj = toJS(this.menuObj); // try {\n                //   let res = await services.gets('getMenuList')();\n                //   if (isDataExist(res)) {\n                //     let data = res.data.data.children;\n                //     /* 一级菜单 */\n                //     menuObj.map(lv => {\n                //       Object.assign(lv, {\n                //         id: uuid(),\n                //         displayNone: true\n                //       });\n                //       data.map(item => {\n                //         if (lv.name === item.text) {\n                //           if (item.children) {\n                //             lv.children = item.children;\n                //           }\n                //           Object.assign(lv, {\n                //             id: item.id,\n                //             displayNone: false\n                //           });\n                //         }\n                //       })\n                //     })\n                //     /* 二级菜单 */\n                //     menuObj.map(lv => {\n                //       if (!lv.displayNone) {\n                //         lv.leafMenuModels.map(lv2 => {\n                //           Object.assign(lv2, {\n                //             id: uuid(),\n                //             displayNone: false\n                //           });\n                //           lv.children.map(item => {\n                //             if (item.parentId === lv.id) {\n                //               if (item.text === lv2.name) {\n                //                 Object.assign(lv2, {\n                //                   id: item.id,\n                //                   displayNone: false\n                //                 })\n                //               }\n                //             }\n                //           })\n                //         })\n                //       }\n                //     })\n                //     this.isAuth = !isEmpty(data);\n                //     this.menuObj = menuObj;\n                //     /* 设置当前登录页面 */\n                //     let current = {\n                //       id: -1, parentId: -1\n                //     }\n                //     data.map(item => {\n                //       if (current.id > 0) return;\n                //       if (!isEmpty(item.children)) {\n                //         current = item.children[0]\n                //       }\n                //     })\n                //     menuObj.map(lv => {\n                //       if (lv.id === current.parentId) {\n                //         current.url = lv.leafMenuModels.filter(lv2 => lv2.id === current.id)[0].path\n                //       }\n                //     })\n                //     return current.url\n                //   }\n                // } catch (error) {\n                //   console.log(error);\n                // }\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getMenuList() {\n        return _getMenuList.apply(this, arguments);\n      }\n\n      return getMenuList;\n    }()\n    /* 菜单加载的初始化 */\n\n  }, {\n    key: \"initMenu\",\n    value: function initMenu(pathname) {\n      var _this = this;\n\n      // pathname=['/device']\n      try {\n        var menuObj = toJS(this.menuObj);\n        var currentMenu = [],\n            crumbsList = [];\n        /* 菜单查询 */\n\n        currentMenu = menuObj.filter(function (leaf) {\n          return leaf.path === pathname;\n        })[0];\n\n        if (isEmpty(currentMenu)) {\n          menuObj.map(function (lv) {\n            if (!isEmpty(currentMenu)) return lv.id;\n            currentMenu = pathname.indexOf(lv.path) > -1 ? lv : {};\n          });\n        }\n\n        if (!isEmpty(currentMenu)) {\n          crumbsList.push({\n            id: currentMenu.id,\n            name: currentMenu.name,\n            path: currentMenu.path\n          });\n        }\n        /**\n         * \n         */\n\n\n        if (currentMenu.path === pathname) {\n          this.selectedKeys = [\"\".concat(currentMenu.id)];\n          this.openKeys = [\"\".concat(currentMenu.parentId)];\n        } else {\n          /* 判断二级 */\n          currentMenu.leafMenuModels.map(function (lv2) {\n            if (lv2.path === pathname) {\n              _this.selectedKeys = [\"\".concat(lv2.id)];\n              _this.openKeys = [\"\".concat(lv2.parentId)];\n              crumbsList.push({\n                id: lv2.id,\n                name: lv2.name,\n                path: lv2.path\n              });\n            } else {\n              if (lv2.activeRouter) {\n                if (lv2.activeRouter.indexOf(pathname) > -1) {\n                  _this.selectedKeys = [\"\".concat(lv2.id)];\n                  _this.openKeys = [\"\".concat(lv2.parentId)];\n                }\n              } else {\n                /* 判断三级 */\n                if (!isEmpty(lv2.leafMenuModels)) {\n                  lv2.leafMenuModels.map(function (lv3) {\n                    if (lv3.path === pathname) {\n                      _this.selectedKeys = [\"\".concat(lv3.id)];\n                      _this.openKeys = [\"\".concat(lv2.parentId)];\n                    }\n                  });\n                }\n              }\n            }\n          });\n        }\n\n        var history = sessionStorage.getItem('menu') || [];\n\n        if (!isEmpty(history)) {\n          history = JSON.parse(history);\n          history = uniqBy(history, 'id');\n        }\n\n        sessionStorage.setItem('menu', JSON.stringify(history));\n        this.crumbsList = crumbsList;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, {\n    key: \"toggleMenu\",\n    value: function toggleMenu(_ref, finished) {\n      var actionItem = _ref.actionItem,\n          actionId = _ref.actionId;\n\n      try {\n        var menuObj = toJS(this.menuObj); // 根菜单节点\n        // actionId = actionId;\n\n        /* 查询当前菜单item */\n\n        var current = checkCurrentMenu({\n          menuObj: menuObj,\n          actionId: actionId\n        });\n        var currentMenu = current.currentMenu,\n            crumbsList = current.crumbsList;\n        finished(currentMenu[0].path);\n        this.crumbsList = crumbsList;\n        /* 记录历史-浏览记录 */\n\n        this.setLastMenuHistory(currentMenu[0], actionId);\n        this.toggledActionId = currentMenu[0].id;\n        this.selectedKeys = [\"\".concat(currentMenu[0].id)];\n        this.openKeys = [\"\".concat(currentMenu[0].parentId)];\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, {\n    key: \"addCrumbs\",\n    value: function addCrumbs(obj) {\n      this.crumbsList.push(obj);\n    }\n  }, {\n    key: \"changeValue\",\n    value: function changeValue(key, value) {\n      this[key] = value;\n    }\n  }, {\n    key: \"changeModel\",\n    value: function changeModel(value) {\n      this.model = value;\n      console.log(this.model);\n    }\n  }, {\n    key: \"changeItemData\",\n    value: function changeItemData() {\n      this.itemData = [{\n        \"name\": \"MonthPicker\",\n        \"attr\": {\n          \"style\": {\n            \"width\": \"60%\"\n          },\n          \"placeholder\": \"请选择月份\",\n          \"defaultValue\": \"2022-03-05T08:17:04.809Z\"\n        },\n        \"label\": \"月选择框\"\n      }, {\n        \"name\": \"Input\",\n        \"attr\": {\n          \"style\": {\n            \"width\": \"60%\"\n          },\n          \"defaultValue\": \"大撒大撒\",\n          \"placeholder\": \"请输入\"\n        },\n        \"label\": \"文本框\"\n      }];\n    }\n  }]);\n\n  return Home;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"contentScrollHeight\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 0;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"collapsed\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"menuObj\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return MenuObj.leafMenuModels;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"openKeys\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return ['1'];\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"selectedKeys\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return ['101'];\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"crumbsList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"size_class\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"isClickCollapsed\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"followMenuList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return First_Menu_List;\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"isRecommend\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return true;\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"customMenu\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"isLoading\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, \"toggledActionId\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 0;\n  }\n}), _descriptor14 = _applyDecoratedDescriptor(_class.prototype, \"isAuth\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor15 = _applyDecoratedDescriptor(_class.prototype, \"model\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return \"submit\";\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"setLogin\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setLogin\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getMenuList\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getMenuList\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"initMenu\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"initMenu\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"toggleMenu\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"toggleMenu\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"addCrumbs\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"addCrumbs\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"changeValue\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"changeValue\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"changeModel\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"changeModel\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"changeItemData\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"changeItemData\"), _class.prototype)), _class));\nvar HomeStore = new Home();\nexport default HomeStore;","map":{"version":3,"sources":["F:\\documents\\bl-device-manage-test\\src\\stores\\HomeStore.js"],"names":["observable","action","toJS","isDataExist","services","isEmpty","uniqBy","checkCurrentMenu","MenuObj","First_Menu_List","uuid","require","Home","bound","itemData","setLastMenuHistory","actionItem","actionId","history","sessionStorage","getItem","index","JSON","parse","i","length","id","splice","push","setItem","stringify","params","finished","isLoading","result","success","token","posts","res","console","log","data","access_token","menuObj","pathname","currentMenu","crumbsList","filter","leaf","path","map","lv","indexOf","name","selectedKeys","openKeys","parentId","leafMenuModels","lv2","activeRouter","lv3","error","current","toggledActionId","obj","key","value","model","HomeStore"],"mappings":"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","sourcesContent":["import { observable, action, toJS, } from 'mobx';\nimport { isDataExist } from 'Utils/dataTools';\nimport * as services from '../services/home';\nimport { isEmpty, uniqBy, } from 'lodash';\nimport { checkCurrentMenu } from 'utils/dataTools';\nimport { MenuObj, First_Menu_List } from '../constants/configs';\nconst uuid = require('uuid/v1');\n\nclass Home {\n  @observable contentScrollHeight = 0; //当前content滚动高度\n  @observable collapsed = false;\n  @observable menuObj = MenuObj.leafMenuModels;\n  @observable openKeys = ['1']; // 菜单初始化默认打开的key数组\n  @observable selectedKeys = ['101']; // 菜单初始化默认选中的key数组\n  @observable crumbsList = []; // 全局crumbs需求\n  @observable size_class = '';\n  @observable isClickCollapsed = false;\n  @observable followMenuList = First_Menu_List; // 首页关注的菜单豆腐块\n  @observable isRecommend = true; // 是否需要推荐菜单\n  @observable customMenu = [];// 首页自定义菜单\n  @observable isLoading = false;\n  @observable toggledActionId = 0;\n  @observable isAuth = false;\n  @observable model = \"submit\"; //模式控制;\n  itemData = [];\n\n  /* 设置登陆信息 */\n  @action async setLogin(params, finished) {\n    this.isLoading = true;\n    let result = { success: false, token: null };\n    try {\n      let res = await services.posts('setLogin')(params);\n      this.isLoading = false;\n      if (isDataExist(res)) {\n        console.log(res);\n        result.success = true;\n        result.token = res.data.access_token;\n      }\n\n    } catch (error) {\n      console.log(error)\n    }\n    if (finished)\n      finished(result);\n  }\n\n  /* 首页初始化获取菜单信息 */\n  @action async getMenuList() {\n    let menuObj = toJS(this.menuObj);\n    // try {\n    //   let res = await services.gets('getMenuList')();\n    //   if (isDataExist(res)) {\n    //     let data = res.data.data.children;\n    //     /* 一级菜单 */\n    //     menuObj.map(lv => {\n    //       Object.assign(lv, {\n    //         id: uuid(),\n    //         displayNone: true\n    //       });\n    //       data.map(item => {\n    //         if (lv.name === item.text) {\n    //           if (item.children) {\n    //             lv.children = item.children;\n    //           }\n    //           Object.assign(lv, {\n    //             id: item.id,\n    //             displayNone: false\n    //           });\n    //         }\n    //       })\n    //     })\n    //     /* 二级菜单 */\n    //     menuObj.map(lv => {\n    //       if (!lv.displayNone) {\n    //         lv.leafMenuModels.map(lv2 => {\n    //           Object.assign(lv2, {\n    //             id: uuid(),\n    //             displayNone: false\n    //           });\n    //           lv.children.map(item => {\n    //             if (item.parentId === lv.id) {\n    //               if (item.text === lv2.name) {\n    //                 Object.assign(lv2, {\n    //                   id: item.id,\n    //                   displayNone: false\n    //                 })\n    //               }\n    //             }\n    //           })\n    //         })\n    //       }\n\n    //     })\n    //     this.isAuth = !isEmpty(data);\n    //     this.menuObj = menuObj;\n    //     /* 设置当前登录页面 */\n    //     let current = {\n    //       id: -1, parentId: -1\n    //     }\n    //     data.map(item => {\n    //       if (current.id > 0) return;\n    //       if (!isEmpty(item.children)) {\n    //         current = item.children[0]\n    //       }\n    //     })\n    //     menuObj.map(lv => {\n    //       if (lv.id === current.parentId) {\n    //         current.url = lv.leafMenuModels.filter(lv2 => lv2.id === current.id)[0].path\n    //       }\n    //     })\n    //     return current.url\n    //   }\n    // } catch (error) {\n    //   console.log(error);\n    // }\n  }\n\n  /* 菜单加载的初始化 */\n  @action initMenu(pathname) {\n    // pathname=['/device']\n\n    try {\n      let menuObj = toJS(this.menuObj);\n      let currentMenu = [], crumbsList = [];\n      /* 菜单查询 */\n      currentMenu = menuObj.filter(leaf => leaf.path === pathname)[0];\n      if (isEmpty(currentMenu)) {\n        menuObj.map(lv => {\n          if (!isEmpty(currentMenu)) return lv.id;\n          currentMenu = (pathname.indexOf(lv.path) > -1) ? lv : {};\n        });\n      }\n      if (!isEmpty(currentMenu)) {\n        crumbsList.push({\n          id: currentMenu.id, name: currentMenu.name, path: currentMenu.path\n        });\n      }\n      /**\n       * \n       */\n      if (currentMenu.path === pathname) {\n        this.selectedKeys = [`${currentMenu.id}`];\n        this.openKeys = [`${currentMenu.parentId}`];\n      } else {\n        /* 判断二级 */\n        currentMenu.leafMenuModels.map(lv2 => {\n\n          if (lv2.path === pathname) {\n            this.selectedKeys = [`${lv2.id}`];\n            this.openKeys = [`${lv2.parentId}`];\n            crumbsList.push({\n              id: lv2.id, name: lv2.name, path: lv2.path\n            });\n          } else {\n            if (lv2.activeRouter) {\n              if (lv2.activeRouter.indexOf(pathname) > -1) {\n                this.selectedKeys = [`${lv2.id}`];\n                this.openKeys = [`${lv2.parentId}`];\n              }\n            } else {\n              /* 判断三级 */\n              if (!isEmpty(lv2.leafMenuModels)) {\n                lv2.leafMenuModels.map(lv3 => {\n                  if (lv3.path === pathname) {\n                    this.selectedKeys = [`${lv3.id}`];\n                    this.openKeys = [`${lv2.parentId}`];\n                  }\n                })\n              }\n            }\n          }\n        })\n      }\n      let history = sessionStorage.getItem('menu') || [];\n      if (!isEmpty(history)) {\n        history = JSON.parse(history);\n        history = uniqBy(history, 'id');\n      }\n      sessionStorage.setItem('menu', JSON.stringify(history));\n      this.crumbsList = crumbsList;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  @action toggleMenu({ actionItem, actionId }, finished) {\n    try {\n      let menuObj = toJS(this.menuObj); // 根菜单节点\n      // actionId = actionId;\n      /* 查询当前菜单item */\n      let current = checkCurrentMenu({ menuObj, actionId });\n      let currentMenu = current.currentMenu, crumbsList = current.crumbsList;\n      finished(currentMenu[0].path);\n      this.crumbsList = crumbsList;\n      /* 记录历史-浏览记录 */\n      this.setLastMenuHistory(currentMenu[0], actionId);\n      this.toggledActionId = currentMenu[0].id;\n      this.selectedKeys = [`${currentMenu[0].id}`];\n      this.openKeys = [`${currentMenu[0].parentId}`];\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  setLastMenuHistory = (actionItem, actionId) => {\n    let history = sessionStorage.getItem('menu') || [];\n    let index = -1;\n    if (!isEmpty(history)) history = JSON.parse(history);\n    for (let i = 0; i < history.length; i++) {\n      if (history[i].id === actionId) {\n        index = i;\n      }\n    }\n    if (index > -1) {\n      history.splice(index, 1);\n    }\n    history.push(actionItem);\n    if (history.length >= 4) {\n      history.splice(0, 1);\n    }\n    history = uniqBy(history, 'id');\n    sessionStorage.setItem('menu', JSON.stringify(history));\n  }\n\n  @action.bound addCrumbs(obj) {\n    this.crumbsList.push(obj);\n  }\n\n  @action changeValue(key, value) {\n    this[key] = value;\n  }\n\n  @action changeModel(value) {\n    this.model = value;\n    console.log(this.model);\n  }\n  \n  @action changeItemData(){\n    this.itemData = [\n      {\n          \"name\": \"MonthPicker\",\n          \"attr\": {\n              \"style\": {\n                  \"width\": \"60%\"\n              },\n              \"placeholder\": \"请选择月份\",\n              \"defaultValue\": \"2022-03-05T08:17:04.809Z\"\n          },\n          \"label\": \"月选择框\"\n      },\n      {\n          \"name\": \"Input\",\n          \"attr\": {\n              \"style\": {\n                  \"width\": \"60%\"\n              },\n              \"defaultValue\": \"大撒大撒\",\n              \"placeholder\": \"请输入\"\n          },\n          \"label\": \"文本框\"\n      }\n  ];\n  }\n}\nlet HomeStore = new Home();\nexport default HomeStore;"]},"metadata":{},"sourceType":"module"}