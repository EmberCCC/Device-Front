"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Map;

require("antd/es/card/style");

var _card = _interopRequireDefault(require("antd/es/card"));

require("antd/es/collapse/style");

var _collapse = _interopRequireDefault(require("antd/es/collapse"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _hooks = require("../../form-render-core/src/hooks");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var Panel = _collapse.default.Panel;

function Map(_ref) {
  var children = _ref.children,
      title = _ref.title,
      schema = _ref.schema;

  var _useState = (0, _react.useState)(schema.collapsed || false),
      _useState2 = _slicedToArray(_useState, 2),
      collapsed = _useState2[0],
      setCollapsed = _useState2[1];

  var _useStore = (0, _hooks.useStore2)(),
      globalTheme = _useStore.theme,
      globalDisplayType = _useStore.displayType;

  var theme = schema.theme || globalTheme;
  var displayType = schema.displayType || globalDisplayType;
  (0, _react.useEffect)(function () {
    if (schema.hasOwnProperty('collapsed')) {
      setCollapsed(schema.collapsed);
    }
  }, [schema.collapsed]);

  if (!title) {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "w-100"
    }, children);
  }

  if (theme === 'tile') {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "w-100"
    }, /*#__PURE__*/_react.default.createElement("div", {
      style: {
        fontSize: 17,
        fontWeight: 500,
        paddingBottom: 4,
        borderBottom: '1px solid rgba( 0, 0, 0, .2 )',
        marginBottom: 16
      }
    }, title, /*#__PURE__*/_react.default.createElement("span", {
      className: "fr-desc ml2"
    }, (schema === null || schema === void 0 ? void 0 : schema.description) ? "( ".concat(schema.description, " )") : '')), /*#__PURE__*/_react.default.createElement("div", {
      style: {
        marginLeft: displayType == 'row' ? 0 : 12
      }
    }, children));
  } // 新增卡片视图


  if (theme === 'card') {
    return /*#__PURE__*/_react.default.createElement(_card.default, {
      id: title,
      title: /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, title, /*#__PURE__*/_react.default.createElement("span", {
        className: "fr-desc ml2"
      }, (schema === null || schema === void 0 ? void 0 : schema.description) ? "( ".concat(schema.description, " )") : '')),
      className: "fr-theme-card-wrap"
    }, children);
  }

  var toggle = function toggle(keyList) {
    if (keyList.length > 0) {
      setCollapsed(false);
    } else {
      setCollapsed(true);
    }
  };

  return /*#__PURE__*/_react.default.createElement("div", {
    className: "w-100"
  }, /*#__PURE__*/_react.default.createElement(_collapse.default, {
    activeKey: collapsed ? [] : ['1'],
    onChange: toggle,
    bordered: theme !== 'collapse:pure',
    ghost: theme === 'collapse:ghost'
  }, /*#__PURE__*/_react.default.createElement(Panel, {
    header: /*#__PURE__*/_react.default.createElement("span", {
      style: {
        fontSize: 16,
        fontWeight: 500
      }
    }, title, /*#__PURE__*/_react.default.createElement("span", {
      className: "fr-desc ml2"
    }, (schema === null || schema === void 0 ? void 0 : schema.description) ? "( ".concat(schema.description, " )") : '')),
    key: "1",
    className: "fr-collapse-object"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)({
      'fr-collapse-object-child-row': displayType === 'row',
      'fr-collapse-object-child-column': displayType === 'column'
    })
  }, children))));
}