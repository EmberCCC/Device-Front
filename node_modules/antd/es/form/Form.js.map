{"version":3,"sources":["form/Form.jsx"],"names":["React","omit","classNames","FieldForm","List","ConfigContext","FormContext","useForm","SizeContext","SizeContextProvider","InternalForm","props","ref","contextSize","useContext","getPrefixCls","direction","form","colon","name","labelAlign","labelCol","wrapperCol","customizePrefixCls","prefixCls","hideRequiredMark","className","layout","size","scrollToFirstError","onFinishFailed","formClassName","formProps","wrapForm","__INTERNAL__","useImperativeHandle","onInternalFinishFailed","errorInfo","errorFields","length","scrollToField","vertical","Form","forwardRef"],"mappings":";;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,IAAoBC,IAApB,QAAgC,eAAhC;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,OAAOC,WAAP,IAAsBC,mBAAtB,QAAiD,gCAAjD;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAQC,GAAR,EAAgB;AAAA;;AACjC,MAAMC,WAAW,GAAGb,KAAK,CAACc,UAAN,CAAiBN,WAAjB,CAApB;;AADiC,0BAEGR,KAAK,CAACc,UAAN,CAAiBT,aAAjB,CAFH;AAAA,MAEzBU,YAFyB,qBAEzBA,YAFyB;AAAA,MAEXC,SAFW,qBAEXA,SAFW;;AAAA,MAGzBC,IAHyB,GAGgLN,KAHhL,CAGzBM,IAHyB;AAAA,MAGnBC,KAHmB,GAGgLP,KAHhL,CAGnBO,KAHmB;AAAA,MAGZC,IAHY,GAGgLR,KAHhL,CAGZQ,IAHY;AAAA,MAGNC,UAHM,GAGgLT,KAHhL,CAGNS,UAHM;AAAA,MAGMC,QAHN,GAGgLV,KAHhL,CAGMU,QAHN;AAAA,MAGgBC,UAHhB,GAGgLX,KAHhL,CAGgBW,UAHhB;AAAA,MAGuCC,kBAHvC,GAGgLZ,KAHhL,CAG4Ba,SAH5B;AAAA,MAG2DC,gBAH3D,GAGgLd,KAHhL,CAG2Dc,gBAH3D;AAAA,yBAGgLd,KAHhL,CAG6Ee,SAH7E;AAAA,MAG6EA,SAH7E,iCAGyF,EAHzF;AAAA,sBAGgLf,KAHhL,CAG6FgB,MAH7F;AAAA,MAG6FA,MAH7F,8BAGsG,YAHtG;AAAA,oBAGgLhB,KAHhL,CAGoHiB,IAHpH;AAAA,MAGoHA,IAHpH,4BAG2Hf,WAH3H;AAAA,MAGwIgB,kBAHxI,GAGgLlB,KAHhL,CAGwIkB,kBAHxI;AAAA,MAG4JC,cAH5J,GAGgLnB,KAHhL,CAG4JmB,cAH5J;AAIjC,MAAMN,SAAS,GAAGT,YAAY,CAAC,MAAD,EAASQ,kBAAT,CAA9B;AACA,MAAMQ,aAAa,GAAG7B,UAAU,CAACsB,SAAD,4DACxBA,SADwB,cACXG,MADW,GACA,IADA,0CAExBH,SAFwB,0BAESC,gBAFT,0CAGxBD,SAHwB,WAGNR,SAAS,KAAK,KAHR,0CAIxBQ,SAJwB,cAIXI,IAJW,GAIFA,IAJE,iBAK7BF,SAL6B,CAAhC;AAMA,MAAMM,SAAS,GAAG/B,IAAI,CAACU,KAAD,EAAQ,CAC1B,WAD0B,EAE1B,WAF0B,EAG1B,QAH0B,EAI1B,kBAJ0B,EAK1B,YAL0B,EAM1B,YAN0B,EAO1B,UAP0B,EAQ1B,OAR0B,EAS1B,oBAT0B,CAAR,CAAtB;;AAXiC,iBAsBdJ,OAAO,CAACU,IAAD,CAtBO;AAAA;AAAA,MAsB1BgB,QAtB0B;;AAuBjCA,EAAAA,QAAQ,CAACC,YAAT,CAAsBf,IAAtB,GAA6BA,IAA7B;AACAnB,EAAAA,KAAK,CAACmC,mBAAN,CAA0BvB,GAA1B,EAA+B;AAAA,WAAMqB,QAAN;AAAA,GAA/B;;AACA,MAAMG,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,SAAD,EAAe;AAC1C,QAAIP,cAAJ,EAAoB;AAChBA,MAAAA,cAAc,CAACO,SAAD,CAAd;AACH;;AACD,QAAIR,kBAAkB,IAAIQ,SAAS,CAACC,WAAV,CAAsBC,MAAhD,EAAwD;AACpDN,MAAAA,QAAQ,CAACO,aAAT,CAAuBH,SAAS,CAACC,WAAV,CAAsB,CAAtB,EAAyBnB,IAAhD;AACH;AACJ,GAPD;;AAQA,SAAQ,oBAAC,mBAAD;AAAqB,IAAA,IAAI,EAAES;AAA3B,KACN,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAC3BT,MAAAA,IAAI,EAAJA,IAD2B;AAE3BC,MAAAA,UAAU,EAAVA,UAF2B;AAG3BC,MAAAA,QAAQ,EAARA,QAH2B;AAI3BC,MAAAA,UAAU,EAAVA,UAJ2B;AAK3BmB,MAAAA,QAAQ,EAAEd,MAAM,KAAK,UALM;AAM3BT,MAAAA,KAAK,EAALA;AAN2B;AAA7B,KAQE,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAEC;AAAf,KAAyBa,SAAzB;AAAoC,IAAA,cAAc,EAAEI,sBAApD;AAA4E,IAAA,IAAI,EAAEH,QAAlF;AAA4F,IAAA,SAAS,EAAEF;AAAvG,KARF,CADM,CAAR;AAYH,CA7CD;;AA8CA,IAAMW,IAAI,GAAG1C,KAAK,CAAC2C,UAAN,CAAiBjC,YAAjB,CAAb;AACA,SAASH,OAAT,EAAkBH,IAAlB;AACA,eAAesC,IAAf","sourcesContent":["import * as React from 'react';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport FieldForm, { List } from 'rc-field-form';\nimport { ConfigContext } from '../config-provider';\nimport { FormContext } from './context';\nimport { useForm } from './util';\nimport SizeContext, { SizeContextProvider } from '../config-provider/SizeContext';\nconst InternalForm = (props, ref) => {\n    const contextSize = React.useContext(SizeContext);\n    const { getPrefixCls, direction } = React.useContext(ConfigContext);\n    const { form, colon, name, labelAlign, labelCol, wrapperCol, prefixCls: customizePrefixCls, hideRequiredMark, className = '', layout = 'horizontal', size = contextSize, scrollToFirstError, onFinishFailed, } = props;\n    const prefixCls = getPrefixCls('form', customizePrefixCls);\n    const formClassName = classNames(prefixCls, {\n        [`${prefixCls}-${layout}`]: true,\n        [`${prefixCls}-hide-required-mark`]: hideRequiredMark,\n        [`${prefixCls}-rtl`]: direction === 'rtl',\n        [`${prefixCls}-${size}`]: size,\n    }, className);\n    const formProps = omit(props, [\n        'prefixCls',\n        'className',\n        'layout',\n        'hideRequiredMark',\n        'wrapperCol',\n        'labelAlign',\n        'labelCol',\n        'colon',\n        'scrollToFirstError',\n    ]);\n    const [wrapForm] = useForm(form);\n    wrapForm.__INTERNAL__.name = name;\n    React.useImperativeHandle(ref, () => wrapForm);\n    const onInternalFinishFailed = (errorInfo) => {\n        if (onFinishFailed) {\n            onFinishFailed(errorInfo);\n        }\n        if (scrollToFirstError && errorInfo.errorFields.length) {\n            wrapForm.scrollToField(errorInfo.errorFields[0].name);\n        }\n    };\n    return (<SizeContextProvider size={size}>\n      <FormContext.Provider value={{\n        name,\n        labelAlign,\n        labelCol,\n        wrapperCol,\n        vertical: layout === 'vertical',\n        colon,\n    }}>\n        <FieldForm id={name} {...formProps} onFinishFailed={onInternalFinishFailed} form={wrapForm} className={formClassName}/>\n      </FormContext.Provider>\n    </SizeContextProvider>);\n};\nconst Form = React.forwardRef(InternalForm);\nexport { useForm, List };\nexport default Form;\n"],"file":"Form.js"}