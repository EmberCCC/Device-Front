{"version":3,"sources":["table/hooks/useFilter/FilterDropdown.jsx"],"names":["SubMenu","Menu","MenuItem","Item","hasSubMenu","filters","some","children","renderFilterItems","prefixCls","filteredKeys","multiple","map","filter","index","value","text","Component","Checkbox","Radio","undefined","includes","String","FilterDropdown","props","column","dropdownPrefixCls","columnKey","filterMultiple","filterState","triggerFilter","locale","getPopupContainer","filterDropdownVisible","onFilterDropdownVisibleChange","React","useState","visible","setVisible","filtered","triggerVisible","newVisible","mergedVisible","propFilteredKeys","setPropFilteredKeys","getFilteredKeysSync","setFilteredKeysSync","onSelectKeys","selectedKeys","useEffect","newFilteredKeys","openKeys","setOpenKeys","openRef","useRef","onOpenChange","keys","current","window","setTimeout","onMenuClick","clearTimeout","internalTriggerFilter","mergedKeys","length","key","onConfirm","onReset","onVisibleChange","filterDropdown","dropdownMenuClass","dropdownContent","setSelectedKeys","confirm","clearFilters","filterConfirm","filterReset","menu","filterIcon","e","stopPropagation","active"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport shallowEqual from 'shallowequal';\nimport { FilterFilled } from '@ant-design/icons';\nimport Menu from '../../../menu';\nimport Checkbox from '../../../checkbox';\nimport Radio from '../../../radio';\nimport Dropdown from '../../../dropdown';\nimport FilterDropdownMenuWrapper from './FilterWrapper';\nimport useSyncState from '../useSyncState';\nconst { SubMenu, Item: MenuItem } = Menu;\nfunction hasSubMenu(filters) {\n    return filters.some(({ children }) => children);\n}\nfunction renderFilterItems(filters, prefixCls, filteredKeys, multiple) {\n    return filters.map((filter, index) => {\n        if (filter.children) {\n            return (<SubMenu key={filter.value || index} title={filter.text} popupClassName={`${prefixCls}-dropdown-submenu`}>\n          {renderFilterItems(filter.children, prefixCls, filteredKeys, multiple)}\n        </SubMenu>);\n        }\n        const Component = multiple ? Checkbox : Radio;\n        return (<MenuItem key={filter.value !== undefined ? filter.value : index}>\n        <Component checked={filteredKeys.includes(String(filter.value))}/>\n        <span>{filter.text}</span>\n      </MenuItem>);\n    });\n}\nfunction FilterDropdown(props) {\n    const { prefixCls, column, dropdownPrefixCls, columnKey, filterMultiple, filterState, triggerFilter, locale, children, getPopupContainer, } = props;\n    const { filterDropdownVisible, onFilterDropdownVisibleChange } = column;\n    const [visible, setVisible] = React.useState(false);\n    const filtered = !!(filterState && filterState.filteredKeys);\n    const triggerVisible = (newVisible) => {\n        setVisible(newVisible);\n        if (onFilterDropdownVisibleChange) {\n            onFilterDropdownVisibleChange(newVisible);\n        }\n    };\n    const mergedVisible = typeof filterDropdownVisible === 'boolean' ? filterDropdownVisible : visible;\n    // ===================== Select Keys =====================\n    const [propFilteredKeys, setPropFilteredKeys] = React.useState(filterState && filterState.filteredKeys);\n    const [getFilteredKeysSync, setFilteredKeysSync] = useSyncState(propFilteredKeys || []);\n    const onSelectKeys = ({ selectedKeys }) => {\n        setFilteredKeysSync(selectedKeys);\n    };\n    React.useEffect(() => {\n        // Sync internal filtered keys when props key changed\n        const newFilteredKeys = filterState && filterState.filteredKeys;\n        if (!shallowEqual(propFilteredKeys, newFilteredKeys)) {\n            setPropFilteredKeys(newFilteredKeys);\n            onSelectKeys({ selectedKeys: newFilteredKeys || [] });\n        }\n    }, [filterState]);\n    // ====================== Open Keys ======================\n    const [openKeys, setOpenKeys] = React.useState([]);\n    const openRef = React.useRef();\n    const onOpenChange = (keys) => {\n        openRef.current = window.setTimeout(() => {\n            setOpenKeys(keys);\n        });\n    };\n    const onMenuClick = () => {\n        window.clearTimeout(openRef.current);\n    };\n    React.useEffect(() => {\n        return () => {\n            window.clearTimeout(openRef.current);\n        };\n    }, []);\n    // ======================= Submit ========================\n    const internalTriggerFilter = (keys) => {\n        triggerVisible(false);\n        const mergedKeys = keys && keys.length ? keys : null;\n        if (mergedKeys === null && (!filterState || !filterState.filteredKeys)) {\n            return null;\n        }\n        triggerFilter({\n            column,\n            key: columnKey,\n            filteredKeys: mergedKeys,\n        });\n    };\n    const onConfirm = () => {\n        internalTriggerFilter(getFilteredKeysSync());\n    };\n    const onReset = () => {\n        internalTriggerFilter([]);\n    };\n    const onVisibleChange = (newVisible) => {\n        triggerVisible(newVisible);\n        // Default will filter when closed\n        if (!newVisible && !column.filterDropdown) {\n            onConfirm();\n        }\n    };\n    // ======================== Style ========================\n    const dropdownMenuClass = classNames({\n        [`${dropdownPrefixCls}-menu-without-submenu`]: !hasSubMenu(column.filters || []),\n    });\n    let dropdownContent;\n    if (typeof column.filterDropdown === 'function') {\n        dropdownContent = column.filterDropdown({\n            prefixCls: `${dropdownPrefixCls}-custom`,\n            setSelectedKeys: (selectedKeys) => onSelectKeys({ selectedKeys }),\n            selectedKeys: getFilteredKeysSync(),\n            confirm: onConfirm,\n            clearFilters: onReset,\n            filters: column.filters,\n            visible: mergedVisible,\n        });\n    }\n    else if (column.filterDropdown) {\n        dropdownContent = column.filterDropdown;\n    }\n    else {\n        dropdownContent = (<>\n        <Menu multiple={filterMultiple} prefixCls={`${dropdownPrefixCls}-menu`} className={dropdownMenuClass} onClick={onMenuClick} onSelect={onSelectKeys} onDeselect={onSelectKeys} selectedKeys={(getFilteredKeysSync() || [])} getPopupContainer={getPopupContainer} openKeys={openKeys} onOpenChange={onOpenChange}>\n          {renderFilterItems(column.filters, prefixCls, getFilteredKeysSync(), filterMultiple)}\n        </Menu>\n        <div className={`${prefixCls}-dropdown-btns`}>\n          <a className={`${prefixCls}-dropdown-link confirm`} onClick={onConfirm}>\n            {locale.filterConfirm}\n          </a>\n          <a className={`${prefixCls}-dropdown-link clear`} onClick={onReset}>\n            {locale.filterReset}\n          </a>\n        </div>\n      </>);\n    }\n    const menu = (<FilterDropdownMenuWrapper className={`${prefixCls}-dropdown`}>\n      {dropdownContent}\n    </FilterDropdownMenuWrapper>);\n    let filterIcon;\n    if (typeof column.filterIcon === 'function') {\n        filterIcon = column.filterIcon(filtered);\n    }\n    else if (column.filterIcon) {\n        filterIcon = column.filterIcon;\n    }\n    else {\n        filterIcon = <FilterFilled />;\n    }\n    return (<div className={classNames(`${prefixCls}-column`)}>\n      <span className={`${prefixCls}-column-title`}>{children}</span>\n\n      <span className={classNames(`${prefixCls}-trigger-container`, {\n        [`${prefixCls}-trigger-container-open`]: mergedVisible,\n    })} onClick={e => {\n        e.stopPropagation();\n    }}>\n        <Dropdown overlay={menu} trigger={['click']} visible={mergedVisible} onVisibleChange={onVisibleChange} getPopupContainer={getPopupContainer} placement=\"bottomRight\">\n          <span role=\"button\" tabIndex={-1} className={classNames(`${prefixCls}-trigger`, {\n        active: filtered,\n    })}>\n            {filterIcon}\n          </span>\n        </Dropdown>\n      </span>\n    </div>);\n}\nexport default FilterDropdown;\n"],"file":"FilterDropdown.js"}