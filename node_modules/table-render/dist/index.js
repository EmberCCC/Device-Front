'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

require('antd/es/config-provider/style');
var _ConfigProvider = require('antd/es/config-provider');
var zh_CN = require('antd/lib/locale/zh_CN');
var SearchForm = require('form-render');
var _get = require('lodash.get');
var React = require('react');
require('antd/es/button/style');
var _Button = require('antd/es/button');
require('antd/es/radio/style');
var _Radio = require('antd/es/radio');
require('antd/es/table/style');
var _Table = require('antd/es/table');
require('antd/es/space/style');
var _Space = require('antd/es/space');
var dayjs = require('dayjs');
require('antd/es/result/style');
var _Result = require('antd/es/result');
require('antd/es/message/style');
var _message = require('antd/es/message');
require('antd/es/typography/style');
var _Typography = require('antd/es/typography');
require('antd/es/tooltip/style');
var _Tooltip = require('antd/es/tooltip');
var _ColumnHeightOutlined = require('@ant-design/icons/lib/icons/ColumnHeightOutlined');
require('antd/es/menu/style');
var _Menu = require('antd/es/menu');
require('antd/es/dropdown/style');
var _Dropdown = require('antd/es/dropdown');
var _FullscreenOutlined = require('@ant-design/icons/lib/icons/FullscreenOutlined');
var _FullscreenExitOutlined = require('@ant-design/icons/lib/icons/FullscreenExitOutlined');
var _ReloadOutlined = require('@ant-design/icons/lib/icons/ReloadOutlined');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _ConfigProvider__default = /*#__PURE__*/_interopDefaultLegacy(_ConfigProvider);
var zh_CN__default = /*#__PURE__*/_interopDefaultLegacy(zh_CN);
var SearchForm__default = /*#__PURE__*/_interopDefaultLegacy(SearchForm);
var _get__default = /*#__PURE__*/_interopDefaultLegacy(_get);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var _Button__default = /*#__PURE__*/_interopDefaultLegacy(_Button);
var _Radio__default = /*#__PURE__*/_interopDefaultLegacy(_Radio);
var _Table__default = /*#__PURE__*/_interopDefaultLegacy(_Table);
var _Space__default = /*#__PURE__*/_interopDefaultLegacy(_Space);
var dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);
var _Result__default = /*#__PURE__*/_interopDefaultLegacy(_Result);
var _message__default = /*#__PURE__*/_interopDefaultLegacy(_message);
var _Typography__default = /*#__PURE__*/_interopDefaultLegacy(_Typography);
var _Tooltip__default = /*#__PURE__*/_interopDefaultLegacy(_Tooltip);
var _ColumnHeightOutlined__default = /*#__PURE__*/_interopDefaultLegacy(_ColumnHeightOutlined);
var _Menu__default = /*#__PURE__*/_interopDefaultLegacy(_Menu);
var _Dropdown__default = /*#__PURE__*/_interopDefaultLegacy(_Dropdown);
var _FullscreenOutlined__default = /*#__PURE__*/_interopDefaultLegacy(_FullscreenOutlined);
var _FullscreenExitOutlined__default = /*#__PURE__*/_interopDefaultLegacy(_FullscreenExitOutlined);
var _ReloadOutlined__default = /*#__PURE__*/_interopDefaultLegacy(_ReloadOutlined);

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }

  return target;
}

function _typeof(obj) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, _typeof(obj);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return _setPrototypeOf(o, p);
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _possibleConstructorReturn(self, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }

  return _assertThisInitialized(self);
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];

  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;

  var _s, _e;

  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

  return arr2;
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

var Ctx = /*#__PURE__*/React.createContext({});

var useTable = function useTable() {
  return React.useContext(Ctx);
}; // 组件最顶层传入的所有props
var useSet = function useSet(initState) {
  var _useReducer = React.useReducer(function (state, newState) {
    var action = newState;

    if (typeof newState === 'function') {
      action = action(state);
    }

    if (newState.action && newState.payload) {
      action = newState.payload;

      if (typeof action === 'function') {
        action = action(state);
      }
    }

    var result = _objectSpread2(_objectSpread2({}, state), action);

    return result;
  }, initState),
      _useReducer2 = _slicedToArray(_useReducer, 2),
      state = _useReducer2[0],
      setState = _useReducer2[1];

  var setStateWithActionName = function setStateWithActionName(state, actionName) {
    setState(state);
  };

  return [state, setStateWithActionName];
};

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z = ".tr-search {\n  width: 100%;\n  background: #fff;\n  padding: 24px 24px 0;\n  margin-bottom: 16px;\n}\n.tr-search .search-btn {\n  flex: 1;\n}\n\n.tr-table-wrapper {\n  background: #fff;\n  padding: 0 24px 24px;\n  width: 100%;\n  overflow: auto;\n}\n\n.tr-table-top {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 64px;\n}\n\n.tr-table-top-nohead {\n  height: 24px;\n}\n\n.tr-action-list {\n  display: flex;\n  justify-content: center;\n}\n\n.tr-single-tab {\n  color: rgba(0, 0, 0, 0.85);\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px;\n  opacity: 0.85;\n}\n\n.tr-extra-tab {\n  display: inline-block;\n  margin-left: 16px;\n}\n\n.tr-search-btn.fr-field {\n  padding-right: 0;\n}\n\n.mb2 {\n  margin-bottom: 0.5rem;\n}\n\n.mr {\n  margin-right: 8px;\n}\n\n.flex {\n  display: flex;\n}\n\n.justify-end {\n  justify-content: flex-end;\n}\n\n.w-100 {\n  width: 100%;\n}\n";
styleInject(css_248z);

var _excluded = ["current", "pageSize", "tab", "sorter"],
    _excluded2 = ["rows", "total", "pageSize"];

var useTableRoot = function useTableRoot(props) {
  var form = SearchForm.useForm();

  var _useSet = useSet({
    loading: false,
    api: null,
    tab: 0,
    dataSource: [],
    extraData: null,
    extraParams: {},
    pagination: {
      current: 1,
      pageSize: 10,
      total: 1
    },
    tableSize: 'default'
  }),
      _useSet2 = _slicedToArray(_useSet, 2),
      state = _useSet2[0],
      set = _useSet2[1];

  var api = React.useRef();
  var afterSearch = React.useRef();
  var pagination = state.pagination,
      currentTab = state.tab;

  var doSearch = function doSearch(params, customSearch) {
    var _ref = params || {},
        current = _ref.current,
        pageSize = _ref.pageSize,
        tab = _ref.tab,
        sorter = _ref.sorter,
        extraSearch = _objectWithoutProperties(_ref, _excluded);

    var _current = current || 1;

    var _pageSize = pageSize || 10;

    var _tab = currentTab;

    if (['string', 'number'].indexOf(_typeof(tab)) > -1) {
      _tab = tab;
    }

    var _pagination = {
      current: _current,
      pageSize: _pageSize
    };

    if (typeof api.current === 'function') {
      basicSearch(api.current);
    } else if (Array.isArray(api.current)) {
      var _api = _get__default['default'](api.current, "[".concat(_tab, "].api"));

      if (typeof _api === 'function') {
        basicSearch(_api);
      } else {
        console.warn('api 不是函数，检查 <Search /> 的 props');
      }
    } else {
      console.warn('api 不是函数，检查 <Search /> 的 props');
    }

    function basicSearch(api) {
      set({
        loading: true
      });

      var _params = _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, form.getValues()), customSearch), extraSearch), _pagination);

      if (Array.isArray(api)) {
        _params = _objectSpread2(_objectSpread2({}, _params), {}, {
          tab: tab
        });
      }

      Promise.resolve(api(_params, sorter)).then(function (res) {
        // TODO：这里校验res是否规范
        var rows = res.rows,
            total = res.total,
            pageSize = res.pageSize,
            extraData = _objectWithoutProperties(res, _excluded2);

        set(_objectSpread2(_objectSpread2({
          loading: false,
          dataSource: rows
        }, extraData), {}, {
          pagination: _objectSpread2(_objectSpread2({}, _pagination), {}, {
            total: total,
            pageSize: pageSize || _pageSize
          })
        }));
        afterSearch.current(_objectSpread2({
          rows: rows,
          total: total,
          pageSize: pageSize
        }, extraData));
      }).catch(function (err) {
        set({
          loading: false
        });
      });
    }
  };

  var refresh = function refresh(params, moreSearch) {
    var _stay = params && params.stay || false;

    var _tab = params && params.tab;

    var _search = moreSearch || {};

    doSearch(_objectSpread2(_objectSpread2({}, params), {}, {
      current: _stay ? pagination.current : 1,
      tab: _tab,
      pageSize: pagination.pageSize
    }), _search);
  };

  var changeTab = function changeTab(tab) {
    if (['string', 'number'].indexOf(_typeof(tab)) > -1) {
      set({
        tab: tab
      });
      refresh({
        tab: tab
      });
    } else {
      console.error('changeTab的入参必须是number或string');
    }
  };

  var syncMethods = function syncMethods(_ref2) {
    var searchApi = _ref2.searchApi,
        syncAfterSearch = _ref2.syncAfterSearch;
    api.current = searchApi;
    afterSearch.current = syncAfterSearch;
    set({
      api: searchApi
    });
  };

  var context = {
    tableState: _objectSpread2(_objectSpread2({}, state), {}, {
      search: form.getValues()
    }),
    setTable: set,
    doSearch: doSearch,
    refresh: refresh,
    changeTab: changeTab,
    syncMethods: syncMethods,
    form: form
  };
  return context;
};

var Container = function Container(props, ref) {
  var context = useTableRoot();
  React.useImperativeHandle(ref, function () {
    return context;
  });
  return /*#__PURE__*/React__default['default'].createElement(_ConfigProvider__default['default'], {
    locale: zh_CN__default['default']
  }, /*#__PURE__*/React__default['default'].createElement(Ctx.Provider, _objectSpread2(_objectSpread2({}, props), {}, {
    value: context
  })));
};

var TableProvider = /*#__PURE__*/React.forwardRef(Container);

var withTable = function withTable(Component) {
  return function (props) {
    return /*#__PURE__*/React__default['default'].createElement(TableProvider, null, /*#__PURE__*/React__default['default'].createElement(Component, _objectSpread2({}, props)));
  };
};

var _excluded$1 = ["clearSearch", "submit", "style", "className"],
    _excluded2$1 = ["searchBtnRender", "searchBtnStyle", "searchBtnClassName", "form"];

var SearchBtn = function SearchBtn(_ref) {
  var clearSearch = _ref.clearSearch,
      submit = _ref.submit,
      _ref$style = _ref.style,
      style = _ref$style === void 0 ? {} : _ref$style,
      _ref$className = _ref.className,
      className = _ref$className === void 0 ? '' : _ref$className,
      rest = _objectWithoutProperties(_ref, _excluded$1);

  var _useTable = useTable(),
      _useTable$tableState = _useTable.tableState,
      tableState = _useTable$tableState === void 0 ? {} : _useTable$tableState;

  var loading = tableState.loading;
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: "flex justify-end w-100 ".concat(className),
    style: style
  }, /*#__PURE__*/React__default['default'].createElement(_Button__default['default'], {
    loading: loading,
    className: "mr",
    type: "primary",
    onClick: submit
  }, rest.searchText), /*#__PURE__*/React__default['default'].createElement(_Button__default['default'], {
    onClick: clearSearch
  }, rest.resetText));
};

var MySearchBtn = function MySearchBtn(_ref2) {
  var searchBtnRender = _ref2.searchBtnRender,
      searchBtnStyle = _ref2.searchBtnStyle,
      searchBtnClassName = _ref2.searchBtnClassName,
      form = _ref2.form,
      rest = _objectWithoutProperties(_ref2, _excluded2$1);

  var clearSearch = function clearSearch() {
    form.resetFields();
    form.submit();
  };

  var searchBtnArr = typeof searchBtnRender === 'function' ? searchBtnRender(form.submit, clearSearch) : [];

  if (searchBtnRender) {
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: "flex justify-end w-100"
    }, Array.isArray(searchBtnArr) && searchBtnArr.map(function (ui, idx) {
      return /*#__PURE__*/React__default['default'].createElement("div", {
        key: idx.toString(),
        style: {
          marginLeft: 8
        }
      }, ui);
    }));
  }

  return /*#__PURE__*/React__default['default'].createElement(SearchBtn, _objectSpread2({
    submit: form.submit,
    clearSearch: clearSearch,
    style: searchBtnStyle || {},
    className: searchBtnClassName || ''
  }, rest));
};

var Search = function Search(props) {
  var searchBtnRender = props.searchBtnRender,
      searchBtnStyle = props.searchBtnStyle,
      searchBtnClassName = props.searchBtnClassName,
      _props$searchText = props.searchText,
      searchText = _props$searchText === void 0 ? '查询' : _props$searchText,
      _props$resetText = props.resetText,
      resetText = _props$resetText === void 0 ? '重置' : _props$resetText,
      _props$searchWithErro = props.searchWithError,
      searchWithError = _props$searchWithErro === void 0 ? true : _props$searchWithErro,
      _props$style = props.style,
      style = _props$style === void 0 ? {} : _props$style;

  var _useState = React.useState({}),
      _useState2 = _slicedToArray(_useState, 2),
      formSchema = _useState2[0],
      setSchema = _useState2[1];

  var _useTable2 = useTable(),
      refresh = _useTable2.refresh,
      syncMethods = _useTable2.syncMethods,
      setTable = _useTable2.setTable,
      form = _useTable2.form,
      tableState = _useTable2.tableState;

  var _schema = props.schema || props.propsSchema;

  var searchOnMount = true;

  if (!props.searchOnMount && props.searchOnMount !== undefined) {
    searchOnMount = false;
  }

  var modifiedSchema = React.useRef(); // 给schema里拼接一个buttons

  var modifySchema = function modifySchema() {
    var noDiff = JSON.stringify(modifiedSchema.current) === JSON.stringify(_schema);

    if (_schema && _schema.properties) {
      if (formSchema && noDiff) return;

      try {
        var curSchema = JSON.parse(JSON.stringify(_schema));
        curSchema.properties.searchBtn = {
          type: 'string',
          widget: 'searchBtn',
          className: 'search-btn',
          bind: false // width: calcWidth(_schema),

        };
        setSchema(curSchema);
      } catch (error) {
        console.error(error);
      }
    } else {
      console.error('SearchForm 传入了不正确的 schema，参考文档: https://xrender.fun/form-render/form-render/config/schema');
    }
  };

  React.useEffect(function () {
    if (!props.hidden) {
      modifySchema();
    }
  }, [_schema]);
  React.useEffect(function () {
    syncMethods({
      searchApi: props.api,
      syncAfterSearch: props.afterSearch
    });

    if (!props.hidden && searchOnMount) {
      form.submit();
    } // 隐藏search组件时，不会触发form.submit


    if (props.hidden) {
      refresh();
    }
  }, []);
  var btnProps = {
    searchBtnRender: searchBtnRender,
    searchBtnStyle: searchBtnStyle,
    searchBtnClassName: searchBtnClassName,
    searchText: searchText,
    resetText: resetText,
    form: form
  };
  if (props.hidden) return null;

  var onFinish = function onFinish(data, errors) {
    if (!searchWithError && (errors === null || errors === void 0 ? void 0 : errors.length) > 0) {
      return;
    }

    if (typeof props.onSearch === 'function') {
      props.onSearch(data);
    }

    refresh(_objectSpread2(_objectSpread2({}, data), {}, {
      sorter: tableState === null || tableState === void 0 ? void 0 : tableState.sorter
    }));
  };

  var searchFormProps = _objectSpread2(_objectSpread2({
    displayType: 'row',
    onFinish: onFinish
  }, props), {}, {
    form: form,
    schema: formSchema,
    widgets: _objectSpread2({
      searchBtn: function searchBtn() {
        return /*#__PURE__*/React__default['default'].createElement(MySearchBtn, _objectSpread2({}, btnProps));
      }
    }, props.widgets)
  });

  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: "tr-search ".concat(props.className),
    style: style,
    onKeyDown: function onKeyDown(e) {
      if (e.keyCode === 13) {
        form.submit();
      }
    }
  }, /*#__PURE__*/React__default['default'].createElement(SearchForm__default['default'], _objectSpread2({}, searchFormProps)));
};

var getDateTime = function getDateTime(time) {
  if (!time) return null;
  return dayjs__default['default'](time).format('YYYY-MM-DD HH:mm');
};
var getDate = function getDate(time) {
  if (!time) return null;
  return dayjs__default['default'](time).format('YYYY-MM-DD');
}; // 格式化千分符

var getMoneyType = function getMoneyType(num) {
  if (!num) return null;
  return "\xA5".concat(num).replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,');
}; // 如果是函数，则解析，如果不是，直接返回值

var ErrorBoundary = /*#__PURE__*/function (_React$Component) {
  _inherits(ErrorBoundary, _React$Component);

  var _super = _createSuper(ErrorBoundary);

  function ErrorBoundary() {
    var _this;

    _classCallCheck(this, ErrorBoundary);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.state = {
      hasError: false,
      errorInfo: ''
    };
    return _this;
  }

  _createClass(ErrorBoundary, [{
    key: "componentDidCatch",
    value: function componentDidCatch(error, errorInfo) {
      // eslint-disable-next-line no-console
      console.log(error, errorInfo);
    }
  }, {
    key: "render",
    value: function render() {
      if (this.state.hasError) {
        // You can render any custom fallback UI
        return /*#__PURE__*/React__default['default'].createElement(_Result__default['default'], {
          status: "error",
          title: "Something went wrong.",
          extra: this.state.errorInfo
        });
      } //@ts-ignore


      return this.props.children;
    }
  }], [{
    key: "getDerivedStateFromError",
    value: function getDerivedStateFromError(error) {
      return {
        hasError: true,
        errorInfo: error.message
      };
    }
  }]);

  return ErrorBoundary;
}(React__default['default'].Component);

var renderEllipsis = function renderEllipsis(dom, text, item) {
  if (!item.ellipsis) {
    return /*#__PURE__*/React__default['default'].createElement("span", null, /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, dom));
  }

  return /*#__PURE__*/React__default['default'].createElement(_Tooltip__default['default'], {
    title: getEnumValue(text, item)
  }, dom);
};
var renderCopyable = function renderCopyable(text, item) {
  if (item.copyable || item.ellipsis) {
    return /*#__PURE__*/React__default['default'].createElement(_Typography__default['default'].Text, {
      style: {
        maxWidth: '100%',
        margin: 0,
        padding: 0
      },
      copyable: item.copyable && text ? {
        text: text,
        onCopy: function onCopy() {
          return _message__default['default'].success('复制成功');
        }
      } : undefined,
      ellipsis: item.ellipsis || false
    }, getEnumValue(text, item));
  }

  return getEnumValue(text, item);
};
var getEnumValue = function getEnumValue(text, item) {
  var valueEnum = item.enum || undefined;
  return valueEnum && valueEnum[text] ? valueEnum[text] : text;
};
var renderCode = function renderCode(code) {
  return code ? /*#__PURE__*/React__default['default'].createElement("pre", {
    style: {
      padding: 16,
      overflow: 'auto',
      fontSize: '85%',
      lineHeight: 1.45,
      backgroundColor: '#f6f8fa',
      borderRadius: 3
    }
  }, /*#__PURE__*/React__default['default'].createElement("code", {
    style: {
      whiteSpace: 'pre-wrap'
    }
  }, code)) : null;
}; // 渲染单元格

var renderDom = function renderDom(val, item) {
  if (_typeof(val) === 'object') {
    return;
  }

  if (item.valueType === 'code') {
    return renderCode(val);
  }

  var copyHoc = renderCopyable(val, item);
  var ellipsisHoc = renderEllipsis(copyHoc, val, item);
  return ellipsisHoc;
};

var DesityIcon = function DesityIcon() {
  var _useTable = useTable(),
      tableState = _useTable.tableState,
      setTable = _useTable.setTable;

  var dropRef = React.useRef(); // class组件用 React.createRef()

  return /*#__PURE__*/React__default['default'].createElement("div", {
    ref: dropRef
  }, /*#__PURE__*/React__default['default'].createElement(_Dropdown__default['default'], {
    getPopupContainer: function getPopupContainer() {
      return dropRef.current;
    },
    overlay: /*#__PURE__*/React__default['default'].createElement(_Menu__default['default'], {
      selectedKeys: [tableState.tableSize],
      onClick: function onClick(_ref) {
        var key = _ref.key;
        setTable({
          tableSize: key
        });
      },
      style: {
        width: 80
      }
    }, /*#__PURE__*/React__default['default'].createElement(_Menu__default['default'].Item, {
      key: "default"
    }, "\u9ED8\u8BA4"), /*#__PURE__*/React__default['default'].createElement(_Menu__default['default'].Item, {
      key: "middle"
    }, "\u4E2D\u7B49"), /*#__PURE__*/React__default['default'].createElement(_Menu__default['default'].Item, {
      key: "small"
    }, "\u7D27\u51D1")),
    trigger: ['click']
  }, /*#__PURE__*/React__default['default'].createElement(_Tooltip__default['default'], {
    title: "\u8868\u683C\u5BC6\u5EA6"
  }, /*#__PURE__*/React__default['default'].createElement(_ColumnHeightOutlined__default['default'], null))));
};

var FullScreenIcon = function FullScreenIcon(props) {
  var _useState = React.useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      isFullScreen = _useState2[0],
      setFullScreen = _useState2[1];

  var fullScreen = props.fullScreen;
  return isFullScreen ? /*#__PURE__*/React__default['default'].createElement(_Tooltip__default['default'], {
    title: "\u9000\u51FA\u5168\u5C4F"
  }, /*#__PURE__*/React__default['default'].createElement(_FullscreenExitOutlined__default['default'], {
    onClick: function onClick() {
      document.exitFullscreen();
      setFullScreen(false);
    }
  })) : /*#__PURE__*/React__default['default'].createElement(_Tooltip__default['default'], {
    title: "\u5168\u5C4F"
  }, /*#__PURE__*/React__default['default'].createElement(_FullscreenOutlined__default['default'], {
    onClick: function onClick() {
      if (!document.fullscreenEnabled) {
        _message__default['default'].warning('当前页面不支持全屏功能');

        return;
      }

      if (!document.fullscreenElement) {
        setFullScreen(true);
        fullScreen().catch(function (err) {
          return _message__default['default'].error(err.message);
        });
      }
    }
  }));
};

var ReloadIcon = function ReloadIcon() {
  var _useTable = useTable(),
      refresh = _useTable.refresh;

  return /*#__PURE__*/React__default['default'].createElement(_Tooltip__default['default'], {
    title: "\u5237\u65B0"
  }, /*#__PURE__*/React__default['default'].createElement(_ReloadOutlined__default['default'], {
    onClick: function onClick() {
      return refresh();
    }
  }));
};

var ToolBar = function ToolBar(props) {
  return /*#__PURE__*/React__default['default'].createElement(_Space__default['default'], {
    size: 14,
    style: {
      fontSize: 16,
      cursor: 'pointer'
    }
  }, /*#__PURE__*/React__default['default'].createElement(ReloadIcon, null), /*#__PURE__*/React__default['default'].createElement(DesityIcon, null), /*#__PURE__*/React__default['default'].createElement(FullScreenIcon, _objectSpread2({}, props)));
};

var _excluded$2 = ["title"];

var ProTable = function ProTable(props) {
  var _props$pagination, _props$pagination2, _props$pagination3;

  //@ts-ignore
  if (props.dataSource) {
    console.error('设置table-render的数据请使用api，具体使用可参考：https://form-render.github.io/table-render/guide/demo#%E5%9F%BA%E6%9C%AC-demo');
  }

  var _useTable = useTable(),
      tableState = _useTable.tableState,
      setTable = _useTable.setTable,
      doSearch = _useTable.doSearch;

  var dataSource = tableState.dataSource,
      pagination = tableState.pagination,
      loading = tableState.loading,
      api = tableState.api,
      tableSize = tableState.tableSize;
  var rootRef = React.useRef(null); // ProTable组件的ref

  var onChange = function onChange(_ref, filters, sorter) {
    var current = _ref.current,
        pageSize = _ref.pageSize;
    setTable({
      pagination: _objectSpread2(_objectSpread2({}, pagination), {}, {
        current: current,
        pageSize: pageSize
      }),
      sorter: sorter
    });
    if (!props.pageChangeWithRequest && props.pageChangeWithRequest !== undefined) return;
    doSearch({
      current: current,
      pageSize: pageSize,
      sorter: sorter
    });
  };

  var debug = props.debug,
      headerTitle = props.headerTitle,
      toolbarRender = props.toolbarRender,
      columns = props.columns,
      _props$style = props.style,
      style = _props$style === void 0 ? {} : _props$style,
      _props$className = props.className,
      className = _props$className === void 0 ? '' : _props$className,
      _props$toolbarAction = props.toolbarAction,
      toolbarAction = _props$toolbarAction === void 0 ? false : _props$toolbarAction;
  columns.map(function (item) {
    var result = item; // 用户在columns中自定义的render会覆盖tr的预设render

    if (result.render) return result;

    switch (result.valueType) {
      case 'date':
        result.render = function (value) {
          return renderDom(getDate(value), result);
        };

        break;

      case 'dateTime':
        result.render = function (value) {
          return renderDom(getDateTime(value), result);
        };

        break;

      case 'money':
        result.render = function (value) {
          return renderDom(getMoneyType(value), result);
        };

        break;

      case 'code':
        result.render = function (value) {
          return renderDom(value, result);
        };

        break;

      case 'text':
      default:
        result.render = function (value) {
          return renderDom(value, result);
        };

    }

    return result;
  });

  var tableProps = _objectSpread2(_objectSpread2({}, props), {}, {
    onChange: onChange,
    // dataSource不准在使用ProTable时用props赋值
    dataSource: dataSource,
    pagination: props.pagination === false ? false : _objectSpread2(_objectSpread2({
      // onChange: onPageChange,
      size: 'small'
    }, props.pagination), {}, {
      pageSize: ((_props$pagination = props.pagination) === null || _props$pagination === void 0 ? void 0 : _props$pagination.pageSize) || pagination.pageSize,
      total: ((_props$pagination2 = props.pagination) === null || _props$pagination2 === void 0 ? void 0 : _props$pagination2.total) || pagination.total,
      current: ((_props$pagination3 = props.pagination) === null || _props$pagination3 === void 0 ? void 0 : _props$pagination3.current) || pagination.current
    }),
    loading: loading,
    size: tableSize
  });

  var toolbarArray = typeof toolbarRender === 'function' ? toolbarRender() : [];
  var showTableTop = headerTitle || toolbarArray && toolbarArray.length || Array.isArray(api);

  var fullScreen = function fullScreen() {
    var _rootRef$current;

    return Promise.resolve((_rootRef$current = rootRef.current) === null || _rootRef$current === void 0 ? void 0 : _rootRef$current.requestFullscreen());
  };

  React.useEffect(function () {
    if (props.size) {
      setTable({
        tableSize: props.size
      });
    }
  }, []);
  return /*#__PURE__*/React__default['default'].createElement(ErrorBoundary, null, /*#__PURE__*/React__default['default'].createElement("div", {
    className: "tr-table-wrapper ".concat(className),
    style: style,
    ref: rootRef,
    id: "tr-table"
  }, debug ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: "mv2 bg-black-05 pa2 br2"
  }, /*#__PURE__*/React__default['default'].createElement("div", null, 'dataSource:' + JSON.stringify(dataSource))) : null, /*#__PURE__*/React__default['default'].createElement("div", {
    className: showTableTop ? 'tr-table-top' : 'tr-table-top-nohead'
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: "tr-table-title"
  }, /*#__PURE__*/React__default['default'].createElement(TableTitle, _objectSpread2({
    title: headerTitle
  }, props))), /*#__PURE__*/React__default['default'].createElement("div", {
    style: {
      display: 'flex',
      alignItems: 'flex-start'
    }
  }, /*#__PURE__*/React__default['default'].createElement(_Space__default['default'], {
    align: "center"
  }, /*#__PURE__*/React__default['default'].createElement(_Space__default['default'], {
    size: 8,
    style: {
      marginRight: 8
    }
  }, Array.isArray(toolbarArray) && toolbarArray.map(function (ui, idx) {
    return /*#__PURE__*/React__default['default'].createElement("div", {
      key: idx.toString()
    }, ui);
  })), toolbarAction && /*#__PURE__*/React__default['default'].createElement(ToolBar, {
    fullScreen: fullScreen
  })))), /*#__PURE__*/React__default['default'].createElement(_Table__default['default'], _objectSpread2({}, tableProps))));
};

var TableTitle = function TableTitle(_ref2) {
  var title = _ref2.title,
      rest = _objectWithoutProperties(_ref2, _excluded$2);

  var _useTable2 = useTable(),
      tableState = _useTable2.tableState,
      setTable = _useTable2.setTable,
      doSearch = _useTable2.doSearch;

  var tab = tableState.tab,
      api = tableState.api;

  var _tab = tab || 0;

  var onTabChange = function onTabChange(e) {
    if (rest.onTabChange && typeof rest.onTabChange === 'function') {
      return rest.onTabChange(e);
    }

    var _tab = e.target.value;
    setTable({
      tab: _tab
    });
    doSearch({
      tab: _tab
    });
  };

  if (typeof api === 'function') return /*#__PURE__*/React__default['default'].createElement("div", {
    className: "tr-single-tab"
  }, title);

  if (api && Array.isArray(api)) {
    if (api.length === 1) return /*#__PURE__*/React__default['default'].createElement("div", {
      className: "tr-single-tab"
    }, api[0].name);
    return /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, /*#__PURE__*/React__default['default'].createElement(_Radio__default['default'].Group, {
      onChange: onTabChange,
      value: _tab
    }, api.map(function (item, i) {
      return /*#__PURE__*/React__default['default'].createElement(_Radio__default['default'].Button, {
        key: i.toString(),
        value: i
      }, item.name);
    })), title && /*#__PURE__*/React__default['default'].createElement("div", {
      className: "tr-extra-tab"
    }, title));
  }

  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: "tr-single-tab"
  }); // 给一个空的占位
};

exports.Search = Search;
exports.Table = ProTable;
exports.TableProvider = TableProvider;
exports.useTable = useTable;
exports.withTable = withTable;
